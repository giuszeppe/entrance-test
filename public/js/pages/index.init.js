/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/index.init.js":
/*!******************************************!*\
  !*** ./resources/js/pages/index.init.js ***!
  \******************************************/
/***/ (() => {

eval("/*\r\nTemplate Name: Vhato - Responsive Bootstrap 5 Chat App\r\nAuthor: Themesbrand\r\nWebsite: https://themesbrand.com/\r\nContact: themesbrand@gmail.com\r\nFile: Index init js\r\n*/\n(function () {\n  var isreplyMessage = false;\n  var currentChatId = \"users-chat\";\n  var dummyImage = \"images/users/user-dummy-img.jpg\";\n  var currentSelectedChat = \"users\";\n  var url = window.location.origin + \"/js/dir/\";\n  var usersList = [];\n  var userChatId = 1;\n  document.getElementById(\"copyClipBoard\").style.display = \"none\";\n  document.getElementById(\"copyClipBoardChannel\").style.display = \"none\"; // chat user responsive hide show\n\n  function toggleSelected() {\n    var userChatElement = document.getElementsByClassName(\"user-chat\");\n    document.querySelectorAll(\".chat-user-list li a\").forEach(function (item) {\n      item.addEventListener(\"click\", function (event) {\n        userChatElement.forEach(function (elm) {\n          elm.classList.add(\"user-chat-show\");\n        }); // chat user list link active\n\n        var chatUserList = document.querySelector(\".chat-user-list li.active\");\n        if (chatUserList) chatUserList.classList.remove(\"active\");\n        this.parentNode.classList.add(\"active\");\n      });\n    });\n    document.querySelectorAll(\".sort-contact ul li\").forEach(function (item2) {\n      item2.addEventListener(\"click\", function (event) {\n        userChatElement.forEach(function (elm) {\n          elm.classList.add(\"user-chat-show\");\n        });\n      });\n    }); // user-chat-remove\n\n    document.querySelectorAll(\".user-chat-remove\").forEach(function (item) {\n      item.addEventListener(\"click\", function (event) {\n        userChatElement.forEach(function (elm) {\n          elm.classList.remove(\"user-chat-show\");\n        });\n      });\n    });\n  } // single to channel and channel to single chat conversation\n\n\n  function chatSwap() {\n    document.querySelectorAll(\"#favourite-users li, #usersList li\") && document.querySelectorAll(\"#favourite-users li, #usersList li\").forEach(function (item) {\n      item.addEventListener(\"click\", function (event) {\n        currentSelectedChat = \"users\";\n        updateSelectedChat();\n        currentChatId = \"users-chat\";\n        var contactId = item.getAttribute(\"id\");\n        var username = item.querySelector(\".text-truncate\").innerHTML;\n        document.querySelector(\".user-profile-sidebar .user-name\").innerHTML = username;\n        var contactImagesWithName = document.getElementById(\"users-chat\");\n        contactImagesWithName.querySelector(\".text-truncate .user-profile-show\").innerHTML = username;\n        document.querySelector(\".user-profile-desc .text-truncate\").innerHTML = username;\n        document.querySelector(\".chat-input-typing\").style.display = \"block\";\n        document.querySelector(\".user-profile-status\").style.display = \"block\";\n        document.querySelector(\".chat-input-typing .typing-user\").innerHTML = username + ' is Typing<span class=\"typing ms-2\"><span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span></span>';\n        document.querySelector(\".audiocallModal .text-truncate\").innerHTML = username;\n        document.querySelector(\".videocallModal .text-truncate\").innerHTML = username;\n        var img = document.getElementById(contactId).querySelector(\".avatar-xs\").getAttribute(\"src\");\n\n        if (img) {\n          document.querySelector(\".user-own-img .avatar-sm\").setAttribute(\"src\", img);\n          document.querySelector(\".user-profile-sidebar .profile-img\").setAttribute(\"src\", img);\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", img);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", img);\n        } else {\n          document.querySelector(\".user-own-img .avatar-sm\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".user-profile-sidebar .profile-img\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", dummyImage);\n        }\n\n        var chatImg = item.querySelector(\".avatar-xs\").getAttribute(\"src\");\n        var conversationImg = document.getElementById(\"users-conversation\");\n        conversationImg.querySelectorAll(\".left .chat-avatar\").forEach(function (item3) {\n          if (chatImg) {\n            item3.querySelector(\"img\").setAttribute(\"src\", chatImg);\n          } else {\n            item3.querySelector(\"img\").setAttribute(\"src\", dummyImage);\n          }\n        });\n        window.stop();\n      });\n    });\n    document.querySelectorAll(\"#channelList li\").forEach(function (item) {\n      item.addEventListener(\"click\", function (event) {\n        currentChatId = \"channel-chat\";\n        currentSelectedChat = \"channel\";\n        updateSelectedChat();\n        var channelId = item.getAttribute(\"id\");\n        var channelName = item.querySelector(\".text-truncate\").innerHTML;\n        var changeChannelName = document.getElementById(\"channel-chat\");\n        changeChannelName.querySelector(\".text-truncate .user-profile-show\").innerHTML = channelName;\n        document.querySelector(\".user-profile-desc .text-truncate\").innerHTML = channelName;\n        document.querySelector(\".audiocallModal .text-truncate\").innerHTML = channelName;\n        document.querySelector(\".videocallModal .text-truncate\").innerHTML = channelName;\n        document.querySelector(\".user-profile-sidebar .user-name\").innerHTML = channelName;\n        document.querySelector(\".chat-input-typing\").style.display = \"none\";\n        document.querySelector(\".user-profile-status\").style.display = \"none\";\n        var channelImg = document.getElementById(channelId).querySelector(\".avatar-xs\").getAttribute(\"src\");\n\n        if (channelImg !== null) {\n          document.querySelector(\"#channel-chat .user-own-img .avatar-sm\").setAttribute(\"src\", channelImg);\n          document.querySelector(\".user-profile-sidebar .profile-img\").setAttribute(\"src\", channelImg);\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", channelImg);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", channelImg);\n        } else {\n          document.querySelector(\"#channel-chat .user-own-img .avatar-sm\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".user-profile-sidebar .profile-img\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", dummyImage);\n        }\n      });\n    });\n  } //user list by json\n\n\n  var getJSON = function getJSON(jsonurl, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url + jsonurl, true);\n    xhr.responseType = \"json\";\n\n    xhr.onload = function () {\n      var status = xhr.status;\n\n      if (status === 200) {\n        callback(null, xhr.response);\n      } else {\n        callback(status, xhr.response);\n      }\n    };\n\n    xhr.send();\n  };\n\n  getJSON(\"users.json\", function (err, data) {\n    if (err !== null) {\n      console.log(\"Something went wrong: \" + err);\n    } else {\n      // set favourite users list\n      var fav = data[0].favorites;\n      fav.forEach(function (user, index) {\n        var profile = user.profile ? '<img src=\"' + user.profile + '\" class=\"rounded-circle avatar-xs\" alt=\"\"><span class=\"user-status\"></span>' : '<div class=\"avatar-xs\"><span class=\"avatar-title rounded-circle bg-primary text-white\"><span class=\"username\">' + user.nickname + '</span><span class=\"user-status\"></span></span></div>';\n        var isMessageCount = user.messagecount ? '<div class=\"ms-auto\"><span class=\"badge badge-soft-danger rounded p-1 fs-10\">' + user.messagecount + \"</span></div>\" : \"\";\n        var messageCount = user.messagecount ? '<a href=\"javascript: void(0);\" class=\"unread-msg-user\">' : '<a href=\"javascript: void(0);\">';\n        var activeClass = user.id === 1 ? \"active\" : \"\";\n        document.getElementById(\"favourite-users\").innerHTML += '<li id=\"contact-id-' + user.id + '\" data-name=\"favorite\" class=\"' + activeClass + '\">\\\r\n                  ' + messageCount + ' \\\r\n                      <div class=\"d-flex align-items-center\">\\\r\n                          <div class=\"chat-user-img online align-self-center me-2 ms-0\">\\\r\n                              ' + profile + '\\\r\n                          </div>\\\r\n                          <div class=\"overflow-hidden me-2\">\\\r\n                              <p class=\"text-truncate chat-username mb-0\">' + user.name + '</p>\\\r\n                              <p class=\"text-truncate text-muted fs-13 mb-0\">' + user.lastmessage + \"</p>\\\r\n                          </div>\\\r\n                          \" + isMessageCount + \"\\\r\n                      </div>\\\r\n                  </a>\\\r\n              </li>\";\n      }); // set users message list\n\n      var users = data[0].users;\n      users.forEach(function (userData, index) {\n        var isUserProfile = userData.profile ? '<img src=\"' + userData.profile + '\" class=\"rounded-circle avatar-xs\" alt=\"\"><span class=\"user-status\"></span>' : '<div class=\"avatar-xs\"><span class=\"avatar-title rounded-circle bg-primary text-white\"><span class=\"username\">JL</span><span class=\"user-status\"></span></span></div>';\n        var isMessageCount = userData.messagecount ? '<div class=\"ms-auto\"><span class=\"badge badge-soft-danger rounded p-1 fs-10\">' + userData.messagecount + \"</span></div>\" : \"\";\n        var messageCount = userData.messagecount ? '<a href=\"javascript: void(0);\" class=\"unread-msg-user\">' : '<a href=\"javascript: void(0);\">';\n        var activeClass = userData.id === 1 ? \"active\" : \"\";\n        var profile = userData.profile ? '<img src=\"' + userData.profile + '\" class=\"rounded-circle avatar-xs\" alt=\"\"><span class=\"user-status\"></span>' : '<div class=\"avatar-xs\"><span class=\"avatar-title rounded-circle bg-primary text-white\"><span class=\"username\">' + userData.nickname + '</span><span class=\"user-status\"></span></span></div>';\n        document.getElementById(\"usersList\").innerHTML += '<li id=\"contact-id-' + userData.id + '\" data-name=\"favorite\" class=\"' + activeClass + '\">\\\r\n        ' + messageCount + ' \\\r\n            <div class=\"d-flex align-items-center\">\\\r\n                <div class=\"chat-user-img online align-self-center me-2 ms-0\">\\\r\n                    ' + profile + '\\\r\n                </div>\\\r\n                <div class=\"overflow-hidden me-2\">\\\r\n                    <p class=\"text-truncate chat-username mb-0\">' + userData.name + '</p>\\\r\n                    <p class=\"text-truncate text-muted fs-13 mb-0\">' + userData.lastmessage + \"</p>\\\r\n                </div>\\\r\n                \" + isMessageCount + \"\\\r\n            </div>\\\r\n        </a>\\\r\n    </li>\";\n      }); // set channels list\n\n      var channelsData = data[0].channels;\n      channelsData.forEach(function (isChannel, index) {\n        var profile = isChannel.profile ? '<img src=\"' + isChannel.profile + '\" class=\"rounded-circle avatar-xs\" alt=\"\">' : '<div class=\"avatar-xs\"><span class=\"avatar-title rounded-circle bg-primary text-white\"><span class=\"username\">JL</span><span class=\"user-status\"></span></span></div>';\n        var isMessage = isChannel.messagecount ? '<div class=\"flex-shrink-0 ms-2\"><span class=\"badge badge-soft-danger rounded p-1 fs-10\">' + isChannel.messagecount + \"</span></div>\" : \"\";\n        var messageCount = isChannel.messagecount ? '<a href=\"javascript: void(0);\" class=\"unread-msg-user\">' : '<a href=\"javascript: void(0);\">';\n        var profile = isChannel.profile ? '<img src=\"' + isChannel.profile + '\" class=\"rounded-circle avatar-xs\" alt=\"\">' : '<div class=\"avatar-xs\"><span class=\"avatar-title rounded-circle bg-primary text-white\"><span class=\"username\">' + isChannel.nickname + \"</span></span></div>\";\n        document.getElementById(\"channelList\").innerHTML += '<li id=\"contact-id-' + isChannel.id + '\" data-name=\"channel\">\\\r\n                ' + messageCount + ' \\\r\n                    <div class=\"d-flex align-items-center\">\\\r\n                        <div class=\"flex-shrink-0 me-2\">\\\r\n                            <div class=\"chat-user-img online align-self-center\">\\\r\n                            ' + profile + '\\\r\n                            </div>\\\r\n                        </div>\\\r\n                        <div class=\"flex-grow-1 overflow-hidden\">\\\r\n                            <h6 class=\"text-truncate mb-0\">' + isChannel.name + '</h6>\\\r\n                            <p class=\"text-truncate text-muted fs-13 mb-0\">' + isChannel.lastmessage + \"</p>\\\r\n                        </div>\\\r\n                        <div>\" + isMessage + \"</div>\\\r\n                    </div>\\\r\n                </a>\\\r\n            </li>\";\n      });\n    }\n\n    toggleSelected();\n    chatSwap();\n  }); //CallList userDetails\n\n  function callsList() {\n    document.querySelectorAll(\"#callList li\").forEach(function (item) {\n      item.addEventListener(\"click\", function (event) {\n        var callsId = item.getAttribute(\"id\");\n        var callUser = item.querySelector(\".text-truncate\").innerHTML;\n        document.querySelector(\".videocallModal .text-truncate\").innerHTML = callUser;\n        document.querySelector(\".audiocallModal .text-truncate\").innerHTML = callUser;\n        var callImg = document.getElementById(callsId).querySelector(\".avatar-xs\").getAttribute(\"src\");\n\n        if (callImg) {\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", callImg);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", callImg);\n        } else {\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", dummyImage);\n        }\n      });\n    });\n  } //Call list\n\n\n  getJSON(\"callList.json\", function (err, data) {\n    if (err !== null) {\n      console.log(\"Something went wrong: \" + err);\n    } else {\n      callList = data;\n      callList.forEach(function (calls, index) {\n        var callIcon = calls.callVideo === true ? '<button type=\"button\" class=\"btn btn-link p-0 fs-20 stretched-link\" data-bs-toggle=\"modal\" data-bs-target=\".videocallModal\"><i class=\"' + calls.callTypeIcon + '\"></i></button>' : '<button type=\"button\" class=\"btn btn-link p-0 fs-20 stretched-link\" data-bs-toggle=\"modal\" data-bs-target=\".audiocallModal\"><i class=\"' + calls.callTypeIcon + '\"></i></button>';\n        var profile = calls.profile ? '<img src=\"' + calls.profile + '\" class=\"rounded-circle avatar-xs\" alt=\"\">' : '<div class=\"avatar-xs\"><span class=\"avatar-title rounded-circle bg-danger text-white\">RL</span></div>';\n        document.getElementById(\"callList\").innerHTML += '<li id=\"calls-id-' + calls.id + '\" >\\\r\n        <div class=\"d-flex align-items-center\">\\\r\n        <div class=\"chat-user-img flex-shrink-0 me-2\">\\\r\n            ' + profile + '\\\r\n        </div>\\\r\n            <div class=\"flex-grow-1 overflow-hidden\">\\\r\n                <p class=\"text-truncate mb-0\">' + calls.name + '</p>\\\r\n                <div class=\"text-muted fs-12 text-truncate\"><i class=\"' + calls.callArrowType + '\"></i> ' + calls.dateTime + '</div>\\\r\n            </div>\\\r\n            <div class=\"flex-shrink-0 ms-3\">\\\r\n                <div class=\"d-flex align-items-center gap-3\">\\\r\n                    <div>\\\r\n                        <h5 class=\"mb-0 fs-12 text-muted\">' + calls.callTime + \"</h5>\\\r\n                    </div>\\\r\n                    <div>\\\r\n                       \" + callIcon + \"\\\r\n                    </div>\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>\\\r\n      </li>\";\n      });\n    }\n\n    callsList();\n  }); //Contact List dynamic Details\n\n  function contactList() {\n    document.querySelectorAll(\".sort-contact ul li\").forEach(function (item) {\n      item.addEventListener(\"click\", function (event) {\n        currentSelectedChat = \"users\";\n        updateSelectedChat();\n        var contactName = item.querySelector(\"li .fs-14\").innerHTML;\n        document.querySelector(\".text-truncate .user-profile-show\").innerHTML = contactName;\n        document.querySelector(\".user-profile-desc .text-truncate\").innerHTML = contactName;\n        document.querySelector(\".audiocallModal .text-truncate\").innerHTML = contactName;\n        document.querySelector(\".videocallModal .text-truncate\").innerHTML = contactName;\n        document.querySelector(\".user-profile-sidebar .user-name\").innerHTML = contactName;\n        document.querySelector(\".chat-input-typing\").style.display = \"block\";\n        document.querySelector(\".user-profile-status\").style.display = \"block\";\n        document.querySelector(\".chat-input-typing .typing-user\").innerHTML = contactName + ' is Typing<span class=\"typing ms-2\"><span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span></span>';\n        var contactImg = item.querySelector(\"li .align-items-center\").querySelector(\".avatar-xs .rounded-circle\").getAttribute(\"src\");\n\n        if (contactImg) {\n          document.querySelector(\".user-own-img .avatar-sm\").setAttribute(\"src\", contactImg);\n          document.querySelector(\".user-profile-sidebar .profile-img\").setAttribute(\"src\", contactImg);\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", contactImg);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", contactImg);\n        } else {\n          document.querySelector(\".user-own-img .avatar-sm\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".user-profile-sidebar .profile-img\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".audiocallModal .img-thumbnail\").setAttribute(\"src\", dummyImage);\n          document.querySelector(\".videocallModal .videocallModal-bg\").setAttribute(\"src\", dummyImage);\n        }\n\n        var conversationImg = document.getElementById(\"users-conversation\");\n        conversationImg.querySelectorAll(\".left .chat-avatar\").forEach(function (item3) {\n          if (contactImg) {\n            item3.querySelector(\"img\").setAttribute(\"src\", contactImg);\n          } else {\n            item3.querySelector(\"img\").setAttribute(\"src\", dummyImage);\n          }\n        });\n        window.stop();\n      });\n    });\n  } // get contacts list\n\n\n  getJSON(\"contacts.json\", function (err, data) {\n    if (err !== null) {\n      console.log(\"Something went wrong: \" + err);\n    } else {\n      usersList = data;\n      data.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      }); // set favourite users list\n\n      var msgHTML = \"\";\n      var userNameCharAt = \"\";\n      usersList.forEach(function (user, index) {\n        var profile = user.profile ? '<img src=\"' + user.profile + '\" class=\"img-fluid rounded-circle\" alt=\"\">' : '<span class=\"avatar-title rounded-circle bg-primary fs-10\">' + user.nickname + \"</span>\";\n        msgHTML = '<li>\\\r\n              <div class=\"d-flex align-items-center\">\\\r\n                  <div class=\"flex-shrink-0 me-2\">\\\r\n                      <div class=\"avatar-xs\">\\\r\n                          ' + profile + '\\\r\n                      </div>\\\r\n                  </div>\\\r\n                  <div class=\"flex-grow-1\">\\\r\n                      <h5 class=\"fs-14 m-0\" >' + user.name + '</h5>\\\r\n                  </div>\\\r\n                  <div class=\"flex-shrink-0\">\\\r\n                      <div class=\"dropdown\">\\\r\n                          <a href=\"#\" class=\"text-muted dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                              <i class=\"bx bx-dots-vertical-rounded align-middle\"></i>\\\r\n                          </a>\\\r\n                          <div class=\"dropdown-menu dropdown-menu-end\">\\\r\n                              <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Edit <i class=\"bx bx-pencil ms-2 text-muted\"></i></a>\\\r\n                              <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Block <i class=\"bx bx-block ms-2 text-muted\"></i></a>\\\r\n                              <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Remove <i class=\"bx bx-trash ms-2 text-muted\"></i></a>\\\r\n                          </div>\\\r\n                      </div>\\\r\n                  </div>\\\r\n              </div>\\\r\n          </li>';\n        var isSortContact = '<div class=\"mt-3\" >\\\r\n              <div class=\"contact-list-title\">' + user.name.charAt(0).toUpperCase() + '\\\r\n                </div>\\\r\n          <ul id=\"contact-sort-' + user.name.charAt(0) + '\" class=\"list-unstyled contact-list\" >';\n\n        if (userNameCharAt != user.name.charAt(0)) {\n          document.getElementsByClassName(\"sort-contact\")[0].innerHTML += isSortContact;\n        }\n\n        document.getElementById(\"contact-sort-\" + user.name.charAt(0)).innerHTML = document.getElementById(\"contact-sort-\" + user.name.charAt(0)).innerHTML + msgHTML;\n        userNameCharAt = user.name.charAt(0);\n        +\"</ul>\" + \"</div>\";\n      });\n    }\n\n    contactList();\n    toggleSelected();\n  });\n\n  function updateSelectedChat() {\n    if (currentSelectedChat == \"users\") {\n      document.getElementById(\"channel-chat\").style.display = \"none\";\n      document.getElementById(\"users-chat\").style.display = \"block\";\n      getChatMessages(url + \"chats.json\");\n    } else {\n      document.getElementById(\"channel-chat\").style.display = \"block\";\n      document.getElementById(\"users-chat\").style.display = \"none\";\n      getChatMessages(url + \"chats.json\");\n    }\n  }\n\n  updateSelectedChat(); // Profile hide/show\n\n  var userProfileSidebar = document.querySelector(\".user-profile-sidebar\");\n  document.querySelectorAll(\".user-profile-show\").forEach(function (item) {\n    item.addEventListener(\"click\", function (event) {\n      userProfileSidebar.classList.toggle(\"d-block\");\n    });\n  }); // chat conversation scroll\n\n  window.addEventListener(\"DOMContentLoaded\", function () {\n    var conversationScroll = document.querySelector(\"#chat-conversation .simplebar-content-wrapper\");\n    conversationScroll.scrollTop = conversationScroll.scrollHeight;\n  }); // body click hide collapse\n\n  var myCollapse = document.getElementById(\"chatinputmorecollapse\");\n  document.body.addEventListener(\"click\", function () {\n    var bsCollapse = new bootstrap.Collapse(myCollapse, {\n      toggle: false\n    });\n    bsCollapse.hide();\n  }); // chat conversation swiper\n\n  if (myCollapse) {\n    myCollapse.addEventListener(\"shown.bs.collapse\", function () {\n      initSwiper();\n    });\n  }\n\n  function initSwiper() {\n    var swiper = new Swiper(\".chatinput-links\", {\n      slidesPerView: 3,\n      spaceBetween: 30,\n      breakpoints: {\n        768: {\n          slidesPerView: 4\n        },\n        1024: {\n          slidesPerView: 6\n        }\n      }\n    });\n  } // contact modal list\n\n\n  var contactModalList = document.querySelectorAll(\".contact-modal-list .contact-list li\");\n  contactModalList.forEach(function (link) {\n    link.addEventListener(\"click\", function () {\n      link.classList.toggle(\"selected\");\n    });\n  }); // Change conversation bg\n  //Auto Focus curser to Text Box Area\n\n  document.getElementById(\"favourite-users\").onclick = function () {\n    document.getElementById(\"chat-input\").focus();\n  };\n\n  document.getElementById(\"usersList\").onclick = function () {\n    document.getElementById(\"chat-input\").focus();\n  };\n\n  document.getElementById(\"channelList\").onclick = function () {\n    document.getElementById(\"chat-input\").focus();\n  }; // Scroll to Bottom\n\n\n  function scrollToBottom(id) {\n    var simpleBar = document.getElementById(id).querySelector(\"#chat-conversation .simplebar-content-wrapper\");\n    var offsetHeight = document.getElementsByClassName(\"chat-conversation-list\")[0] ? document.getElementById(id).getElementsByClassName(\"chat-conversation-list\")[0].scrollHeight - window.innerHeight + 250 : 0;\n    if (offsetHeight) simpleBar.scrollTo({\n      top: offsetHeight,\n      behavior: \"smooth\"\n    });\n  } //add an eventListener to the from\n\n\n  var chatForm = document.querySelector(\"#chatinput-form\");\n  var chatInput = document.querySelector(\"#chat-input\");\n  var itemList = document.querySelector(\".chat-conversation-list\");\n  var chatInputFeedback = document.querySelector(\".chat-input-feedback\");\n\n  function currentTime() {\n    var ampm = new Date().getHours() >= 12 ? \"pm\" : \"am\";\n    var hour = new Date().getHours() > 12 ? new Date().getHours() % 12 : new Date().getHours();\n    var minute = new Date().getMinutes() < 10 ? \"0\" + new Date().getMinutes() : new Date().getMinutes();\n\n    if (hour < 10) {\n      return \"0\" + hour + \":\" + minute + \" \" + ampm;\n    } else {\n      return hour + \":\" + minute + \" \" + ampm;\n    }\n  }\n\n  setInterval(currentTime, 1000);\n  var messageIds = 0; //Audio file\n\n  var audiofilename;\n  var audiofileSize;\n  var audioFile = \"\";\n  var afiling = [];\n  var fileNumberAudio = 1;\n  var audiourl = \"\";\n  document.querySelector(\"#audiofile-input\").addEventListener(\"change\", function () {\n    var preview = document.querySelector(\".file_Upload\");\n    audioFile = document.querySelector(\"#audiofile-input\").files[0];\n    audiourl = URL.createObjectURL(audioFile); // remove-audioFile\n\n    var reader = new FileReader();\n    reader.readAsDataURL(audioFile);\n\n    if (preview) {\n      preview.classList.add(\"show\");\n    }\n\n    reader.addEventListener(\"load\", function () {\n      // Array.push(preview).forEach((gallery, index) => {\n      var filename = audioFile.name;\n      var fileSize = Math.round(audioFile.size / 1000000).toFixed(2);\n      preview.innerHTML = '<div class=\"card p-2 border mb-2 audiofile_pre d-inline-block position-relative\">\\\r\n            <div class=\"d-flex align-items-center\">\\\r\n                <div class=\"flex-shrink-0 avatar-xs ms-1 me-3\">\\\r\n                    <div class=\"avatar-title bg-soft-primary text-primary rounded-circle\">\\\r\n                        <i class=\"bx bx-headphone\"></i>\\\r\n                    </div>\\\r\n                </div>\\\r\n                <div class=\"flex-grow-1 overflow-hidden\">\\\r\n                <h5 class=\"fs-14 text-truncate mb-1\">' + filename + '</h5>\\\r\n                  <input type=\"hidden\" name=\"downloadaudiodata\" value=\"' + audiourl + '\"/>\\\r\n                        <p class=\"text-muted text-truncate fs-13 mb-0\">' + fileSize + 'mb</p>\\\r\n                </div>\\\r\n                <div class=\"flex-shrink-0 ms-3\">\\\r\n                    <div class=\"d-flex gap-2\">\\\r\n                        <div>\\\r\n                        <i class=\"ri-close-line text-danger audioFile-remove\"  id=\"remove-audioFile\"></i>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                </div>\\\r\n            </div>\\\r\n          </div>';\n      audiofilename = filename;\n      audiofileSize = fileSize;\n      removeAudioFile();\n      afiling[fileNumberAudio] = audioFile;\n    }, false);\n    fileNumberAudio++;\n  });\n\n  var getAudioFiles = function getAudioFiles(chatid3, newAdioItems, newAdioItemSize) {\n    var newAdioItems = audiofilename;\n    var newAdioItemSize = audiofileSize;\n    messageIds++;\n    var chatConList3 = document.getElementById(chatid3);\n    var itemList3 = chatConList3.querySelector(\".chat-conversation-list\");\n\n    if (newAdioItems != null) {\n      itemList3.insertAdjacentHTML(\"beforeend\", '<li class=\"chat-list right\" id=\"chat-list-' + messageIds + '\" >\\\r\n          <div class=\"conversation-list\">\\\r\n              <div class=\"user-chat-content\">\\\r\n                  <div class=\"ctext-wrap\">\\\r\n                  <div class=\"audio-file-elem\">\\\r\n                              <audio controls>\\\r\n                                  <source src=\"' + audiourl + '\" type=\"audio/mpeg\">\\\r\n                              </audio>\\\r\n                          </div>\\\r\n                      <div class=\"align-self-start message-box-drop d-flex\">\\\r\n                      <div class=\"dropdown\">\\\r\n                        <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                          <i class=\"ri-emotion-happy-line\"></i>\\\r\n                        </a>\\\r\n                        <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                          <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                            <a href=\"javascript:void(0);\">💛</a>\\\r\n                            <a href=\"javascript:void(0);\">🤣</a>\\\r\n                            <a href=\"javascript:void(0);\">😜</a>\\\r\n                            <a href=\"javascript:void(0);\">😘</a>\\\r\n                            <a href=\"javascript:void(0);\">😍</a>\\\r\n                            <div class=\"avatar-xs\">\\\r\n                            <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                            </div>\\\r\n                          </div>\\\r\n                        </div>\\\r\n                      </div>\\\r\n                        <div class=\"dropdown\">\\\r\n                            <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"ri-more-2-fill\"></i> </a>\\\r\n                            <div class=\"dropdown-menu\">\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"' + newAdioItems + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                                <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" id=\"delete-item-' + messageIds + '\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                            </div>\\\r\n                        </div>\\\r\n                      </div>\\\r\n                      </div>\\\r\n                      <div class=\"conversation-name\">\\\r\n                          <small class=\"text-muted time\">' + currentTime() + '</small>\\\r\n                            <span class=\"text-success check-message-icon\"><i class=\"bx bx-check\"></i></span>\\\r\n                          </div>\\\r\n                        </div>\\\r\n                      </div>\\\r\n                    </li>');\n    }\n\n    var newChatList = document.getElementById(\"chat-list-\" + messageIds);\n    newChatList.querySelectorAll(\".delete-item\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        itemList.removeChild(newChatList);\n      });\n    });\n    document.querySelectorAll(\".download-file\").forEach(function (subitem2) {\n      subitem2.addEventListener(\"click\", function (event) {\n        event.preventDefault();\n        var audiofiledataid = subitem2.getAttribute(\"data-id\");\n\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n          alert(\"The File APIs are not fully supported in this browser.\");\n          return;\n        }\n\n        var blob = new Blob([filing[audiofiledataid]], {\n          type: \"application/mp3\"\n        });\n        var link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = afiling[audiofiledataid][\"name\"];\n        link.click();\n      });\n    });\n    document.querySelector(\".file_Upload \").classList.remove(\"show\");\n  }; //Attached file Append\n\n\n  var filename2;\n  var filesize2;\n  var file = \"\";\n  var filing = [];\n  var fileNumber = 1;\n  document.querySelector(\"#attachedfile-input\").addEventListener(\"change\", function () {\n    var preview = document.querySelector(\".file_Upload\");\n    file = document.querySelector(\"#attachedfile-input\").files[0];\n    fr = new FileReader();\n    fr.readAsDataURL(file);\n\n    if (preview) {\n      preview.classList.add(\"show\");\n    }\n\n    fr.addEventListener(\"load\", function () {\n      var filename = file.name;\n      var fileSize = Math.round(file.size / 1000000).toFixed(2);\n      preview.innerHTML = '<div class=\"card p-2 border attchedfile_pre d-inline-block position-relative\">\\\r\n            <div class=\"d-flex align-items-center\">\\\r\n                <div class=\"flex-shrink-0 avatar-xs ms-1 me-3\">\\\r\n                    <div class=\"avatar-title bg-soft-primary text-primary rounded-circle\">\\\r\n                        <i class=\"ri-attachment-2\"></i>\\\r\n                    </div>\\\r\n                </div>\\\r\n                <div class=\"flex-grow-1 overflow-hidden\">\\\r\n                <a href=\"\" id=\"a\"></a>\\\r\n                    <h5 class=\"fs-14 text-truncate mb-1\">' + filename + '</h5>\\\r\n                    <input type=\"hidden\" name=\"downloaddata\" value=\"' + file + '\"/>\\\r\n                    <p class=\"text-muted text-truncate fs-13 mb-0\">' + fileSize + 'mb</p>\\\r\n                </div>\\\r\n                <div class=\"flex-shrink-0 align-self-start ms-3\">\\\r\n                    <div class=\"d-flex gap-2\">\\\r\n                        <div>\\\r\n                        <i class=\"ri-close-line text-muted attechedFile-remove\"  id=\"remove-attechedFile\"></i>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                </div>\\\r\n            </div>\\\r\n          </div>';\n      filename2 = filename;\n      filesize2 = fileSize;\n      filing[fileNumber] = file;\n      removeAttachedFile();\n    }, false);\n    fileNumber++;\n  });\n\n  var getAttachedFiles = function getAttachedFiles(chatid2, newAttchedItems, newAttchedItemSize) {\n    var newAttchedItems = filename2;\n    var newAttchedItemSize = filesize2;\n    messageIds++;\n    var chatConList2 = document.getElementById(chatid2);\n    var itemList2 = chatConList2.querySelector(\".chat-conversation-list\");\n\n    if (newAttchedItems != null) {\n      itemList2.insertAdjacentHTML(\"beforeend\", '<li class=\"chat-list right\" id=\"chat-list-' + messageIds + '\" >\\\r\n          <div class=\"conversation-list\">\\\r\n              <div class=\"user-chat-content\">\\\r\n                  <div class=\"ctext-wrap\">\\\r\n                      <div class=\"ctext-wrap-content\">\\\r\n                          <div class=\"p-3 border rounded-3\">\\\r\n                              <div class=\"d-flex align-items-center attached-file\">\\\r\n                                  <div class=\"flex-shrink-0 avatar-sm me-3 ms-0 attached-file-avatar\">\\\r\n                                      <div class=\"avatar-title bg-soft-light rounded-circle fs-20\"><i class=\"ri-attachment-2\"></i></div>\\\r\n                                  </div>\\\r\n                                  <div class=\"flex-grow-1 overflow-hidden\">\\\r\n                                      <div class=\"text-start\">\\\r\n                                          <h5 class=\"fs-14 text-white mb-1\">' + newAttchedItems + '</h5>\\\r\n                                          <p class=\"text-white-50 text-truncate fs-13 mb-0\">' + newAttchedItemSize + 'mb</p>\\\r\n                                      </div>\\\r\n                                  </div>\\\r\n                                  <div class=\"flex-shrink-0 ms-4\">\\\r\n                                      <div class=\"d-flex gap-2 fs-20 d-flex align-items-start\">\\\r\n                                          <div>\\\r\n                                              <a href=\"#\" class=\"text-white-50 download-file\" data-id=\"' + fileNumber + '\"> <i class=\"bx bxs-download\"></i> </a>\\\r\n                                          </div>\\\r\n                                      </div>\\\r\n                                  </div>\\\r\n                              </div>\\\r\n                          </div>\\\r\n                      </div>\\\r\n                      <div class=\"align-self-start message-box-drop d-flex\">\\\r\n                      <div class=\"dropdown\">\\\r\n                        <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                          <i class=\"ri-emotion-happy-line\"></i>\\\r\n                        </a>\\\r\n                        <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                          <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                            <a href=\"javascript:void(0);\">💛</a>\\\r\n                            <a href=\"javascript:void(0);\">🤣</a>\\\r\n                            <a href=\"javascript:void(0);\">😜</a>\\\r\n                            <a href=\"javascript:void(0);\">😘</a>\\\r\n                            <a href=\"javascript:void(0);\">😍</a>\\\r\n                            <div class=\"avatar-xs\">\\\r\n                            <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                            </div>\\\r\n                          </div>\\\r\n                        </div>\\\r\n                      </div>\\\r\n                      <div class=\"dropdown\">\\\r\n                          <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"ri-more-2-fill\"></i> </a>\\\r\n                          <div class=\"dropdown-menu\">\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"' + newAttchedItems + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                          <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" id=\"delete-item-' + messageIds + '\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                      </div>\\\r\n                    </div>\\\r\n                    </div>\\\r\n                  </div>\\\r\n                <div class=\"conversation-name\">\\\r\n                    <small class=\"text-muted time\">' + currentTime() + '</small>\\\r\n                      <span class=\"text-success check-message-icon\"><i class=\"bx bx-check\"></i></span>\\\r\n                    </div>\\\r\n                </div>\\\r\n              </div>\\\r\n            </li>');\n    } // remove File\n\n\n    var newChatList = document.getElementById(\"chat-list-\" + messageIds);\n    newChatList.querySelectorAll(\".delete-item\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        itemList.removeChild(newChatList);\n      });\n    }); //Download attached file\n\n    newChatList.querySelectorAll(\".download-file\").forEach(function (subitem1) {\n      subitem1.addEventListener(\"click\", function (event) {\n        event.preventDefault();\n        var dataid = subitem1.getAttribute(\"data-id\");\n\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n          alert(\"The File APIs are not fully supported in this browser.\");\n          return;\n        }\n\n        var blob = new Blob([filing[dataid]], {\n          type: \"application/pdf\"\n        }); // change resultByte to bytes\n\n        var link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = filing[dataid][\"name\"];\n        link.click();\n      });\n    });\n    document.querySelector(\".file_Upload \").classList.remove(\"show\");\n  };\n\n  var imageurls = [];\n  removeimg = 1;\n  var indexing = 0;\n  document.querySelector(\"#galleryfile-input\").addEventListener(\"change\", previewImages);\n\n  function previewImages() {\n    var preview = document.querySelector(\".file_Upload\");\n    preview.insertAdjacentHTML(\"beforeend\", '<div class=\"profile-media-img image_pre\"></div>');\n    var imageselector = document.querySelector(\".file_Upload .profile-media-img\");\n\n    if (this.files) {\n      [].forEach.call(this.files, readAndPreview);\n    }\n\n    function readAndPreview(file) {\n      // Make sure `file.name` matches our extensions criteria\n      if (!/\\.(jpe?g|png|gif)$/i.test(file.name)) {\n        return alert(file.name + \" is not an image\");\n      } // else...\n\n\n      var reader = new FileReader();\n      var createImage = \"\";\n      reader.addEventListener(\"load\", function () {\n        removeimg++;\n\n        if (preview) {\n          preview.classList.add(\"show\");\n        }\n\n        imageurls.push(reader.result);\n        createImage += '<div class=\"media-img-list\" id=\"remove-image-' + removeimg + '\">\\\r\n          <a href=\"#\">\\\r\n              <img src=\"' + this.result + '\" alt=\"' + file.name + '\" class=\"img-fluid\">\\\r\n          </a>\\\r\n            <i class=\"ri-close-line image-remove\" onclick=\"removeImage(`remove-image-' + removeimg + '`)\"></i>\\\r\n          </div>';\n        imageselector.insertAdjacentHTML(\"afterbegin\", createImage);\n        indexing++;\n      });\n      reader.readAsDataURL(file);\n    }\n  } //append images\n\n\n  var getImages = function getImages(chatid1, newImage) {\n    var newImages = imageurls;\n    var chatConList1 = document.getElementById(chatid1);\n    var itemList1 = chatConList1.querySelector(\".chat-conversation-list\");\n    var multiimg = \"\";\n    newImages.forEach(function (newImage) {\n      messageIds++;\n      multiimg += '<div class=\"message-img-list\">\\\r\n          <div>\\\r\n            <a class=\"popup-img d-inline-block\" href=\"' + newImage + '\" target=\"_blank\">\\\r\n                <img src=\"' + newImage + '\" alt=\"\" class=\"rounded border img-thumbnail\" width=\"200\" />\\\r\n            </a>\\\r\n          </div>\\\r\n          <div class=\"message-img-link\">\\\r\n            <ul class=\"list-inline mb-0\">\\\r\n              <li class=\"list-inline-item dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                    <i class=\"bx bx-dots-horizontal-rounded\"></i>\\\r\n                </a>\\\r\n          <div class=\"dropdown-menu\">\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"' + newImage + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n            <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-image\" id=\"delete-item-' + messageIds + '\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n          </div>\\\r\n        </li>\\\r\n      </ul>\\\r\n    </div>\\\r\n    </div>';\n    });\n\n    if (newImages != null) {\n      itemList1.insertAdjacentHTML(\"beforeend\", '<li class=\"chat-list right\" id=\"chat-list-' + messageIds + '\" >\\\r\n        <div class=\"conversation-list\">\\\r\n            <div class=\"user-chat-content\">\\\r\n                <div class=\"ctext-wrap\">\\\r\n                        <div class=\"message-img mb-0\">' + multiimg + '\\\r\n                    </div>\\\r\n                    </div>\\\r\n                  <div class=\"conversation-name\">\\\r\n                    <small class=\"text-muted time\">' + currentTime() + '</small>\\\r\n                    <span class=\"text-success check-message-icon\"><i class=\"bx bx-check\"></i></span>\\\r\n                </div>\\\r\n          </div>\\\r\n        </li>');\n      updateLightbox();\n      indexing = 0; //Delete appended images(single user)\n\n      var deleteImages = itemList.querySelectorAll(\".chat-list\");\n      deleteImages.forEach(function (item) {\n        item.querySelectorAll(\".delete-image\").forEach(function (subitem) {\n          subitem.addEventListener(\"click\", function () {\n            subitem.closest(\".message-img\").childElementCount == 1 ? subitem.closest(\".chat-list\").remove() : subitem.closest(\".message-img-list\").remove();\n          });\n        });\n      }); //Delete appended images(Channel chat)\n\n      var deleteChannelImages = channelItemList.querySelectorAll(\".chat-list\");\n      deleteChannelImages.forEach(function (item) {\n        item.querySelectorAll(\".delete-image\").forEach(function (subitem) {\n          subitem.addEventListener(\"click\", function () {\n            subitem.closest(\".message-img\").childElementCount == 1 ? subitem.closest(\".chat-list\").remove() : subitem.closest(\".message-img-list\").remove();\n          });\n        });\n      });\n    }\n\n    document.querySelector(\".file_Upload\").classList.remove(\"show\");\n    imageurls = [];\n  }; //Append New Message\n\n\n  var getChatList = function getChatList(chatid, chatItems) {\n    messageIds++;\n    var chatConList = document.getElementById(chatid);\n    var itemList = chatConList.querySelector(\".chat-conversation-list\");\n\n    if (chatItems != null) {\n      itemList.insertAdjacentHTML(\"beforeend\", '<li class=\"chat-list right\" id=\"chat-list-' + messageIds + '\" >\\\r\n                <div class=\"conversation-list\">\\\r\n                    <div class=\"user-chat-content\">\\\r\n                        <div class=\"ctext-wrap\">\\\r\n                            <div class=\"ctext-wrap-content\">\\\r\n                                <p class=\"mb-0 ctext-content\">' + chatItems + '</p>\\\r\n                            </div>\\\r\n                            <div class=\"align-self-start message-box-drop d-flex\">\\\r\n                            <div class=\"dropdown\">\\\r\n                              <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                                <i class=\"ri-emotion-happy-line\"></i>\\\r\n                              </a>\\\r\n                              <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                                <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                                  <a href=\"javascript:void(0);\">💛</a>\\\r\n                                  <a href=\"javascript:void(0);\">🤣</a>\\\r\n                                  <a href=\"javascript:void(0);\">😜</a>\\\r\n                                  <a href=\"javascript:void(0);\">😘</a>\\\r\n                                  <a href=\"javascript:void(0);\">😍</a>\\\r\n                                  <div class=\"avatar-xs\">\\\r\n                                  <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                                  </div>\\\r\n                                </div>\\\r\n                              </div>\\\r\n                            </div>\\\r\n                              <div class=\"dropdown\">\\\r\n                                  <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                                      <i class=\"ri-more-2-fill\"></i>\\\r\n                                  </a>\\\r\n                                  <div class=\"dropdown-menu\">\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between reply-message\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between copy-message\" href=\"#\" id=\"copy-message-' + messageIds + '\">Copy <i class=\"bx bx-copy text-muted ms-2\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Mark as Unread <i class=\"bx bx-message-error text-muted ms-2\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" id=\"delete-item-' + messageIds + '\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                              </div>\\\r\n                            </div>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                    <div class=\"conversation-name\">\\\r\n                        <small class=\"text-muted time\">' + currentTime() + '</small>\\\r\n                        <span class=\"text-success check-message-icon\"><i class=\"bx bx-check\"></i></span>\\\r\n                    </div>\\\r\n                </div>\\\r\n            </div>\\\r\n        </li>');\n    } // remove chat list\n\n\n    var newChatList = document.getElementById(\"chat-list-\" + messageIds);\n    newChatList.querySelectorAll(\".delete-item\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        itemList.removeChild(newChatList);\n      });\n    }); //Copy Clipboard alert\n\n    newChatList.querySelectorAll(\".copy-message\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        document.getElementById(\"copyClipBoard\").style.display = \"block\";\n        document.getElementById(\"copyClipBoardChannel\").style.display = \"block\";\n        setTimeout(hideclipboardNew, 1000);\n\n        function hideclipboardNew() {\n          document.getElementById(\"copyClipBoard\").style.display = \"none\";\n          document.getElementById(\"copyClipBoardChannel\").style.display = \"none\";\n        }\n      });\n    }); //reply Message model\n\n    newChatList.querySelectorAll(\".reply-message\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        var replyToggleOpenNew = document.querySelector(\".replyCard\");\n        var replyToggleCloseNew = document.querySelector(\"#close_toggle\");\n        var replyMessageNew = subitem.closest(\".ctext-wrap\").children[0].children[0].innerText;\n        var replyUserNew = document.querySelector(\".user-profile-show\").innerHTML;\n        isreplyMessage = true;\n        replyToggleOpenNew.classList.add(\"show\");\n        replyToggleCloseNew.addEventListener(\"click\", function () {\n          replyToggleOpenNew.classList.remove(\"show\");\n        });\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .mb-0\").innerText = replyMessageNew;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .conversation-name\").innerText = replyUserNew;\n      });\n    }); //Copy Message\n\n    newChatList.querySelectorAll(\".copy-message\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        var currentValue = newChatList.childNodes[1].firstElementChild.firstElementChild.firstElementChild.firstElementChild.innerText;\n        navigator.clipboard.writeText(currentValue);\n      });\n    });\n  };\n\n  var messageboxcollapse = 1; //message with reply\n\n  var getReplyChatList = function getReplyChatList(chatReplyId, chatReplyItems) {\n    var chatReplyUser = document.querySelector(\".user-profile-show\").innerHTML;\n    var chatReplyMessage = document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .mb-0\").innerText;\n    messageIds++;\n    var chatreplyConList = document.getElementById(chatReplyId);\n    var itemReplyList = chatreplyConList.querySelector(\".chat-conversation-list\");\n\n    if (chatReplyItems != null) {\n      itemReplyList.insertAdjacentHTML(\"beforeend\", '<li class=\"chat-list right\" id=\"chat-list-' + messageIds + '\" >\\\r\n                <div class=\"conversation-list\">\\\r\n                    <div class=\"user-chat-content\">\\\r\n                        <div class=\"ctext-wrap\">\\\r\n                            <div class=\"ctext-wrap-content\">\\\r\n                            <div class=\"replymessage-block mb-0 d-flex align-items-start\">\\\r\n                        <div class=\"flex-grow-1\">\\\r\n                            <h5 class=\"conversation-name\">' + chatReplyUser + '</h5>\\\r\n                            <p class=\"mb-0\">' + chatReplyMessage + '</p>\\\r\n                        </div>\\\r\n                        <div class=\"flex-shrink-0\">\\\r\n                            <button type=\"button\" class=\"btn btn-sm btn-link mt-n2 me-n3 fs-18\">\\\r\n                            </button>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                                <p class=\"mb-0 ctext-content mt-1\">\\\r\n                                    ' + chatReplyItems + '\\\r\n                                </p>\\\r\n                            </div>\\\r\n                            <div class=\"align-self-start message-box-drop d-flex\">\\\r\n                            <div class=\"dropdown\">\\\r\n                              <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                                <i class=\"ri-emotion-happy-line\"></i>\\\r\n                              </a>\\\r\n                              <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                                <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                                  <a href=\"javascript:void(0);\">💛</a>\\\r\n                                  <a href=\"javascript:void(0);\">🤣</a>\\\r\n                                  <a href=\"javascript:void(0);\">😜</a>\\\r\n                                  <a href=\"javascript:void(0);\">😘</a>\\\r\n                                  <a href=\"javascript:void(0);\">😍</a>\\\r\n                                  <div class=\"avatar-xs\">\\\r\n                                    <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                                  </div>\\\r\n                                </div>\\\r\n                              </div>\\\r\n                            </div>\\\r\n                              <div class=\"dropdown\">\\\r\n                                  <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                                      <i class=\"ri-more-2-fill\"></i>\\\r\n                                  </a>\\\r\n                                  <div class=\"dropdown-menu\">\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between reply-message\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between copy-message\" href=\"#\" id=\"copy-message-' + messageIds + '\">Copy <i class=\"bx bx-copy text-muted ms-2\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Mark as Unread <i class=\"bx bx-message-error text-muted ms-2\"></i></a>\\\r\n                                      <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" id=\"delete-item-' + messageIds + '\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                              </div>\\\r\n                            </div>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                    <div class=\"conversation-name\">\\\r\n                        <small class=\"text-muted time\">' + currentTime() + '</small>\\\r\n                        <span class=\"text-success check-message-icon\"><i class=\"bx bx-check\"></i></span>\\\r\n                    </div>\\\r\n                </div>\\\r\n            </div>\\\r\n        </li>');\n      messageboxcollapse++;\n    } // remove chat list\n\n\n    var newChatList = document.getElementById(\"chat-list-\" + messageIds);\n    newChatList.querySelectorAll(\".delete-item\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        itemList.removeChild(newChatList);\n      });\n    }); //Copy Clipboard alert\n\n    newChatList.querySelectorAll(\".copy-message\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        document.getElementById(\"copyClipBoard\").style.display = \"block\";\n        document.getElementById(\"copyClipBoardChannel\").style.display = \"block\";\n        setTimeout(hideclipboardNew, 1000);\n\n        function hideclipboardNew() {\n          document.getElementById(\"copyClipBoard\").style.display = \"none\";\n          document.getElementById(\"copyClipBoardChannel\").style.display = \"none\";\n        }\n      });\n    });\n    newChatList.querySelectorAll(\".reply-message\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        var replyMessage = subitem.closest(\".ctext-wrap\").children[0].children[0].innerText;\n        var replyuser = document.querySelector(\".user-profile-show\").innerHTML;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .mb-0\").innerText = replyMessage;\n        var msgWwnerName = subitem.closest(\".chat-list\") ? subitem.closest(\".chat-list\").classList.contains(\"left\") ? replyuser : \"You\" : replyuser;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .conversation-name\").innerText = msgWwnerName;\n      });\n    }); //Copy Message\n\n    newChatList.querySelectorAll(\".copy-message\").forEach(function (subitem) {\n      subitem.addEventListener(\"click\", function () {\n        newChatList.childNodes[1].children[1].firstElementChild.firstElementChild.getAttribute(\"id\");\n        isText = newChatList.childNodes[1].children[1].firstElementChild.firstElementChild.innerText;\n        navigator.clipboard.writeText(isText);\n      });\n    });\n  };\n\n  if (chatForm) {\n    //add an item to the List, including to local storage\n    chatForm.addEventListener(\"submit\", function (e) {\n      e.preventDefault();\n      var chatId = currentChatId;\n      var chatId1 = currentChatId;\n      var chatId2 = currentChatId;\n      var chatId3 = currentChatId;\n      var chatReplyId = currentChatId;\n      var chatInputValue = chatInput.value;\n      var imagepreview = document.querySelector(\".image_pre\");\n      var attachedFilePreview = document.querySelector(\".attchedfile_pre\");\n      var audioFilePreview = document.querySelector(\".audiofile_pre\");\n      var chatInputfeedback = document.querySelector(\".chat-input-feedback\");\n\n      if (chatInputValue.length === 0) {\n        chatInputfeedback.classList.add(\"show\");\n        setTimeout(function () {\n          chatInputfeedback.classList.remove(\"show\");\n        }, 2000);\n\n        if (imagepreview != null) {\n          chatInputfeedback.classList.remove(\"show\");\n          getImages(chatId1, chatInputValue);\n        } else if (attachedFilePreview != null) {\n          chatInputfeedback.classList.remove(\"show\");\n          getAttachedFiles(chatId2, chatInputValue);\n        } else if (audioFilePreview != null) {\n          chatInputfeedback.classList.remove(\"show\");\n          getAudioFiles(chatId3, chatInputValue);\n        }\n      } else {\n        if (isreplyMessage == true) {\n          getReplyChatList(chatReplyId, chatInputValue);\n          isreplyMessage = false;\n        } else {\n          getChatList(chatId, chatInputValue);\n        }\n      }\n\n      scrollToBottom(chatId || chatId1 || chatId2 || chatId3 || chatReplyId);\n      chatInput.value = \"\"; //Images input text area null\n\n      document.querySelector(\".image_pre\") ? document.querySelector(\".image_pre\").remove() : \"\";\n      document.getElementById(\"galleryfile-input\").value = \"\"; //attached input text area null\n\n      document.querySelector(\".attchedfile_pre\") ? document.querySelector(\".attchedfile_pre\").remove() : \"\";\n      document.getElementById(\"attachedfile-input\").value = \"\"; //audio input text area null\n\n      document.querySelector(\".audiofile_pre\") ? document.querySelector(\".audiofile_pre\").remove() : \"\";\n      document.getElementById(\"audiofile-input\").value = \"\"; //reply msg remove textarea\n\n      document.getElementById(\"close_toggle\").click();\n    });\n  } // remove chat list\n\n\n  function deleteMessage() {\n    var deleteItems = itemList.querySelectorAll(\".delete-item\");\n    deleteItems.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        item.closest(\".user-chat-content\").childElementCount == 2 ? item.closest(\".chat-list\").remove() : item.closest(\".ctext-wrap\").remove();\n      });\n    });\n  } //remove chat images\n\n\n  function deleteImage() {\n    var deleteImage = itemList.querySelectorAll(\".chat-list\");\n    deleteImage.forEach(function (item) {\n      item.querySelectorAll(\".delete-image\").forEach(function (subitem) {\n        subitem.addEventListener(\"click\", function () {\n          subitem.closest(\".message-img\").childElementCount == 1 ? subitem.closest(\".chat-list\").remove() : subitem.closest(\".message-img-list\").remove();\n        });\n      });\n    });\n  } //Delete Channel Message\n\n\n  var channelItemList = document.querySelector(\"#channel-conversation\");\n\n  function deleteChannelMessage() {\n    var channelChatList = channelItemList.querySelectorAll(\".delete-item\");\n    channelChatList.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        item.closest(\".user-chat-content\").childElementCount == 2 ? item.closest(\".chat-list\").remove() : item.closest(\".ctext-wrap\").remove();\n      });\n    });\n  } //Copy ClipBoard Alert\n\n\n  function copyClipboard() {\n    var copyClipboardAlert = document.querySelectorAll(\".copy-message\");\n    copyClipboardAlert.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        document.getElementById(\"copyClipBoard\").style.display = \"block\";\n        document.getElementById(\"copyClipBoardChannel\").style.display = \"block\";\n        setTimeout(hideclipboard, 1000);\n\n        function hideclipboard() {\n          document.getElementById(\"copyClipBoard\").style.display = \"none\";\n          document.getElementById(\"copyClipBoardChannel\").style.display = \"none\";\n        }\n      });\n    });\n  } //Copy Messages\n\n\n  function copyMessage() {\n    var copyMessage = itemList.querySelectorAll(\".copy-message\");\n    copyMessage.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        var isText = item.closest(\".ctext-wrap\").children[0] ? item.closest(\".ctext-wrap\").children[0].children[0].innerText : \"\";\n        navigator.clipboard.writeText(isText);\n      });\n    });\n  }\n\n  function copyChannelMessage() {\n    var copyChannelMessage = channelItemList.querySelectorAll(\".copy-message\");\n    copyChannelMessage.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        var isText = item.closest(\".ctext-wrap\").children[0] ? item.closest(\".ctext-wrap\").children[0].children[0].innerText : \"\";\n        navigator.clipboard.writeText(isText);\n      });\n    });\n  } //reply message\n\n\n  function replyMessage() {\n    var replyMessage = itemList.querySelectorAll(\".reply-message\");\n    var replyToggleOpen = document.querySelector(\".replyCard\");\n    var replyToggleClose = document.querySelector(\"#close_toggle\");\n    replyMessage.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        isreplyMessage = true;\n        replyToggleOpen.classList.add(\"show\");\n        replyToggleClose.addEventListener(\"click\", function () {\n          replyToggleOpen.classList.remove(\"show\");\n        });\n        var replyMsg = item.closest(\".ctext-wrap\").children[0].children[0].innerText;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .mb-0\").innerText = replyMsg;\n        var replyuser = document.querySelector(\".user-profile-show\").innerHTML;\n        var msgWwnerName = item.closest(\".chat-list\") ? item.closest(\".chat-list\").classList.contains(\"left\") ? replyuser : \"You\" : replyuser;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .conversation-name\").innerText = msgWwnerName;\n      });\n    });\n  } //reply Channelmessage\n\n\n  function replyChannelMessage() {\n    var replyChannelMessage = channelItemList.querySelectorAll(\".reply-message\");\n    var replyChannelToggleOpen = document.querySelector(\".replyCard\");\n    var replyChannelToggleClose = document.querySelector(\"#close_toggle\");\n    replyChannelMessage.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        isreplyMessage = true;\n        replyChannelToggleOpen.classList.add(\"show\");\n        replyChannelToggleClose.addEventListener(\"click\", function () {\n          replyChannelToggleOpen.classList.remove(\"show\");\n        });\n        var replyChannelMsg = item.closest(\".ctext-wrap\").children[0].children[0].innerText;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .mb-0\").innerText = replyChannelMsg;\n        var replyChanneluser = document.querySelector(\".user-profile-show\").innerHTML;\n        document.querySelector(\".replyCard .replymessage-block .flex-grow-1 .conversation-name\").innerText = replyChanneluser;\n      });\n    });\n  } //Copy Channel Messages\n\n\n  function copyChannelMessage() {\n    var copyChannelMessage = channelItemList.querySelectorAll(\".copy-message\");\n    copyChannelMessage.forEach(function (item) {\n      item.addEventListener(\"click\", function () {\n        var isText = item.closest(\".ctext-wrap\").children[0] ? item.closest(\".ctext-wrap\").children[0].children[0].innerText : \"\";\n        navigator.clipboard.writeText(isText);\n      });\n    });\n  } // Profile Foreground Img\n\n\n  document.querySelector(\"#profile-foreground-img-file-input\").addEventListener(\"change\", function () {\n    var preview = document.querySelector(\".profile-foreground-img\");\n    var file = document.querySelector(\".profile-foreground-img-file-input\").files[0];\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      preview.src = reader.result;\n    }, false);\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }); // user profile img\n\n  document.querySelector(\"#profile-img-file-input\").addEventListener(\"change\", function () {\n    var preview = document.querySelector(\".user-profile-image\");\n    var file = document.querySelector(\".profile-img-file-input\").files[0];\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      preview.src = reader.result;\n    }, false);\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }); // profile user edit\n\n  document.getElementById(\"user-profile-edit-btn\").addEventListener(\"click\", function (e) {\n    document.querySelectorAll(\".edit-input .form-control\").forEach(function (item) {\n      var editIcon = document.getElementById(\"edit-icon\");\n\n      if (item.disabled) {\n        // If disabled, do this\n        editIcon.classList.replace(\"bxs-pencil\", \"bxs-save\");\n        item.disabled = false;\n      } else {\n        // Enter code here\n        editIcon.classList.replace(\"bxs-save\", \"bxs-pencil\");\n        item.disabled = true;\n      }\n    });\n  }); // favourite btn\n\n  var favouriteBtn = document.getElementsByClassName(\"favourite-btn\");\n\n  for (var i = 0; i < favouriteBtn.length; i++) {\n    var favouriteBtns = favouriteBtn[i];\n\n    favouriteBtns.onclick = function () {\n      favouriteBtns.classList.toggle(\"active\");\n    };\n  } // chat emojiPicker input\n\n\n  var emojiPicker = new FgEmojiPicker({\n    trigger: [\".emoji-btn\"],\n    removeOnSelection: false,\n    closeButton: true,\n    position: [\"top\", \"right\"],\n    preFetch: true,\n    dir: \"js/dir/json\",\n    insertInto: document.querySelector(\".chat-input\")\n  }); // emojiPicker position\n\n  var emojiBtn = document.getElementById(\"emoji-btn\");\n  emojiBtn.addEventListener(\"click\", function () {\n    setTimeout(function () {\n      var fgEmojiPicker = document.getElementsByClassName(\"fg-emoji-picker\")[0];\n\n      if (fgEmojiPicker) {\n        var leftEmoji = window.getComputedStyle(fgEmojiPicker) ? window.getComputedStyle(fgEmojiPicker).getPropertyValue(\"left\") : \"\";\n\n        if (leftEmoji) {\n          leftEmoji = leftEmoji.replace(\"px\", \"\");\n          leftEmoji = leftEmoji - 40 + \"px\";\n          fgEmojiPicker.style.left = leftEmoji;\n        }\n      }\n    }, 0);\n  });\n\n  function getJSONFile(jsonurl, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", jsonurl, true);\n    xhr.responseType = \"json\";\n\n    xhr.onload = function () {\n      var status = xhr.status;\n\n      if (status === 200) {\n        callback(null, xhr.response);\n      } else {\n        callback(status, xhr.response);\n      }\n    };\n\n    xhr.send();\n  } // getNextMsgCounts\n\n\n  function getNextMsgCounts(chatsData, i, from_id) {\n    var counts = 0;\n\n    while (chatsData[i]) {\n      if (chatsData[i + 1] && chatsData[i + 1][\"from_id\"] == from_id) {\n        counts++;\n        i++;\n      } else {\n        break;\n      }\n    }\n\n    return counts;\n  } //getNextMsgs\n\n\n  function getNextMsgs(chatsData, i, from_id, isContinue) {\n    var msgs = 0;\n\n    while (chatsData[i]) {\n      if (chatsData[i + 1] && chatsData[i + 1][\"from_id\"] == from_id) {\n        msgs = getMsg(chatsData[i + 1].id, chatsData[i + 1].msg, chatsData[i + 1].has_images, chatsData[i + 1].has_files, chatsData[i + 1].has_audios, chatsData[i + 1].has_videos, chatsData[i + 1].has_dropDown);\n        i++;\n      } else {\n        break;\n      }\n    }\n\n    return msgs;\n  } // getMsg\n\n\n  function getMsg(id, msg, has_images, has_files, has_audios, has_videos, has_dropDown) {\n    var msgHTML = '<div class=\"ctext-wrap\">';\n\n    if (msg != null) {\n      msgHTML += '<div class=\"ctext-wrap-content\" id=' + id + '>\\\r\n        <p class=\"mb-0 ctext-content\">' + msg + \"</p></div>\";\n    } else if (has_images && has_images.length > 0) {\n      msgHTML += '<div class=\"message-img mb-0\">';\n\n      for (i = 0; i < has_images.length; i++) {\n        msgHTML += '<div class=\"message-img-list\">\\\r\n            <div>\\\r\n              <a class=\"popup-img d-inline-block\" href=\"' + has_images[i] + '\">\\\r\n                <img src=\"' + has_images[i] + '\" alt=\"\" class=\"rounded border img-thumbnail\">\\\r\n              </a>\\\r\n            </div>\\\r\n            <div class=\"message-img-link\">\\\r\n              <ul class=\"list-inline mb-0\">\\\r\n                <li class=\"list-inline-item dropdown\">\\\r\n                  <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                      <i class=\"bx bx-dots-horizontal-rounded\"></i>\\\r\n                  </a>\\\r\n                <div class=\"dropdown-menu\">\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"' + has_images[i] + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\"  href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-image\" href=\"#\">Delete <i class=\"bx bx-trash ms-2 text-muted\"></i></a>\\\r\n                </div>\\\r\n              </li>\\\r\n          </ul>\\\r\n        </div>\\\r\n      </div>';\n      }\n\n      msgHTML += \"</div>\";\n    } else if (has_files.length > 0) {\n      msgHTML += '<div class=\"ctext-wrap-content\">\\\r\n            <div class=\"p-3 border rounded-3\">\\\r\n            <div class=\"d-flex align-items-center attached-file\">\\\r\n                <div class=\"flex-shrink-0 avatar-sm me-3 ms-0 attached-file-avatar\">\\\r\n                    <div class=\"avatar-title bg-soft-light rounded-circle fs-20\">\\\r\n                        <i class=\"ri-attachment-2\"></i>\\\r\n                    </div>\\\r\n                </div>\\\r\n                <div class=\"flex-grow-1 overflow-hidden\">\\\r\n                    <div class=\"text-start\">\\\r\n                        <h5 class=\"fs-14 text-white mb-1\">design-phase-1-approved.pdf</h5>\\\r\n                        <p class=\"text-white-50 text-truncate fs-13 mb-0\">12.5 MB</p>\\\r\n                    </div>\\\r\n                </div>\\\r\n                <div class=\"flex-shrink-0 ms-4\">\\\r\n                    <div class=\"d-flex gap-2 fs-20 d-flex align-items-start\">\\\r\n                        <div>\\\r\n                            <a href=\"#\" class=\"text-white-50\">\\\r\n                                <i class=\"bx bxs-download\"></i>\\\r\n                            </a>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                </div>\\\r\n             </div>\\\r\n            </div>\\\r\n            </div>\\\r\n            <div class=\"emoji-icon\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\">👍</a>\\\r\n            </div>\\\r\n            <div class=\"align-self-start message-box-drop d-flex\">\\\r\n              <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                  <i class=\"ri-emotion-happy-line\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                  <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                    <a href=\"javascript:void(0);\">💛</a>\\\r\n                    <a href=\"javascript:void(0);\">🤣</a>\\\r\n                    <a href=\"javascript:void(0);\">😜</a>\\\r\n                    <a href=\"javascript:void(0);\">😘</a>\\\r\n                    <a href=\"javascript:void(0);\">😍</a>\\\r\n                    <div class=\"avatar-xs\">\\\r\n                    <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                    </div>\\\r\n                  </div>\\\r\n                </div>\\\r\n              </div>\\\r\n              <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                    <i class=\"ri-more-2-fill\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu\">\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\"  href=\"' + has_files + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                </div>\\\r\n              </div>\\\r\n          </div>';\n    } else if (has_audios && has_audios.length > 0) {\n      msgHTML += '<div class=\"audio-file-elem\">\\\r\n                              <audio controls>\\\r\n                                  <source src=\"' + has_audios + '\" type=\"audio/mpeg\">\\\r\n                              </audio>\\\r\n                          </div>\\\r\n                  <div class=\"align-self-start message-box-drop d-flex\">\\\r\n              <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                  <i class=\"ri-emotion-happy-line\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                  <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                    <a href=\"javascript:void(0);\">💛</a>\\\r\n                    <a href=\"javascript:void(0);\">🤣</a>\\\r\n                    <a href=\"javascript:void(0);\">😜</a>\\\r\n                    <a href=\"javascript:void(0);\">😘</a>\\\r\n                    <a href=\"javascript:void(0);\">😍</a>\\\r\n                    <div class=\"avatar-xs\">\\\r\n                    <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                    </div>\\\r\n                  </div>\\\r\n                </div>\\\r\n              </div>\\\r\n              <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                    <i class=\"ri-more-2-fill\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu\">\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\"  href=\"' + has_audios + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                </div>\\\r\n              </div>\\\r\n          </div>';\n    } else if (has_videos && has_videos.length > 0) {\n      msgHTML += '<div>\\\r\n        <iframe src=\"' + has_videos + '\" title=\"YouTube video\" class=\"w-100 rounded\" autoplay allowfullscreen></iframe>\\\r\n      </div>\\\r\n                  <div class=\"align-self-start message-box-drop d-flex\">\\\r\n              <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                  <i class=\"ri-emotion-happy-line\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                  <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                    <a href=\"javascript:void(0);\">💛</a>\\\r\n                    <a href=\"javascript:void(0);\">🤣</a>\\\r\n                    <a href=\"javascript:void(0);\">😜</a>\\\r\n                    <a href=\"javascript:void(0);\">😘</a>\\\r\n                    <a href=\"javascript:void(0);\">😍</a>\\\r\n                    <div class=\"avatar-xs\">\\\r\n                    <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                    </div>\\\r\n                  </div>\\\r\n                </div>\\\r\n              </div>\\\r\n              <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                    <i class=\"ri-more-2-fill\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu\">\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\"  href=\"' + has_videos + '\" download>Download <i class=\"bx bx-download ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                  <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                </div>\\\r\n              </div>\\\r\n          </div>';\n    }\n\n    if (has_dropDown === true) {\n      msgHTML += '<div class=\"align-self-start message-box-drop d-flex\">\\\r\n            <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                  <i class=\"ri-emotion-happy-line\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu emoji-dropdown-menu\">\\\r\n                  <div class=\"hstack align-items-center gap-2 px-2 fs-25\">\\\r\n                    <a href=\"javascript:void(0);\">💛</a>\\\r\n                    <a href=\"javascript:void(0);\">🤣</a>\\\r\n                    <a href=\"javascript:void(0);\">😜</a>\\\r\n                    <a href=\"javascript:void(0);\">😘</a>\\\r\n                    <a href=\"javascript:void(0);\">😍</a>\\\r\n                    <div class=\"avatar-xs\">\\\r\n                    <a href=\"javascript:void(0);\" class=\"avatar-title bg-soft-primary rounded-circle fs-19 text-primary\">+</a>\\\r\n                    </div>\\\r\n                  </div>\\\r\n                </div>\\\r\n            </div>\\\r\n            <div class=\"dropdown\">\\\r\n                <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\\r\n                    <i class=\"ri-more-2-fill\"></i>\\\r\n                </a>\\\r\n                <div class=\"dropdown-menu\">\\\r\n                    <a class=\"dropdown-item d-flex align-items-center justify-content-between reply-message\" href=\"#\" id=\"reply-message-' + messageIds + '\" data-bs-toggle=\"collapse\" data-bs-target=\".replyCollapse\">Reply <i class=\"bx bx-share ms-2 text-muted\"></i></a>\\\r\n                    <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\".forwardModal\">Forward <i class=\"bx bx-share-alt ms-2 text-muted\"></i></a>\\\r\n                    <a class=\"dropdown-item d-flex align-items-center justify-content-between copy-message\" href=\"#\" id=\"copy-message-' + messageIds + '\">Copy <i class=\"bx bx-copy text-muted ms-2\"></i></a>\\\r\n                    <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Bookmark <i class=\"bx bx-bookmarks text-muted ms-2\"></i></a>\\\r\n                    <a class=\"dropdown-item d-flex align-items-center justify-content-between\" href=\"#\">Mark as Unread <i class=\"bx bx-message-error text-muted ms-2\"></i></a>\\\r\n                    <a class=\"dropdown-item d-flex align-items-center justify-content-between delete-item\" href=\"#\">Delete <i class=\"bx bx-trash text-muted ms-2\"></i></a>\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>';\n    }\n\n    msgHTML += \"</div>\";\n    return msgHTML;\n  } //Chat Message\n\n\n  function getChatMessages(jsonFileUrl) {\n    getJSONFile(jsonFileUrl, function (err, data) {\n      if (err !== null) {\n        console.log(\"Something went wrong: \" + err);\n      } else {\n        var chatsData = currentSelectedChat == \"users\" ? data[0].chats : data[0].channel_chat;\n        document.getElementById(currentSelectedChat + \"-conversation\").innerHTML = \"\";\n        var isContinue = 0;\n        chatsData.forEach(function (isChat, index) {\n          if (isContinue > 0) {\n            isContinue = isContinue - 1;\n            return;\n          }\n\n          var isAlighn = isChat.from_id == userChatId ? \" right\" : \" left\";\n          var user = usersList.find(function (list) {\n            return list.id == isChat.from_id;\n          });\n          var msgHTML = '<li class=\"chat-list' + isAlighn + '\" id=' + isChat.id + '>\\\r\n                        <div class=\"conversation-list\">';\n          if (userChatId != isChat.from_id && user) msgHTML += '<div class=\"chat-avatar\"><img src=\"' + user.profile + '\" alt=\"\"></div>';\n          msgHTML += '<div class=\"user-chat-content\">';\n          msgHTML += getMsg(isChat.id, isChat.msg, isChat.has_images, isChat.has_files, isChat.has_audios, isChat.has_videos, isChat.has_dropDown);\n\n          if (chatsData[index + 1] && isChat.from_id == chatsData[index + 1][\"from_id\"]) {\n            isContinue = getNextMsgCounts(chatsData, index, isChat.from_id);\n            msgHTML += getNextMsgs(chatsData, index, isChat.from_id, isContinue);\n          }\n\n          msgHTML += '<div class=\"conversation-name\"><small class=\"text-muted time\">' + isChat.datetime + '</small> <span class=\"text-success check-message-icon\"><i class=\"bx bx-check-double\"></i></span></div>';\n          msgHTML += \"</div>\\\r\n                </div>\\\r\n            </li>\";\n          document.getElementById(currentSelectedChat + \"-conversation\").innerHTML += msgHTML;\n        });\n      }\n\n      deleteMessage();\n      deleteChannelMessage();\n      deleteImage();\n      copyMessage();\n      copyChannelMessage();\n      scrollToBottom(\"users-chat\");\n      updateLightbox();\n      copyClipboard();\n      replyMessage();\n      replyChannelMessage();\n    });\n  } // GLightbox Popup\n\n\n  function updateLightbox() {\n    var lightbox = GLightbox({\n      selector: \".popup-img\",\n      title: false\n    });\n  }\n})();\n\nvar input, filter, ul, li, a, i, j, div; // Search User\n\nfunction searchUser() {\n  input = document.getElementById(\"searchChatUser\");\n  filter = input.value.toUpperCase();\n  ul = document.querySelector(\".chat-room-list\");\n  li = ul.getElementsByTagName(\"li\");\n\n  for (i = 0; i < li.length; i++) {\n    var item = li[i];\n    var txtValue = item.querySelector(\"p\").innerText;\n\n    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      li[i].style.display = \"\";\n    } else {\n      li[i].style.display = \"none\";\n    }\n  }\n} //Search Contacts\n\n\nfunction searchContacts() {\n  input = document.getElementById(\"searchContact\");\n  filter = input.value.toUpperCase();\n  list = document.querySelector(\".sort-contact\");\n  li = list.querySelectorAll(\".mt-3 li\");\n  div = list.querySelectorAll(\".mt-3 .contact-list-title\");\n  var userUUID = document.querySelector('meta[name=\"uuid\"]').content; // Fetching users from remote\n\n  axios.get(\"/api/user/contacts\", {\n    params: {}\n  }).then(function (response) {});\n\n  for (j = 0; j < div.length; j++) {\n    var contactTitle = div[j];\n    txtValue = contactTitle.innerText;\n\n    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      div[j].style.display = \"\";\n    } else {\n      div[j].style.display = \"none\";\n    }\n  }\n\n  for (i = 0; i < li.length; i++) {\n    contactName = li[i];\n    txtValue = contactName.querySelector(\"h5\").innerText;\n\n    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      li[i].style.display = \"\";\n    } else {\n      li[i].style.display = \"none\";\n    }\n  }\n}\n\ndocument.getElementById(\"searchContact\").addEventListener(\"keyup\", searchContacts); //Search contact on contactModalList\n\nfunction searchContactOnModal() {\n  input = document.getElementById(\"searchContactModal\");\n  filter = input.value.toUpperCase();\n  list = document.querySelector(\".contact-modal-list\");\n  li = list.querySelectorAll(\".mt-2 li\");\n  div = list.querySelectorAll(\".mt-2 .contact-list-title\");\n\n  for (j = 0; j < div.length; j++) {\n    var contactTitle = div[j];\n    txtValue = contactTitle.innerText;\n\n    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      div[j].style.display = \"\";\n    } else {\n      div[j].style.display = \"none\";\n    }\n  }\n\n  for (i = 0; i < li.length; i++) {\n    contactName = li[i];\n    txtValue = contactName.querySelector(\"h5\").innerText;\n\n    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      li[i].style.display = \"\";\n    } else {\n      li[i].style.display = \"none\";\n    }\n  }\n} // bookmark serach\n\n\nfunction searchBookmark() {\n  var input, filter, ul, li, a, i, txtValue;\n  input = document.getElementById(\"searchbookmark\");\n  filter = input.value.toUpperCase();\n  ul = document.getElementById(\"chat-bookmark-list\");\n  li = ul.getElementsByTagName(\"li\");\n\n  for (i = 0; i < li.length; i++) {\n    a = li[i].getElementsByTagName(\"a\")[0];\n    txtValue = a.textContent || a.innerText;\n\n    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      li[i].style.display = \"\";\n    } else {\n      li[i].style.display = \"none\";\n    }\n  }\n} //Location Permission\n\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else {\n    x.innerHTML = \"Geolocation is not supported by this browser.\";\n  }\n}\n\nfunction showPosition(position) {\n  x.innerHTML = \"Latitude: \" + position.coords.latitude + \"<br>Longitude: \" + position.coords.longitude;\n} //Camera Permission\n\n\nfunction cameraPermission() {\n  if (navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(function (s) {\n      video.srcObject = s;\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  } else {\n    console.log(\"No\");\n  }\n} //Audio(Mic) Permission\n\n\nfunction audioPermission() {\n  navigator.mediaDevices.getUserMedia({\n    audio: true\n  }).then(function (stream) {\n    window.localStream = stream;\n    window.localAudio.srcObject = stream;\n    window.localAudio.autoplay = true;\n  });\n} //get color\n\n\ndocument.documentElement.style.setProperty(\"--bs-primary-rgb\", window.localStorage.getItem(\"colorPrimary\"));\ndocument.documentElement.style.setProperty(\"--bs-secondary-rgb\", window.localStorage.getItem(\"colorSecondary\"));\n\nfunction themeColor(primaryColor) {\n  var activeCustomcolor = localStorage.getItem(\"activeCustomcolor\");\n\n  if (activeCustomcolor) {\n    document.getElementById(activeCustomcolor).checked = true;\n  }\n\n  document.querySelectorAll(\".theme-color\").forEach(function (item) {\n    var colorRadioElements = document.querySelector(\"input[name=bgcolor-radio]:checked\");\n\n    if (colorRadioElements) {\n      colorRadioElements = colorRadioElements.id;\n      var elementsColor = document.getElementsByClassName(colorRadioElements);\n      var color = window.getComputedStyle(elementsColor[0], null).getPropertyValue(\"background-image\");\n      rgbColorSecondary = color.substring(color.indexOf(\"b\") + 2, color.indexOf(\")\"));\n      rgbColorPrimary = color.substring(color.lastIndexOf(\"(\") + 1, color.lastIndexOf(\")\") - 1);\n    }\n\n    item.addEventListener(\"click\", function (event) {\n      if (item.id) {\n        localStorage.setItem(\"activeCustomcolor\", item.id);\n      } // choose theme color\n\n\n      var colorRadioElements = document.querySelector(\"input[name=bgcolor-radio]:checked\");\n\n      if (colorRadioElements) {\n        colorRadioElements = colorRadioElements.id;\n        var elementsColor = document.getElementsByClassName(colorRadioElements);\n\n        if (elementsColor) {\n          var color = window.getComputedStyle(elementsColor[0], null).getPropertyValue(\"background-image\");\n          rgbColorSecondary = color.substring(color.indexOf(\"b\") + 2, color.indexOf(\")\"));\n          rgbColorPrimary = color.substring(color.lastIndexOf(\"(\") + 1, color.lastIndexOf(\")\") - 1);\n          window.localStorage.setItem(\"colorPrimary\", rgbColorPrimary);\n          window.localStorage.setItem(\"colorSecondary\", rgbColorSecondary);\n          document.documentElement.style.setProperty(\"--bs-primary-rgb\", window.localStorage.getItem(\"colorPrimary\"));\n          document.documentElement.style.setProperty(\"--bs-secondary-rgb\", window.localStorage.getItem(\"colorSecondary\"));\n        }\n      }\n    });\n  }); // primary color picker\n\n  var classicPickrPrimary = document.querySelectorAll(\".colorpicker-primary\");\n  classicPickrPrimary.forEach(function () {\n    var primarycolor = localStorage.getItem(\"colorPrimary\") ? \"rgba(\" + localStorage.getItem(\"colorPrimary\") + \",1)\" : \"#6153CC\";\n    var primaryPicker = Pickr.create({\n      el: \".colorpicker-primary\",\n      theme: \"nano\",\n      // or 'monolith', or 'nano'\n      \"default\": primarycolor,\n      swatches: null,\n      defaultRepresentation: \"RGBA\",\n      components: {\n        // Main components\n        preview: true,\n        opacity: true,\n        hue: true,\n        // Input / output Options\n        interaction: {\n          hex: false,\n          rgba: false,\n          hsva: false,\n          input: true,\n          clear: true,\n          save: true\n        }\n      }\n    }); // primary colorpicker\n\n    primaryPicker.on(\"clear\", function (instance) {// console.log('Event: \"clear\"', instance);\n    }).on(\"cancel\", function (instance) {// console.log('cancel', primaryPicker.getColor().toRGBA().toString(0));\n    }).on(\"change\", function (color, source, instance) {\n      // console.log('Event: \"change\"', instance, primaryPicker.getColor().toRGBA().toString(0));\n      var primaryColorValue = primaryPicker.getColor().toRGBA().toString(0);\n      rgbColorsPrimary = primaryColorValue.substring(primaryColorValue.indexOf(\"(\") + 1, primaryColorValue.lastIndexOf(\",\"));\n      localStorage.setItem(\"colorPrimary\", rgbColorsPrimary);\n      document.documentElement.style.setProperty(\"--bs-primary-rgb\", window.localStorage.getItem(\"colorPrimary\"));\n    });\n  }); // secondary color picker\n\n  var classicPickrSecondary = document.querySelectorAll(\".colorpicker-secondary\");\n  classicPickrSecondary.forEach(function () {\n    var secondarycolor = localStorage.getItem(\"colorSecondary\") ? \"rgba(\" + localStorage.getItem(\"colorSecondary\") + \",1)\" : \"#b966c1\";\n    var secondaryPicker = Pickr.create({\n      el: \".colorpicker-secondary\",\n      theme: \"nano\",\n      // or 'monolith', or 'nano'\n      \"default\": secondarycolor,\n      swatches: null,\n      defaultRepresentation: \"RGBA\",\n      components: {\n        // Main components\n        preview: true,\n        opacity: true,\n        hue: true,\n        // Input / output Options\n        interaction: {\n          hex: false,\n          rgba: false,\n          hsva: false,\n          input: true,\n          clear: true,\n          save: true\n        }\n      }\n    }); // primary colorpicker\n\n    secondaryPicker.on(\"clear\", function (instance) {// console.log('Event: \"clear\"', instance);\n    }).on(\"cancel\", function (instance) {// console.log('cancel', secondaryPicker.getColor().toRGBA().toString(0));\n    }).on(\"change\", function (color, source, instance) {\n      // console.log('Event: \"change\"', instance, secondaryPicker.getColor().toRGBA().toString(0));\n      var secondaryColorValue = secondaryPicker.getColor().toRGBA().toString(0);\n      rgbColorSecondary = secondaryColorValue.substring(secondaryColorValue.lastIndexOf(\"(\") + 1, secondaryColorValue.lastIndexOf(\",\"));\n      localStorage.setItem(\"colorSecondary\", rgbColorSecondary);\n      document.documentElement.style.setProperty(\"--bs-secondary-rgb\", window.localStorage.getItem(\"colorSecondary\"));\n    });\n  });\n}\n\nvar primaryColor = window.getComputedStyle(document.body, null).getPropertyValue(\"--bs-primary-rgb\");\nthemeColor(primaryColor); //Remove image\n\nfunction removeImage(id) {\n  document.querySelector(\"#\" + id).remove();\n\n  if (document.querySelectorAll(\".image-remove\").length == 0) {\n    document.querySelector(\".file_Upload\").classList.remove(\"show\");\n  }\n} //Remove Attached Files\n\n\nfunction removeAttachedFile() {\n  if (document.getElementById(\"remove-attechedFile\")) {\n    document.getElementsByClassName(\"attechedFile-remove\")[0]; // Delete Upload Preview Attached Files\n\n    document.getElementById(\"remove-attechedFile\").addEventListener(\"click\", function (e) {\n      e.target.closest(\".attchedfile_pre\").remove();\n    });\n  }\n\n  var removeButton = document.querySelector(\"#remove-attechedFile\");\n  removeButton.addEventListener(\"click\", function () {\n    document.querySelector(\".file_Upload \").classList.remove(\"show\");\n  });\n} //Remove Audio Files\n\n\nfunction removeAudioFile() {\n  if (document.getElementById(\"remove-audioFile\")) {\n    document.getElementsByClassName(\"audioFile-remove\")[0]; // Delete Upload Preview Attached Files\n\n    document.getElementById(\"remove-audioFile\").addEventListener(\"click\", function (e) {\n      e.target.closest(\".audiofile_pre\").remove();\n    });\n  }\n\n  var removeButton = document.querySelector(\"#remove-audioFile\");\n  removeButton.addEventListener(\"click\", function () {\n    document.querySelector(\".file_Upload \").classList.remove(\"show\");\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvaW5kZXguaW5pdC5qcy5qcyIsIm5hbWVzIjpbImlzcmVwbHlNZXNzYWdlIiwiY3VycmVudENoYXRJZCIsImR1bW15SW1hZ2UiLCJjdXJyZW50U2VsZWN0ZWRDaGF0IiwidXJsIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJ1c2Vyc0xpc3QiLCJ1c2VyQ2hhdElkIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZGlzcGxheSIsInRvZ2dsZVNlbGVjdGVkIiwidXNlckNoYXRFbGVtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiaXRlbSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImVsbSIsImNsYXNzTGlzdCIsImFkZCIsImNoYXRVc2VyTGlzdCIsInF1ZXJ5U2VsZWN0b3IiLCJyZW1vdmUiLCJwYXJlbnROb2RlIiwiaXRlbTIiLCJjaGF0U3dhcCIsInVwZGF0ZVNlbGVjdGVkQ2hhdCIsImNvbnRhY3RJZCIsImdldEF0dHJpYnV0ZSIsInVzZXJuYW1lIiwiaW5uZXJIVE1MIiwiY29udGFjdEltYWdlc1dpdGhOYW1lIiwiaW1nIiwic2V0QXR0cmlidXRlIiwiY2hhdEltZyIsImNvbnZlcnNhdGlvbkltZyIsIml0ZW0zIiwic3RvcCIsImNoYW5uZWxJZCIsImNoYW5uZWxOYW1lIiwiY2hhbmdlQ2hhbm5lbE5hbWUiLCJjaGFubmVsSW1nIiwiZ2V0SlNPTiIsImpzb251cmwiLCJjYWxsYmFjayIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib3BlbiIsInJlc3BvbnNlVHlwZSIsIm9ubG9hZCIsInN0YXR1cyIsInJlc3BvbnNlIiwic2VuZCIsImVyciIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwiZmF2IiwiZmF2b3JpdGVzIiwidXNlciIsImluZGV4IiwicHJvZmlsZSIsIm5pY2tuYW1lIiwiaXNNZXNzYWdlQ291bnQiLCJtZXNzYWdlY291bnQiLCJtZXNzYWdlQ291bnQiLCJhY3RpdmVDbGFzcyIsImlkIiwibmFtZSIsImxhc3RtZXNzYWdlIiwidXNlcnMiLCJ1c2VyRGF0YSIsImlzVXNlclByb2ZpbGUiLCJjaGFubmVsc0RhdGEiLCJjaGFubmVscyIsImlzQ2hhbm5lbCIsImlzTWVzc2FnZSIsImNhbGxzTGlzdCIsImNhbGxzSWQiLCJjYWxsVXNlciIsImNhbGxJbWciLCJjYWxsTGlzdCIsImNhbGxzIiwiY2FsbEljb24iLCJjYWxsVmlkZW8iLCJjYWxsVHlwZUljb24iLCJjYWxsQXJyb3dUeXBlIiwiZGF0ZVRpbWUiLCJjYWxsVGltZSIsImNvbnRhY3RMaXN0IiwiY29udGFjdE5hbWUiLCJjb250YWN0SW1nIiwic29ydCIsImEiLCJiIiwibG9jYWxlQ29tcGFyZSIsIm1zZ0hUTUwiLCJ1c2VyTmFtZUNoYXJBdCIsImlzU29ydENvbnRhY3QiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsImdldENoYXRNZXNzYWdlcyIsInVzZXJQcm9maWxlU2lkZWJhciIsInRvZ2dsZSIsImNvbnZlcnNhdGlvblNjcm9sbCIsInNjcm9sbFRvcCIsInNjcm9sbEhlaWdodCIsIm15Q29sbGFwc2UiLCJib2R5IiwiYnNDb2xsYXBzZSIsImJvb3RzdHJhcCIsIkNvbGxhcHNlIiwiaGlkZSIsImluaXRTd2lwZXIiLCJzd2lwZXIiLCJTd2lwZXIiLCJzbGlkZXNQZXJWaWV3Iiwic3BhY2VCZXR3ZWVuIiwiYnJlYWtwb2ludHMiLCJjb250YWN0TW9kYWxMaXN0IiwibGluayIsIm9uY2xpY2siLCJmb2N1cyIsInNjcm9sbFRvQm90dG9tIiwic2ltcGxlQmFyIiwib2Zmc2V0SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJzY3JvbGxUbyIsInRvcCIsImJlaGF2aW9yIiwiY2hhdEZvcm0iLCJjaGF0SW5wdXQiLCJpdGVtTGlzdCIsImNoYXRJbnB1dEZlZWRiYWNrIiwiY3VycmVudFRpbWUiLCJhbXBtIiwiRGF0ZSIsImdldEhvdXJzIiwiaG91ciIsIm1pbnV0ZSIsImdldE1pbnV0ZXMiLCJzZXRJbnRlcnZhbCIsIm1lc3NhZ2VJZHMiLCJhdWRpb2ZpbGVuYW1lIiwiYXVkaW9maWxlU2l6ZSIsImF1ZGlvRmlsZSIsImFmaWxpbmciLCJmaWxlTnVtYmVyQXVkaW8iLCJhdWRpb3VybCIsInByZXZpZXciLCJmaWxlcyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJyZWFkQXNEYXRhVVJMIiwiZmlsZW5hbWUiLCJmaWxlU2l6ZSIsIk1hdGgiLCJyb3VuZCIsInNpemUiLCJ0b0ZpeGVkIiwicmVtb3ZlQXVkaW9GaWxlIiwiZ2V0QXVkaW9GaWxlcyIsImNoYXRpZDMiLCJuZXdBZGlvSXRlbXMiLCJuZXdBZGlvSXRlbVNpemUiLCJjaGF0Q29uTGlzdDMiLCJpdGVtTGlzdDMiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJuZXdDaGF0TGlzdCIsInN1Yml0ZW0iLCJyZW1vdmVDaGlsZCIsInN1Yml0ZW0yIiwicHJldmVudERlZmF1bHQiLCJhdWRpb2ZpbGVkYXRhaWQiLCJGaWxlIiwiRmlsZUxpc3QiLCJCbG9iIiwiYWxlcnQiLCJibG9iIiwiZmlsaW5nIiwidHlwZSIsImNyZWF0ZUVsZW1lbnQiLCJocmVmIiwiZG93bmxvYWQiLCJjbGljayIsImZpbGVuYW1lMiIsImZpbGVzaXplMiIsImZpbGUiLCJmaWxlTnVtYmVyIiwiZnIiLCJyZW1vdmVBdHRhY2hlZEZpbGUiLCJnZXRBdHRhY2hlZEZpbGVzIiwiY2hhdGlkMiIsIm5ld0F0dGNoZWRJdGVtcyIsIm5ld0F0dGNoZWRJdGVtU2l6ZSIsImNoYXRDb25MaXN0MiIsIml0ZW1MaXN0MiIsInN1Yml0ZW0xIiwiZGF0YWlkIiwiaW1hZ2V1cmxzIiwicmVtb3ZlaW1nIiwiaW5kZXhpbmciLCJwcmV2aWV3SW1hZ2VzIiwiaW1hZ2VzZWxlY3RvciIsImNhbGwiLCJyZWFkQW5kUHJldmlldyIsInRlc3QiLCJjcmVhdGVJbWFnZSIsInB1c2giLCJyZXN1bHQiLCJnZXRJbWFnZXMiLCJjaGF0aWQxIiwibmV3SW1hZ2UiLCJuZXdJbWFnZXMiLCJjaGF0Q29uTGlzdDEiLCJpdGVtTGlzdDEiLCJtdWx0aWltZyIsInVwZGF0ZUxpZ2h0Ym94IiwiZGVsZXRlSW1hZ2VzIiwiY2xvc2VzdCIsImNoaWxkRWxlbWVudENvdW50IiwiZGVsZXRlQ2hhbm5lbEltYWdlcyIsImNoYW5uZWxJdGVtTGlzdCIsImdldENoYXRMaXN0IiwiY2hhdGlkIiwiY2hhdEl0ZW1zIiwiY2hhdENvbkxpc3QiLCJzZXRUaW1lb3V0IiwiaGlkZWNsaXBib2FyZE5ldyIsInJlcGx5VG9nZ2xlT3Blbk5ldyIsInJlcGx5VG9nZ2xlQ2xvc2VOZXciLCJyZXBseU1lc3NhZ2VOZXciLCJjaGlsZHJlbiIsImlubmVyVGV4dCIsInJlcGx5VXNlck5ldyIsImN1cnJlbnRWYWx1ZSIsImNoaWxkTm9kZXMiLCJmaXJzdEVsZW1lbnRDaGlsZCIsIm5hdmlnYXRvciIsImNsaXBib2FyZCIsIndyaXRlVGV4dCIsIm1lc3NhZ2Vib3hjb2xsYXBzZSIsImdldFJlcGx5Q2hhdExpc3QiLCJjaGF0UmVwbHlJZCIsImNoYXRSZXBseUl0ZW1zIiwiY2hhdFJlcGx5VXNlciIsImNoYXRSZXBseU1lc3NhZ2UiLCJjaGF0cmVwbHlDb25MaXN0IiwiaXRlbVJlcGx5TGlzdCIsInJlcGx5TWVzc2FnZSIsInJlcGx5dXNlciIsIm1zZ1d3bmVyTmFtZSIsImNvbnRhaW5zIiwiaXNUZXh0IiwiZSIsImNoYXRJZCIsImNoYXRJZDEiLCJjaGF0SWQyIiwiY2hhdElkMyIsImNoYXRJbnB1dFZhbHVlIiwidmFsdWUiLCJpbWFnZXByZXZpZXciLCJhdHRhY2hlZEZpbGVQcmV2aWV3IiwiYXVkaW9GaWxlUHJldmlldyIsImNoYXRJbnB1dGZlZWRiYWNrIiwibGVuZ3RoIiwiZGVsZXRlTWVzc2FnZSIsImRlbGV0ZUl0ZW1zIiwiZGVsZXRlSW1hZ2UiLCJkZWxldGVDaGFubmVsTWVzc2FnZSIsImNoYW5uZWxDaGF0TGlzdCIsImNvcHlDbGlwYm9hcmQiLCJjb3B5Q2xpcGJvYXJkQWxlcnQiLCJoaWRlY2xpcGJvYXJkIiwiY29weU1lc3NhZ2UiLCJjb3B5Q2hhbm5lbE1lc3NhZ2UiLCJyZXBseVRvZ2dsZU9wZW4iLCJyZXBseVRvZ2dsZUNsb3NlIiwicmVwbHlNc2ciLCJyZXBseUNoYW5uZWxNZXNzYWdlIiwicmVwbHlDaGFubmVsVG9nZ2xlT3BlbiIsInJlcGx5Q2hhbm5lbFRvZ2dsZUNsb3NlIiwicmVwbHlDaGFubmVsTXNnIiwicmVwbHlDaGFubmVsdXNlciIsInNyYyIsImVkaXRJY29uIiwiZGlzYWJsZWQiLCJyZXBsYWNlIiwiZmF2b3VyaXRlQnRuIiwiaSIsImZhdm91cml0ZUJ0bnMiLCJlbW9qaVBpY2tlciIsIkZnRW1vamlQaWNrZXIiLCJ0cmlnZ2VyIiwicmVtb3ZlT25TZWxlY3Rpb24iLCJjbG9zZUJ1dHRvbiIsInBvc2l0aW9uIiwicHJlRmV0Y2giLCJkaXIiLCJpbnNlcnRJbnRvIiwiZW1vamlCdG4iLCJmZ0Vtb2ppUGlja2VyIiwibGVmdEVtb2ppIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJsZWZ0IiwiZ2V0SlNPTkZpbGUiLCJnZXROZXh0TXNnQ291bnRzIiwiY2hhdHNEYXRhIiwiZnJvbV9pZCIsImNvdW50cyIsImdldE5leHRNc2dzIiwiaXNDb250aW51ZSIsIm1zZ3MiLCJnZXRNc2ciLCJtc2ciLCJoYXNfaW1hZ2VzIiwiaGFzX2ZpbGVzIiwiaGFzX2F1ZGlvcyIsImhhc192aWRlb3MiLCJoYXNfZHJvcERvd24iLCJqc29uRmlsZVVybCIsImNoYXRzIiwiY2hhbm5lbF9jaGF0IiwiaXNDaGF0IiwiaXNBbGlnaG4iLCJmaW5kIiwibGlzdCIsImRhdGV0aW1lIiwibGlnaHRib3giLCJHTGlnaHRib3giLCJzZWxlY3RvciIsInRpdGxlIiwiaW5wdXQiLCJmaWx0ZXIiLCJ1bCIsImxpIiwiaiIsImRpdiIsInNlYXJjaFVzZXIiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInR4dFZhbHVlIiwiaW5kZXhPZiIsInNlYXJjaENvbnRhY3RzIiwidXNlclVVSUQiLCJjb250ZW50IiwiYXhpb3MiLCJnZXQiLCJwYXJhbXMiLCJ0aGVuIiwiY29udGFjdFRpdGxlIiwic2VhcmNoQ29udGFjdE9uTW9kYWwiLCJzZWFyY2hCb29rbWFyayIsInRleHRDb250ZW50IiwiZ2V0TG9jYXRpb24iLCJnZW9sb2NhdGlvbiIsImdldEN1cnJlbnRQb3NpdGlvbiIsInNob3dQb3NpdGlvbiIsIngiLCJjb29yZHMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImNhbWVyYVBlcm1pc3Npb24iLCJtZWRpYURldmljZXMiLCJnZXRVc2VyTWVkaWEiLCJ2aWRlbyIsInMiLCJzcmNPYmplY3QiLCJhdWRpb1Blcm1pc3Npb24iLCJhdWRpbyIsInN0cmVhbSIsImxvY2FsU3RyZWFtIiwibG9jYWxBdWRpbyIsImF1dG9wbGF5IiwiZG9jdW1lbnRFbGVtZW50Iiwic2V0UHJvcGVydHkiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidGhlbWVDb2xvciIsInByaW1hcnlDb2xvciIsImFjdGl2ZUN1c3RvbWNvbG9yIiwiY2hlY2tlZCIsImNvbG9yUmFkaW9FbGVtZW50cyIsImVsZW1lbnRzQ29sb3IiLCJjb2xvciIsInJnYkNvbG9yU2Vjb25kYXJ5Iiwic3Vic3RyaW5nIiwicmdiQ29sb3JQcmltYXJ5IiwibGFzdEluZGV4T2YiLCJzZXRJdGVtIiwiY2xhc3NpY1BpY2tyUHJpbWFyeSIsInByaW1hcnljb2xvciIsInByaW1hcnlQaWNrZXIiLCJQaWNrciIsImNyZWF0ZSIsImVsIiwidGhlbWUiLCJzd2F0Y2hlcyIsImRlZmF1bHRSZXByZXNlbnRhdGlvbiIsImNvbXBvbmVudHMiLCJvcGFjaXR5IiwiaHVlIiwiaW50ZXJhY3Rpb24iLCJoZXgiLCJyZ2JhIiwiaHN2YSIsImNsZWFyIiwic2F2ZSIsIm9uIiwiaW5zdGFuY2UiLCJzb3VyY2UiLCJwcmltYXJ5Q29sb3JWYWx1ZSIsImdldENvbG9yIiwidG9SR0JBIiwidG9TdHJpbmciLCJyZ2JDb2xvcnNQcmltYXJ5IiwiY2xhc3NpY1BpY2tyU2Vjb25kYXJ5Iiwic2Vjb25kYXJ5Y29sb3IiLCJzZWNvbmRhcnlQaWNrZXIiLCJzZWNvbmRhcnlDb2xvclZhbHVlIiwicmVtb3ZlSW1hZ2UiLCJ0YXJnZXQiLCJyZW1vdmVCdXR0b24iXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9wYWdlcy9pbmRleC5pbml0LmpzP2U2MTgiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuVGVtcGxhdGUgTmFtZTogVmhhdG8gLSBSZXNwb25zaXZlIEJvb3RzdHJhcCA1IENoYXQgQXBwXHJcbkF1dGhvcjogVGhlbWVzYnJhbmRcclxuV2Vic2l0ZTogaHR0cHM6Ly90aGVtZXNicmFuZC5jb20vXHJcbkNvbnRhY3Q6IHRoZW1lc2JyYW5kQGdtYWlsLmNvbVxyXG5GaWxlOiBJbmRleCBpbml0IGpzXHJcbiovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGlzcmVwbHlNZXNzYWdlID0gZmFsc2U7XHJcbiAgICB2YXIgY3VycmVudENoYXRJZCA9IFwidXNlcnMtY2hhdFwiO1xyXG4gICAgdmFyIGR1bW15SW1hZ2UgPSBcImltYWdlcy91c2Vycy91c2VyLWR1bW15LWltZy5qcGdcIjtcclxuXHJcbiAgICB2YXIgY3VycmVudFNlbGVjdGVkQ2hhdCA9IFwidXNlcnNcIjtcclxuICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgXCIvanMvZGlyL1wiO1xyXG4gICAgdmFyIHVzZXJzTGlzdCA9IFtdO1xyXG4gICAgdmFyIHVzZXJDaGF0SWQgPSAxO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3B5Q2xpcEJvYXJkXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29weUNsaXBCb2FyZENoYW5uZWxcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cclxuICAgIC8vIGNoYXQgdXNlciByZXNwb25zaXZlIGhpZGUgc2hvd1xyXG4gICAgZnVuY3Rpb24gdG9nZ2xlU2VsZWN0ZWQoKSB7XHJcbiAgICAgICAgdmFyIHVzZXJDaGF0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJ1c2VyLWNoYXRcIik7XHJcbiAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2hhdC11c2VyLWxpc3QgbGkgYVwiKVxyXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdXNlckNoYXRFbGVtZW50LmZvckVhY2goZnVuY3Rpb24gKGVsbSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbG0uY2xhc3NMaXN0LmFkZChcInVzZXItY2hhdC1zaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyBjaGF0IHVzZXIgbGlzdCBsaW5rIGFjdGl2ZVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGF0VXNlckxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi5jaGF0LXVzZXItbGlzdCBsaS5hY3RpdmVcIlxyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXRVc2VyTGlzdCkgY2hhdFVzZXJMaXN0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnROb2RlLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNvcnQtY29udGFjdCB1bCBsaVwiKVxyXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbTIpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0yLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyQ2hhdEVsZW1lbnQuZm9yRWFjaChmdW5jdGlvbiAoZWxtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QuYWRkKFwidXNlci1jaGF0LXNob3dcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gdXNlci1jaGF0LXJlbW92ZVxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudXNlci1jaGF0LXJlbW92ZVwiKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgdXNlckNoYXRFbGVtZW50LmZvckVhY2goZnVuY3Rpb24gKGVsbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QucmVtb3ZlKFwidXNlci1jaGF0LXNob3dcIik7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gc2luZ2xlIHRvIGNoYW5uZWwgYW5kIGNoYW5uZWwgdG8gc2luZ2xlIGNoYXQgY29udmVyc2F0aW9uXHJcbiAgICBmdW5jdGlvbiBjaGF0U3dhcCgpIHtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2Zhdm91cml0ZS11c2VycyBsaSwgI3VzZXJzTGlzdCBsaVwiKSAmJlxyXG4gICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIjZmF2b3VyaXRlLXVzZXJzIGxpLCAjdXNlcnNMaXN0IGxpXCIpXHJcbiAgICAgICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50U2VsZWN0ZWRDaGF0ID0gXCJ1c2Vyc1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVTZWxlY3RlZENoYXQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudENoYXRJZCA9IFwidXNlcnMtY2hhdFwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29udGFjdElkID0gaXRlbS5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXJuYW1lID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ucXVlcnlTZWxlY3RvcihcIi50ZXh0LXRydW5jYXRlXCIpLmlubmVySFRNTDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIi51c2VyLXByb2ZpbGUtc2lkZWJhciAudXNlci1uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSB1c2VybmFtZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRhY3RJbWFnZXNXaXRoTmFtZSA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJzLWNoYXRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhY3RJbWFnZXNXaXRoTmFtZS5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIudGV4dC10cnVuY2F0ZSAudXNlci1wcm9maWxlLXNob3dcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9IHVzZXJuYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIudXNlci1wcm9maWxlLWRlc2MgLnRleHQtdHJ1bmNhdGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9IHVzZXJuYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIuY2hhdC1pbnB1dC10eXBpbmdcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIi51c2VyLXByb2ZpbGUtc3RhdHVzXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIuY2hhdC1pbnB1dC10eXBpbmcgLnR5cGluZy11c2VyXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyBpcyBUeXBpbmc8c3BhbiBjbGFzcz1cInR5cGluZyBtcy0yXCI+PHNwYW4gY2xhc3M9XCJkb3RcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJkb3RcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJkb3RcIj48L3NwYW4+PC9zcGFuPic7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIuYXVkaW9jYWxsTW9kYWwgLnRleHQtdHJ1bmNhdGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9IHVzZXJuYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIudmlkZW9jYWxsTW9kYWwgLnRleHQtdHJ1bmNhdGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9IHVzZXJuYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1nID0gZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChjb250YWN0SWQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5hdmF0YXIteHNcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnVzZXItb3duLWltZyAuYXZhdGFyLXNtXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBpbWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIudXNlci1wcm9maWxlLXNpZGViYXIgLnByb2ZpbGUtaW1nXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBpbWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5hdWRpb2NhbGxNb2RhbCAuaW1nLXRodW1ibmFpbFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgaW1nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiLnZpZGVvY2FsbE1vZGFsIC52aWRlb2NhbGxNb2RhbC1iZ1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgaW1nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIudXNlci1vd24taW1nIC5hdmF0YXItc21cIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGR1bW15SW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIudXNlci1wcm9maWxlLXNpZGViYXIgLnByb2ZpbGUtaW1nXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXVkaW9jYWxsTW9kYWwgLmltZy10aHVtYm5haWxcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGR1bW15SW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIudmlkZW9jYWxsTW9kYWwgLnZpZGVvY2FsbE1vZGFsLWJnXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNoYXRJbWcgPSBpdGVtXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5hdmF0YXIteHNcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb252ZXJzYXRpb25JbWcgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2Vycy1jb252ZXJzYXRpb25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbkltZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubGVmdCAuY2hhdC1hdmF0YXJcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtMykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGF0SW1nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcImltZ1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjaGF0SW1nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtM1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJpbWdcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZHVtbXlJbWFnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zdG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNjaGFubmVsTGlzdCBsaVwiKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudENoYXRJZCA9IFwiY2hhbm5lbC1jaGF0XCI7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50U2VsZWN0ZWRDaGF0ID0gXCJjaGFubmVsXCI7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVTZWxlY3RlZENoYXQoKTtcclxuICAgICAgICAgICAgICAgIHZhciBjaGFubmVsSWQgPSBpdGVtLmdldEF0dHJpYnV0ZShcImlkXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNoYW5uZWxOYW1lID1cclxuICAgICAgICAgICAgICAgICAgICBpdGVtLnF1ZXJ5U2VsZWN0b3IoXCIudGV4dC10cnVuY2F0ZVwiKS5pbm5lckhUTUw7XHJcbiAgICAgICAgICAgICAgICB2YXIgY2hhbmdlQ2hhbm5lbE5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoYW5uZWwtY2hhdFwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VDaGFubmVsTmFtZS5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLnRleHQtdHJ1bmNhdGUgLnVzZXItcHJvZmlsZS1zaG93XCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJIVE1MID0gY2hhbm5lbE5hbWU7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLnVzZXItcHJvZmlsZS1kZXNjIC50ZXh0LXRydW5jYXRlXCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJIVE1MID0gY2hhbm5lbE5hbWU7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLmF1ZGlvY2FsbE1vZGFsIC50ZXh0LXRydW5jYXRlXCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJIVE1MID0gY2hhbm5lbE5hbWU7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLnZpZGVvY2FsbE1vZGFsIC50ZXh0LXRydW5jYXRlXCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJIVE1MID0gY2hhbm5lbE5hbWU7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLnVzZXItcHJvZmlsZS1zaWRlYmFyIC51c2VyLW5hbWVcIlxyXG4gICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjaGFubmVsTmFtZTtcclxuXHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtaW5wdXQtdHlwaW5nXCIpLnN0eWxlLmRpc3BsYXkgPVxyXG4gICAgICAgICAgICAgICAgICAgIFwibm9uZVwiO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyLXByb2ZpbGUtc3RhdHVzXCIpLnN0eWxlLmRpc3BsYXkgPVxyXG4gICAgICAgICAgICAgICAgICAgIFwibm9uZVwiO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNoYW5uZWxJbWcgPSBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChjaGFubmVsSWQpXHJcbiAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXZhdGFyLXhzXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLmdldEF0dHJpYnV0ZShcInNyY1wiKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoY2hhbm5lbEltZyAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NoYW5uZWwtY2hhdCAudXNlci1vd24taW1nIC5hdmF0YXItc21cIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjaGFubmVsSW1nKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi51c2VyLXByb2ZpbGUtc2lkZWJhciAucHJvZmlsZS1pbWdcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjaGFubmVsSW1nKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5hdWRpb2NhbGxNb2RhbCAuaW1nLXRodW1ibmFpbFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNoYW5uZWxJbWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnZpZGVvY2FsbE1vZGFsIC52aWRlb2NhbGxNb2RhbC1iZ1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNoYW5uZWxJbWcpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIiNjaGFubmVsLWNoYXQgLnVzZXItb3duLWltZyAuYXZhdGFyLXNtXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZHVtbXlJbWFnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIudXNlci1wcm9maWxlLXNpZGViYXIgLnByb2ZpbGUtaW1nXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZHVtbXlJbWFnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXVkaW9jYWxsTW9kYWwgLmltZy10aHVtYm5haWxcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi52aWRlb2NhbGxNb2RhbCAudmlkZW9jYWxsTW9kYWwtYmdcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy91c2VyIGxpc3QgYnkganNvblxyXG4gICAgdmFyIGdldEpTT04gPSBmdW5jdGlvbiAoanNvbnVybCwgY2FsbGJhY2spIHtcclxuICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgeGhyLm9wZW4oXCJHRVRcIiwgdXJsICsganNvbnVybCwgdHJ1ZSk7XHJcbiAgICAgICAgeGhyLnJlc3BvbnNlVHlwZSA9IFwianNvblwiO1xyXG4gICAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBzdGF0dXMgPSB4aHIuc3RhdHVzO1xyXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHhoci5yZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhzdGF0dXMsIHhoci5yZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHhoci5zZW5kKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIGdldEpTT04oXCJ1c2Vycy5qc29uXCIsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcclxuICAgICAgICBpZiAoZXJyICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmc6IFwiICsgZXJyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBzZXQgZmF2b3VyaXRlIHVzZXJzIGxpc3RcclxuICAgICAgICAgICAgdmFyIGZhdiA9IGRhdGFbMF0uZmF2b3JpdGVzO1xyXG4gICAgICAgICAgICBmYXYuZm9yRWFjaChmdW5jdGlvbiAodXNlciwgaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBwcm9maWxlID0gdXNlci5wcm9maWxlXHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGltZyBzcmM9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgIHVzZXIucHJvZmlsZSArXHJcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgY2xhc3M9XCJyb3VuZGVkLWNpcmNsZSBhdmF0YXIteHNcIiBhbHQ9XCJcIj48c3BhbiBjbGFzcz1cInVzZXItc3RhdHVzXCI+PC9zcGFuPidcclxuICAgICAgICAgICAgICAgICAgICA6ICc8ZGl2IGNsYXNzPVwiYXZhdGFyLXhzXCI+PHNwYW4gY2xhc3M9XCJhdmF0YXItdGl0bGUgcm91bmRlZC1jaXJjbGUgYmctcHJpbWFyeSB0ZXh0LXdoaXRlXCI+PHNwYW4gY2xhc3M9XCJ1c2VybmFtZVwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgdXNlci5uaWNrbmFtZSArXHJcbiAgICAgICAgICAgICAgICAgICAgICAnPC9zcGFuPjxzcGFuIGNsYXNzPVwidXNlci1zdGF0dXNcIj48L3NwYW4+PC9zcGFuPjwvZGl2Pic7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGlzTWVzc2FnZUNvdW50ID0gdXNlci5tZXNzYWdlY291bnRcclxuICAgICAgICAgICAgICAgICAgICA/ICc8ZGl2IGNsYXNzPVwibXMtYXV0b1wiPjxzcGFuIGNsYXNzPVwiYmFkZ2UgYmFkZ2Utc29mdC1kYW5nZXIgcm91bmRlZCBwLTEgZnMtMTBcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgIHVzZXIubWVzc2FnZWNvdW50ICtcclxuICAgICAgICAgICAgICAgICAgICAgIFwiPC9zcGFuPjwvZGl2PlwiXHJcbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VDb3VudCA9IHVzZXIubWVzc2FnZWNvdW50XHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGEgaHJlZj1cImphdmFzY3JpcHQ6IHZvaWQoMCk7XCIgY2xhc3M9XCJ1bnJlYWQtbXNnLXVzZXJcIj4nXHJcbiAgICAgICAgICAgICAgICAgICAgOiAnPGEgaHJlZj1cImphdmFzY3JpcHQ6IHZvaWQoMCk7XCI+JztcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgYWN0aXZlQ2xhc3MgPSB1c2VyLmlkID09PSAxID8gXCJhY3RpdmVcIiA6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZhdm91cml0ZS11c2Vyc1wiKS5pbm5lckhUTUwgKz1cclxuICAgICAgICAgICAgICAgICAgICAnPGxpIGlkPVwiY29udGFjdC1pZC0nICtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLmlkICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgZGF0YS1uYW1lPVwiZmF2b3JpdGVcIiBjbGFzcz1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZUNsYXNzICtcclxuICAgICAgICAgICAgICAgICAgICAnXCI+XFxcclxuICAgICAgICAgICAgICAgICAgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50ICtcclxuICAgICAgICAgICAgICAgICAgICAnIFxcXHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXQtdXNlci1pbWcgb25saW5lIGFsaWduLXNlbGYtY2VudGVyIG1lLTIgbXMtMFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm92ZXJmbG93LWhpZGRlbiBtZS0yXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXRydW5jYXRlIGNoYXQtdXNlcm5hbWUgbWItMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIHVzZXIubmFtZSArXHJcbiAgICAgICAgICAgICAgICAgICAgJzwvcD5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtdHJ1bmNhdGUgdGV4dC1tdXRlZCBmcy0xMyBtYi0wXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlci5sYXN0bWVzc2FnZSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCI8L3A+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiICtcclxuICAgICAgICAgICAgICAgICAgICBpc01lc3NhZ2VDb3VudCArXHJcbiAgICAgICAgICAgICAgICAgICAgXCJcXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgPC9saT5cIjtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBzZXQgdXNlcnMgbWVzc2FnZSBsaXN0XHJcbiAgICAgICAgICAgIHZhciB1c2VycyA9IGRhdGFbMF0udXNlcnM7XHJcbiAgICAgICAgICAgIHVzZXJzLmZvckVhY2goZnVuY3Rpb24gKHVzZXJEYXRhLCBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzVXNlclByb2ZpbGUgPSB1c2VyRGF0YS5wcm9maWxlXHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGltZyBzcmM9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLnByb2ZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgJ1wiIGNsYXNzPVwicm91bmRlZC1jaXJjbGUgYXZhdGFyLXhzXCIgYWx0PVwiXCI+PHNwYW4gY2xhc3M9XCJ1c2VyLXN0YXR1c1wiPjwvc3Bhbj4nXHJcbiAgICAgICAgICAgICAgICAgICAgOiAnPGRpdiBjbGFzcz1cImF2YXRhci14c1wiPjxzcGFuIGNsYXNzPVwiYXZhdGFyLXRpdGxlIHJvdW5kZWQtY2lyY2xlIGJnLXByaW1hcnkgdGV4dC13aGl0ZVwiPjxzcGFuIGNsYXNzPVwidXNlcm5hbWVcIj5KTDwvc3Bhbj48c3BhbiBjbGFzcz1cInVzZXItc3RhdHVzXCI+PC9zcGFuPjwvc3Bhbj48L2Rpdj4nO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBpc01lc3NhZ2VDb3VudCA9IHVzZXJEYXRhLm1lc3NhZ2Vjb3VudFxyXG4gICAgICAgICAgICAgICAgICAgID8gJzxkaXYgY2xhc3M9XCJtcy1hdXRvXCI+PHNwYW4gY2xhc3M9XCJiYWRnZSBiYWRnZS1zb2Z0LWRhbmdlciByb3VuZGVkIHAtMSBmcy0xMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgdXNlckRhdGEubWVzc2FnZWNvdW50ICtcclxuICAgICAgICAgICAgICAgICAgICAgIFwiPC9zcGFuPjwvZGl2PlwiXHJcbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VDb3VudCA9IHVzZXJEYXRhLm1lc3NhZ2Vjb3VudFxyXG4gICAgICAgICAgICAgICAgICAgID8gJzxhIGhyZWY9XCJqYXZhc2NyaXB0OiB2b2lkKDApO1wiIGNsYXNzPVwidW5yZWFkLW1zZy11c2VyXCI+J1xyXG4gICAgICAgICAgICAgICAgICAgIDogJzxhIGhyZWY9XCJqYXZhc2NyaXB0OiB2b2lkKDApO1wiPic7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWN0aXZlQ2xhc3MgPSB1c2VyRGF0YS5pZCA9PT0gMSA/IFwiYWN0aXZlXCIgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgdmFyIHByb2ZpbGUgPSB1c2VyRGF0YS5wcm9maWxlXHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGltZyBzcmM9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLnByb2ZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgJ1wiIGNsYXNzPVwicm91bmRlZC1jaXJjbGUgYXZhdGFyLXhzXCIgYWx0PVwiXCI+PHNwYW4gY2xhc3M9XCJ1c2VyLXN0YXR1c1wiPjwvc3Bhbj4nXHJcbiAgICAgICAgICAgICAgICAgICAgOiAnPGRpdiBjbGFzcz1cImF2YXRhci14c1wiPjxzcGFuIGNsYXNzPVwiYXZhdGFyLXRpdGxlIHJvdW5kZWQtY2lyY2xlIGJnLXByaW1hcnkgdGV4dC13aGl0ZVwiPjxzcGFuIGNsYXNzPVwidXNlcm5hbWVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLm5pY2tuYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAgICc8L3NwYW4+PHNwYW4gY2xhc3M9XCJ1c2VyLXN0YXR1c1wiPjwvc3Bhbj48L3NwYW4+PC9kaXY+JztcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlcnNMaXN0XCIpLmlubmVySFRNTCArPVxyXG4gICAgICAgICAgICAgICAgICAgICc8bGkgaWQ9XCJjb250YWN0LWlkLScgK1xyXG4gICAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLmlkICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgZGF0YS1uYW1lPVwiZmF2b3JpdGVcIiBjbGFzcz1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZUNsYXNzICtcclxuICAgICAgICAgICAgICAgICAgICAnXCI+XFxcclxuICAgICAgICAnICtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ291bnQgK1xyXG4gICAgICAgICAgICAgICAgICAgICcgXFxcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXJcIj5cXFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXQtdXNlci1pbWcgb25saW5lIGFsaWduLXNlbGYtY2VudGVyIG1lLTIgbXMtMFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZSArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1xcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm92ZXJmbG93LWhpZGRlbiBtZS0yXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtdHJ1bmNhdGUgY2hhdC11c2VybmFtZSBtYi0wXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlckRhdGEubmFtZSArXHJcbiAgICAgICAgICAgICAgICAgICAgJzwvcD5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGV4dC10cnVuY2F0ZSB0ZXh0LW11dGVkIGZzLTEzIG1iLTBcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyRGF0YS5sYXN0bWVzc2FnZSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCI8L3A+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgaXNNZXNzYWdlQ291bnQgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiXFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICA8L2E+XFxcclxuICAgIDwvbGk+XCI7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gc2V0IGNoYW5uZWxzIGxpc3RcclxuICAgICAgICAgICAgdmFyIGNoYW5uZWxzRGF0YSA9IGRhdGFbMF0uY2hhbm5lbHM7XHJcbiAgICAgICAgICAgIGNoYW5uZWxzRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpc0NoYW5uZWwsIGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvZmlsZSA9IGlzQ2hhbm5lbC5wcm9maWxlXHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGltZyBzcmM9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgIGlzQ2hhbm5lbC5wcm9maWxlICtcclxuICAgICAgICAgICAgICAgICAgICAgICdcIiBjbGFzcz1cInJvdW5kZWQtY2lyY2xlIGF2YXRhci14c1wiIGFsdD1cIlwiPidcclxuICAgICAgICAgICAgICAgICAgICA6ICc8ZGl2IGNsYXNzPVwiYXZhdGFyLXhzXCI+PHNwYW4gY2xhc3M9XCJhdmF0YXItdGl0bGUgcm91bmRlZC1jaXJjbGUgYmctcHJpbWFyeSB0ZXh0LXdoaXRlXCI+PHNwYW4gY2xhc3M9XCJ1c2VybmFtZVwiPkpMPC9zcGFuPjxzcGFuIGNsYXNzPVwidXNlci1zdGF0dXNcIj48L3NwYW4+PC9zcGFuPjwvZGl2Pic7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGlzTWVzc2FnZSA9IGlzQ2hhbm5lbC5tZXNzYWdlY291bnRcclxuICAgICAgICAgICAgICAgICAgICA/ICc8ZGl2IGNsYXNzPVwiZmxleC1zaHJpbmstMCBtcy0yXCI+PHNwYW4gY2xhc3M9XCJiYWRnZSBiYWRnZS1zb2Z0LWRhbmdlciByb3VuZGVkIHAtMSBmcy0xMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgaXNDaGFubmVsLm1lc3NhZ2Vjb3VudCArXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIjwvc3Bhbj48L2Rpdj5cIlxyXG4gICAgICAgICAgICAgICAgICAgIDogXCJcIjtcclxuICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlQ291bnQgPSBpc0NoYW5uZWwubWVzc2FnZWNvdW50XHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGEgaHJlZj1cImphdmFzY3JpcHQ6IHZvaWQoMCk7XCIgY2xhc3M9XCJ1bnJlYWQtbXNnLXVzZXJcIj4nXHJcbiAgICAgICAgICAgICAgICAgICAgOiAnPGEgaHJlZj1cImphdmFzY3JpcHQ6IHZvaWQoMCk7XCI+JztcclxuICAgICAgICAgICAgICAgIHZhciBwcm9maWxlID0gaXNDaGFubmVsLnByb2ZpbGVcclxuICAgICAgICAgICAgICAgICAgICA/ICc8aW1nIHNyYz1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgaXNDaGFubmVsLnByb2ZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgJ1wiIGNsYXNzPVwicm91bmRlZC1jaXJjbGUgYXZhdGFyLXhzXCIgYWx0PVwiXCI+J1xyXG4gICAgICAgICAgICAgICAgICAgIDogJzxkaXYgY2xhc3M9XCJhdmF0YXIteHNcIj48c3BhbiBjbGFzcz1cImF2YXRhci10aXRsZSByb3VuZGVkLWNpcmNsZSBiZy1wcmltYXJ5IHRleHQtd2hpdGVcIj48c3BhbiBjbGFzcz1cInVzZXJuYW1lXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICBpc0NoYW5uZWwubmlja25hbWUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgXCI8L3NwYW4+PC9zcGFuPjwvZGl2PlwiO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFubmVsTGlzdFwiKS5pbm5lckhUTUwgKz1cclxuICAgICAgICAgICAgICAgICAgICAnPGxpIGlkPVwiY29udGFjdC1pZC0nICtcclxuICAgICAgICAgICAgICAgICAgICBpc0NoYW5uZWwuaWQgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiBkYXRhLW5hbWU9XCJjaGFubmVsXCI+XFxcclxuICAgICAgICAgICAgICAgICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb3VudCArXHJcbiAgICAgICAgICAgICAgICAgICAgJyBcXFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtc2hyaW5rLTAgbWUtMlwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhdC11c2VyLWltZyBvbmxpbmUgYWxpZ24tc2VsZi1jZW50ZXJcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZSArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1xcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1ncm93LTEgb3ZlcmZsb3ctaGlkZGVuXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz1cInRleHQtdHJ1bmNhdGUgbWItMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGlzQ2hhbm5lbC5uYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9oNj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXRydW5jYXRlIHRleHQtbXV0ZWQgZnMtMTMgbWItMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGlzQ2hhbm5lbC5sYXN0bWVzc2FnZSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCI8L3A+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cIiArXHJcbiAgICAgICAgICAgICAgICAgICAgaXNNZXNzYWdlICtcclxuICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvYT5cXFxyXG4gICAgICAgICAgICA8L2xpPlwiO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdG9nZ2xlU2VsZWN0ZWQoKTtcclxuICAgICAgICBjaGF0U3dhcCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy9DYWxsTGlzdCB1c2VyRGV0YWlsc1xyXG4gICAgZnVuY3Rpb24gY2FsbHNMaXN0KCkge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjY2FsbExpc3QgbGlcIikuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBjYWxsc0lkID0gaXRlbS5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBjYWxsVXNlciA9IGl0ZW0ucXVlcnlTZWxlY3RvcihcIi50ZXh0LXRydW5jYXRlXCIpLmlubmVySFRNTDtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgXCIudmlkZW9jYWxsTW9kYWwgLnRleHQtdHJ1bmNhdGVcIlxyXG4gICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjYWxsVXNlcjtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgXCIuYXVkaW9jYWxsTW9kYWwgLnRleHQtdHJ1bmNhdGVcIlxyXG4gICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjYWxsVXNlcjtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgY2FsbEltZyA9IGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKGNhbGxzSWQpXHJcbiAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXZhdGFyLXhzXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLmdldEF0dHJpYnV0ZShcInNyY1wiKTtcclxuICAgICAgICAgICAgICAgIGlmIChjYWxsSW1nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXVkaW9jYWxsTW9kYWwgLmltZy10aHVtYm5haWxcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjYWxsSW1nKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi52aWRlb2NhbGxNb2RhbCAudmlkZW9jYWxsTW9kYWwtYmdcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjYWxsSW1nKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXVkaW9jYWxsTW9kYWwgLmltZy10aHVtYm5haWxcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi52aWRlb2NhbGxNb2RhbCAudmlkZW9jYWxsTW9kYWwtYmdcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9DYWxsIGxpc3RcclxuICAgIGdldEpTT04oXCJjYWxsTGlzdC5qc29uXCIsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcclxuICAgICAgICBpZiAoZXJyICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmc6IFwiICsgZXJyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjYWxsTGlzdCA9IGRhdGE7XHJcbiAgICAgICAgICAgIGNhbGxMaXN0LmZvckVhY2goZnVuY3Rpb24gKGNhbGxzLCBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNhbGxJY29uID1cclxuICAgICAgICAgICAgICAgICAgICBjYWxscy5jYWxsVmlkZW8gPT09IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLWxpbmsgcC0wIGZzLTIwIHN0cmV0Y2hlZC1saW5rXCIgZGF0YS1icy10b2dnbGU9XCJtb2RhbFwiIGRhdGEtYnMtdGFyZ2V0PVwiLnZpZGVvY2FsbE1vZGFsXCI+PGkgY2xhc3M9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxscy5jYWxsVHlwZUljb24gK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdcIj48L2k+PC9idXR0b24+J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tbGluayBwLTAgZnMtMjAgc3RyZXRjaGVkLWxpbmtcIiBkYXRhLWJzLXRvZ2dsZT1cIm1vZGFsXCIgZGF0YS1icy10YXJnZXQ9XCIuYXVkaW9jYWxsTW9kYWxcIj48aSBjbGFzcz1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxzLmNhbGxUeXBlSWNvbiArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiPjwvaT48L2J1dHRvbj4nO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBwcm9maWxlID0gY2FsbHMucHJvZmlsZVxyXG4gICAgICAgICAgICAgICAgICAgID8gJzxpbWcgc3JjPVwiJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICBjYWxscy5wcm9maWxlICtcclxuICAgICAgICAgICAgICAgICAgICAgICdcIiBjbGFzcz1cInJvdW5kZWQtY2lyY2xlIGF2YXRhci14c1wiIGFsdD1cIlwiPidcclxuICAgICAgICAgICAgICAgICAgICA6ICc8ZGl2IGNsYXNzPVwiYXZhdGFyLXhzXCI+PHNwYW4gY2xhc3M9XCJhdmF0YXItdGl0bGUgcm91bmRlZC1jaXJjbGUgYmctZGFuZ2VyIHRleHQtd2hpdGVcIj5STDwvc3Bhbj48L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYWxsTGlzdFwiKS5pbm5lckhUTUwgKz1cclxuICAgICAgICAgICAgICAgICAgICAnPGxpIGlkPVwiY2FsbHMtaWQtJyArXHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbHMuaWQgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiA+XFxcclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxcXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNoYXQtdXNlci1pbWcgZmxleC1zaHJpbmstMCBtZS0yXCI+XFxcclxuICAgICAgICAgICAgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZSArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1xcXHJcbiAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtZ3Jvdy0xIG92ZXJmbG93LWhpZGRlblwiPlxcXHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtdHJ1bmNhdGUgbWItMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxzLm5hbWUgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L3A+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LW11dGVkIGZzLTEyIHRleHQtdHJ1bmNhdGVcIj48aSBjbGFzcz1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxzLmNhbGxBcnJvd1R5cGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIj48L2k+ICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxzLmRhdGVUaW1lICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+XFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtc2hyaW5rLTAgbXMtM1wiPlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBnYXAtM1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJtYi0wIGZzLTEyIHRleHQtbXV0ZWRcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICBjYWxscy5jYWxsVGltZSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCI8L2g1PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgXCIgK1xyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxJY29uICtcclxuICAgICAgICAgICAgICAgICAgICBcIlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgPC9kaXY+XFxcclxuICAgICAgPC9saT5cIjtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhbGxzTGlzdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy9Db250YWN0IExpc3QgZHluYW1pYyBEZXRhaWxzXHJcbiAgICBmdW5jdGlvbiBjb250YWN0TGlzdCgpIHtcclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5zb3J0LWNvbnRhY3QgdWwgbGlcIilcclxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3RlZENoYXQgPSBcInVzZXJzXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlU2VsZWN0ZWRDaGF0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRhY3ROYW1lID0gaXRlbS5xdWVyeVNlbGVjdG9yKFwibGkgLmZzLTE0XCIpLmlubmVySFRNTDtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi50ZXh0LXRydW5jYXRlIC51c2VyLXByb2ZpbGUtc2hvd1wiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjb250YWN0TmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi51c2VyLXByb2ZpbGUtZGVzYyAudGV4dC10cnVuY2F0ZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjb250YWN0TmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi5hdWRpb2NhbGxNb2RhbCAudGV4dC10cnVuY2F0ZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjb250YWN0TmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi52aWRlb2NhbGxNb2RhbCAudGV4dC10cnVuY2F0ZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgPSBjb250YWN0TmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi51c2VyLXByb2ZpbGUtc2lkZWJhciAudXNlci1uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9IGNvbnRhY3ROYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhdC1pbnB1dC10eXBpbmdcIikuc3R5bGUuZGlzcGxheSA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYmxvY2tcIjtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi51c2VyLXByb2ZpbGUtc3RhdHVzXCJcclxuICAgICAgICAgICAgICAgICAgICApLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCIuY2hhdC1pbnB1dC10eXBpbmcgLnR5cGluZy11c2VyXCJcclxuICAgICAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhY3ROYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJyBpcyBUeXBpbmc8c3BhbiBjbGFzcz1cInR5cGluZyBtcy0yXCI+PHNwYW4gY2xhc3M9XCJkb3RcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJkb3RcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJkb3RcIj48L3NwYW4+PC9zcGFuPic7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjb250YWN0SW1nID0gaXRlbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcImxpIC5hbGlnbi1pdGVtcy1jZW50ZXJcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuYXZhdGFyLXhzIC5yb3VuZGVkLWNpcmNsZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwic3JjXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb250YWN0SW1nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi51c2VyLW93bi1pbWcgLmF2YXRhci1zbVwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjb250YWN0SW1nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnVzZXItcHJvZmlsZS1zaWRlYmFyIC5wcm9maWxlLWltZ1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjb250YWN0SW1nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmF1ZGlvY2FsbE1vZGFsIC5pbWctdGh1bWJuYWlsXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNvbnRhY3RJbWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIudmlkZW9jYWxsTW9kYWwgLnZpZGVvY2FsbE1vZGFsLWJnXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNvbnRhY3RJbWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi51c2VyLW93bi1pbWcgLmF2YXRhci1zbVwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnVzZXItcHJvZmlsZS1zaWRlYmFyIC5wcm9maWxlLWltZ1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBkdW1teUltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmF1ZGlvY2FsbE1vZGFsIC5pbWctdGh1bWJuYWlsXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGR1bW15SW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIudmlkZW9jYWxsTW9kYWwgLnZpZGVvY2FsbE1vZGFsLWJnXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGR1bW15SW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgY29udmVyc2F0aW9uSW1nID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2Vycy1jb252ZXJzYXRpb25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSW1nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLmxlZnQgLmNoYXQtYXZhdGFyXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtMykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RJbWcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtM1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcImltZ1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNvbnRhY3RJbWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtM1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcImltZ1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKFwic3JjXCIsIGR1bW15SW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc3RvcCgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGdldCBjb250YWN0cyBsaXN0XHJcbiAgICBnZXRKU09OKFwiY29udGFjdHMuanNvblwiLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICAgICAgaWYgKGVyciAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nOiBcIiArIGVycik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdXNlcnNMaXN0ID0gZGF0YTtcclxuICAgICAgICAgICAgZGF0YS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYS5uYW1lLmxvY2FsZUNvbXBhcmUoYi5uYW1lKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIC8vIHNldCBmYXZvdXJpdGUgdXNlcnMgbGlzdFxyXG4gICAgICAgICAgICB2YXIgbXNnSFRNTCA9IFwiXCI7XHJcbiAgICAgICAgICAgIHZhciB1c2VyTmFtZUNoYXJBdCA9IFwiXCI7XHJcblxyXG4gICAgICAgICAgICB1c2Vyc0xpc3QuZm9yRWFjaChmdW5jdGlvbiAodXNlciwgaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBwcm9maWxlID0gdXNlci5wcm9maWxlXHJcbiAgICAgICAgICAgICAgICAgICAgPyAnPGltZyBzcmM9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgIHVzZXIucHJvZmlsZSArXHJcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgY2xhc3M9XCJpbWctZmx1aWQgcm91bmRlZC1jaXJjbGVcIiBhbHQ9XCJcIj4nXHJcbiAgICAgICAgICAgICAgICAgICAgOiAnPHNwYW4gY2xhc3M9XCJhdmF0YXItdGl0bGUgcm91bmRlZC1jaXJjbGUgYmctcHJpbWFyeSBmcy0xMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgdXNlci5uaWNrbmFtZSArXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIjwvc3Bhbj5cIjtcclxuXHJcbiAgICAgICAgICAgICAgICBtc2dIVE1MID1cclxuICAgICAgICAgICAgICAgICAgICAnPGxpPlxcXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXJcIj5cXFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1zaHJpbmstMCBtZS0yXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdmF0YXIteHNcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtZ3Jvdy0xXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz1cImZzLTE0IG0tMFwiID4nICtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLm5hbWUgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L2g1PlxcXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cInRleHQtbXV0ZWQgZHJvcGRvd24tdG9nZ2xlXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJieCBieC1kb3RzLXZlcnRpY2FsLXJvdW5kZWQgYWxpZ24tbWlkZGxlXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1lbmRcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCI+RWRpdCA8aSBjbGFzcz1cImJ4IGJ4LXBlbmNpbCBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIj5CbG9jayA8aSBjbGFzcz1cImJ4IGJ4LWJsb2NrIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiPlJlbW92ZSA8aSBjbGFzcz1cImJ4IGJ4LXRyYXNoIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgPC9saT4nO1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzU29ydENvbnRhY3QgPVxyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwibXQtM1wiID5cXFxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWN0LWxpc3QtdGl0bGVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLm5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgIDx1bCBpZD1cImNvbnRhY3Qtc29ydC0nICtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLm5hbWUuY2hhckF0KDApICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgY2xhc3M9XCJsaXN0LXVuc3R5bGVkIGNvbnRhY3QtbGlzdFwiID4nO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZUNoYXJBdCAhPSB1c2VyLm5hbWUuY2hhckF0KDApKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzb3J0LWNvbnRhY3RcIlxyXG4gICAgICAgICAgICAgICAgICAgIClbMF0uaW5uZXJIVE1MICs9IGlzU29ydENvbnRhY3Q7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRhY3Qtc29ydC1cIiArIHVzZXIubmFtZS5jaGFyQXQoMClcclxuICAgICAgICAgICAgICAgICkuaW5uZXJIVE1MID1cclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjb250YWN0LXNvcnQtXCIgKyB1c2VyLm5hbWUuY2hhckF0KDApXHJcbiAgICAgICAgICAgICAgICAgICAgKS5pbm5lckhUTUwgKyBtc2dIVE1MO1xyXG4gICAgICAgICAgICAgICAgdXNlck5hbWVDaGFyQXQgPSB1c2VyLm5hbWUuY2hhckF0KDApO1xyXG4gICAgICAgICAgICAgICAgK1wiPC91bD5cIiArIFwiPC9kaXY+XCI7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb250YWN0TGlzdCgpO1xyXG4gICAgICAgIHRvZ2dsZVNlbGVjdGVkKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVTZWxlY3RlZENoYXQoKSB7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRTZWxlY3RlZENoYXQgPT0gXCJ1c2Vyc1wiKSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhbm5lbC1jaGF0XCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2Vycy1jaGF0XCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgICAgIGdldENoYXRNZXNzYWdlcyh1cmwgKyBcImNoYXRzLmpzb25cIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFubmVsLWNoYXRcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2Vycy1jaGF0XCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICAgICAgZ2V0Q2hhdE1lc3NhZ2VzKHVybCArIFwiY2hhdHMuanNvblwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB1cGRhdGVTZWxlY3RlZENoYXQoKTtcclxuXHJcbiAgICAvLyBQcm9maWxlIGhpZGUvc2hvd1xyXG4gICAgdmFyIHVzZXJQcm9maWxlU2lkZWJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXNlci1wcm9maWxlLXNpZGViYXJcIik7XHJcblxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi51c2VyLXByb2ZpbGUtc2hvd1wiKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHVzZXJQcm9maWxlU2lkZWJhci5jbGFzc0xpc3QudG9nZ2xlKFwiZC1ibG9ja1wiKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGNoYXQgY29udmVyc2F0aW9uIHNjcm9sbFxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY29udmVyc2F0aW9uU2Nyb2xsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgXCIjY2hhdC1jb252ZXJzYXRpb24gLnNpbXBsZWJhci1jb250ZW50LXdyYXBwZXJcIlxyXG4gICAgICAgICk7XHJcbiAgICAgICAgY29udmVyc2F0aW9uU2Nyb2xsLnNjcm9sbFRvcCA9IGNvbnZlcnNhdGlvblNjcm9sbC5zY3JvbGxIZWlnaHQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBib2R5IGNsaWNrIGhpZGUgY29sbGFwc2VcclxuICAgIHZhciBteUNvbGxhcHNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGF0aW5wdXRtb3JlY29sbGFwc2VcIik7XHJcbiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGJzQ29sbGFwc2UgPSBuZXcgYm9vdHN0cmFwLkNvbGxhcHNlKG15Q29sbGFwc2UsIHtcclxuICAgICAgICAgICAgdG9nZ2xlOiBmYWxzZSxcclxuICAgICAgICB9KTtcclxuICAgICAgICBic0NvbGxhcHNlLmhpZGUoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGNoYXQgY29udmVyc2F0aW9uIHN3aXBlclxyXG4gICAgaWYgKG15Q29sbGFwc2UpIHtcclxuICAgICAgICBteUNvbGxhcHNlLmFkZEV2ZW50TGlzdGVuZXIoXCJzaG93bi5icy5jb2xsYXBzZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGluaXRTd2lwZXIoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbml0U3dpcGVyKCkge1xyXG4gICAgICAgIHZhciBzd2lwZXIgPSBuZXcgU3dpcGVyKFwiLmNoYXRpbnB1dC1saW5rc1wiLCB7XHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMzAsXHJcbiAgICAgICAgICAgIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAgICAgICAgICAgICA3Njg6IHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA0LFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIDEwMjQ6IHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA2LFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBjb250YWN0IG1vZGFsIGxpc3RcclxuICAgIHZhciBjb250YWN0TW9kYWxMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcclxuICAgICAgICBcIi5jb250YWN0LW1vZGFsLWxpc3QgLmNvbnRhY3QtbGlzdCBsaVwiXHJcbiAgICApO1xyXG4gICAgY29udGFjdE1vZGFsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChsaW5rKSB7XHJcbiAgICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsaW5rLmNsYXNzTGlzdC50b2dnbGUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIENoYW5nZSBjb252ZXJzYXRpb24gYmdcclxuXHJcbiAgICAvL0F1dG8gRm9jdXMgY3Vyc2VyIHRvIFRleHQgQm94IEFyZWFcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZhdm91cml0ZS11c2Vyc1wiKS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhdC1pbnB1dFwiKS5mb2N1cygpO1xyXG4gICAgfTtcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJzTGlzdFwiKS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhdC1pbnB1dFwiKS5mb2N1cygpO1xyXG4gICAgfTtcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoYW5uZWxMaXN0XCIpLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGF0LWlucHV0XCIpLmZvY3VzKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFNjcm9sbCB0byBCb3R0b21cclxuICAgIGZ1bmN0aW9uIHNjcm9sbFRvQm90dG9tKGlkKSB7XHJcbiAgICAgICAgdmFyIHNpbXBsZUJhciA9IGRvY3VtZW50XHJcbiAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChpZClcclxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjY2hhdC1jb252ZXJzYXRpb24gLnNpbXBsZWJhci1jb250ZW50LXdyYXBwZXJcIik7XHJcbiAgICAgICAgdmFyIG9mZnNldEhlaWdodCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgICAgICAgIFwiY2hhdC1jb252ZXJzYXRpb24tbGlzdFwiXHJcbiAgICAgICAgKVswXVxyXG4gICAgICAgICAgICA/IGRvY3VtZW50XHJcbiAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChpZClcclxuICAgICAgICAgICAgICAgICAgLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjaGF0LWNvbnZlcnNhdGlvbi1saXN0XCIpWzBdXHJcbiAgICAgICAgICAgICAgICAgIC5zY3JvbGxIZWlnaHQgLVxyXG4gICAgICAgICAgICAgIHdpbmRvdy5pbm5lckhlaWdodCArXHJcbiAgICAgICAgICAgICAgMjUwXHJcbiAgICAgICAgICAgIDogMDtcclxuICAgICAgICBpZiAob2Zmc2V0SGVpZ2h0KVxyXG4gICAgICAgICAgICBzaW1wbGVCYXIuc2Nyb2xsVG8oeyB0b3A6IG9mZnNldEhlaWdodCwgYmVoYXZpb3I6IFwic21vb3RoXCIgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9hZGQgYW4gZXZlbnRMaXN0ZW5lciB0byB0aGUgZnJvbVxyXG4gICAgdmFyIGNoYXRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjaGF0aW5wdXQtZm9ybVwiKTtcclxuICAgIHZhciBjaGF0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NoYXQtaW5wdXRcIik7XHJcbiAgICB2YXIgaXRlbUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtY29udmVyc2F0aW9uLWxpc3RcIik7XHJcbiAgICB2YXIgY2hhdElucHV0RmVlZGJhY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtaW5wdXQtZmVlZGJhY2tcIik7XHJcblxyXG4gICAgZnVuY3Rpb24gY3VycmVudFRpbWUoKSB7XHJcbiAgICAgICAgdmFyIGFtcG0gPSBuZXcgRGF0ZSgpLmdldEhvdXJzKCkgPj0gMTIgPyBcInBtXCIgOiBcImFtXCI7XHJcbiAgICAgICAgdmFyIGhvdXIgPVxyXG4gICAgICAgICAgICBuZXcgRGF0ZSgpLmdldEhvdXJzKCkgPiAxMlxyXG4gICAgICAgICAgICAgICAgPyBuZXcgRGF0ZSgpLmdldEhvdXJzKCkgJSAxMlxyXG4gICAgICAgICAgICAgICAgOiBuZXcgRGF0ZSgpLmdldEhvdXJzKCk7XHJcbiAgICAgICAgdmFyIG1pbnV0ZSA9XHJcbiAgICAgICAgICAgIG5ldyBEYXRlKCkuZ2V0TWludXRlcygpIDwgMTBcclxuICAgICAgICAgICAgICAgID8gXCIwXCIgKyBuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKVxyXG4gICAgICAgICAgICAgICAgOiBuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKTtcclxuICAgICAgICBpZiAoaG91ciA8IDEwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBcIjBcIiArIGhvdXIgKyBcIjpcIiArIG1pbnV0ZSArIFwiIFwiICsgYW1wbTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gaG91ciArIFwiOlwiICsgbWludXRlICsgXCIgXCIgKyBhbXBtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldEludGVydmFsKGN1cnJlbnRUaW1lLCAxMDAwKTtcclxuXHJcbiAgICB2YXIgbWVzc2FnZUlkcyA9IDA7XHJcblxyXG4gICAgLy9BdWRpbyBmaWxlXHJcbiAgICB2YXIgYXVkaW9maWxlbmFtZTtcclxuICAgIHZhciBhdWRpb2ZpbGVTaXplO1xyXG4gICAgdmFyIGF1ZGlvRmlsZSA9IFwiXCI7XHJcbiAgICB2YXIgYWZpbGluZyA9IFtdO1xyXG4gICAgdmFyIGZpbGVOdW1iZXJBdWRpbyA9IDE7XHJcbiAgICB2YXIgYXVkaW91cmwgPSBcIlwiO1xyXG4gICAgZG9jdW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIiNhdWRpb2ZpbGUtaW5wdXRcIilcclxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBwcmV2aWV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5maWxlX1VwbG9hZFwiKTtcclxuICAgICAgICAgICAgYXVkaW9GaWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdWRpb2ZpbGUtaW5wdXRcIikuZmlsZXNbMF07XHJcblxyXG4gICAgICAgICAgICBhdWRpb3VybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYXVkaW9GaWxlKTtcclxuXHJcbiAgICAgICAgICAgIC8vIHJlbW92ZS1hdWRpb0ZpbGVcclxuXHJcbiAgICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChhdWRpb0ZpbGUpO1xyXG4gICAgICAgICAgICBpZiAocHJldmlldykge1xyXG4gICAgICAgICAgICAgICAgcHJldmlldy5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgICAgICAgICBcImxvYWRcIixcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBBcnJheS5wdXNoKHByZXZpZXcpLmZvckVhY2goKGdhbGxlcnksIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGVuYW1lID0gYXVkaW9GaWxlLm5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGVTaXplID0gTWF0aC5yb3VuZChhdWRpb0ZpbGUuc2l6ZSAvIDEwMDAwMDApLnRvRml4ZWQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDJcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3LmlubmVySFRNTCA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2FyZCBwLTIgYm9yZGVyIG1iLTIgYXVkaW9maWxlX3ByZSBkLWlubGluZS1ibG9jayBwb3NpdGlvbi1yZWxhdGl2ZVwiPlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyXCI+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wIGF2YXRhci14cyBtcy0xIG1lLTNcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdmF0YXItdGl0bGUgYmctc29mdC1wcmltYXJ5IHRleHQtcHJpbWFyeSByb3VuZGVkLWNpcmNsZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYnggYngtaGVhZHBob25lXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1ncm93LTEgb3ZlcmZsb3ctaGlkZGVuXCI+XFxcclxuICAgICAgICAgICAgICAgIDxoNSBjbGFzcz1cImZzLTE0IHRleHQtdHJ1bmNhdGUgbWItMVwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZSArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2g1PlxcXHJcbiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImRvd25sb2FkYXVkaW9kYXRhXCIgdmFsdWU9XCInICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXVkaW91cmwgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnXCIvPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGV4dC1tdXRlZCB0ZXh0LXRydW5jYXRlIGZzLTEzIG1iLTBcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZVNpemUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnbWI8L3A+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1zaHJpbmstMCBtcy0zXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGdhcC0yXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpLWNsb3NlLWxpbmUgdGV4dC1kYW5nZXIgYXVkaW9GaWxlLXJlbW92ZVwiICBpZD1cInJlbW92ZS1hdWRpb0ZpbGVcIj48L2k+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgIDwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICAgICAgYXVkaW9maWxlbmFtZSA9IGZpbGVuYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIGF1ZGlvZmlsZVNpemUgPSBmaWxlU2l6ZTtcclxuICAgICAgICAgICAgICAgICAgICByZW1vdmVBdWRpb0ZpbGUoKTtcclxuICAgICAgICAgICAgICAgICAgICBhZmlsaW5nW2ZpbGVOdW1iZXJBdWRpb10gPSBhdWRpb0ZpbGU7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmFsc2VcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgZmlsZU51bWJlckF1ZGlvKys7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgdmFyIGdldEF1ZGlvRmlsZXMgPSBmdW5jdGlvbiAoY2hhdGlkMywgbmV3QWRpb0l0ZW1zLCBuZXdBZGlvSXRlbVNpemUpIHtcclxuICAgICAgICB2YXIgbmV3QWRpb0l0ZW1zID0gYXVkaW9maWxlbmFtZTtcclxuICAgICAgICB2YXIgbmV3QWRpb0l0ZW1TaXplID0gYXVkaW9maWxlU2l6ZTtcclxuICAgICAgICBtZXNzYWdlSWRzKys7XHJcbiAgICAgICAgdmFyIGNoYXRDb25MaXN0MyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNoYXRpZDMpO1xyXG4gICAgICAgIHZhciBpdGVtTGlzdDMgPSBjaGF0Q29uTGlzdDMucXVlcnlTZWxlY3RvcihcIi5jaGF0LWNvbnZlcnNhdGlvbi1saXN0XCIpO1xyXG4gICAgICAgIGlmIChuZXdBZGlvSXRlbXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBpdGVtTGlzdDMuaW5zZXJ0QWRqYWNlbnRIVE1MKFxyXG4gICAgICAgICAgICAgICAgXCJiZWZvcmVlbmRcIixcclxuXHJcbiAgICAgICAgICAgICAgICAnPGxpIGNsYXNzPVwiY2hhdC1saXN0IHJpZ2h0XCIgaWQ9XCJjaGF0LWxpc3QtJyArXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkcyArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1wiID5cXFxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnZlcnNhdGlvbi1saXN0XCI+XFxcclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1jaGF0LWNvbnRlbnRcIj5cXFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3RleHQtd3JhcFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdWRpby1maWxlLWVsZW1cIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXVkaW8gY29udHJvbHM+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPVwiJyArXHJcbiAgICAgICAgICAgICAgICAgICAgYXVkaW91cmwgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiB0eXBlPVwiYXVkaW8vbXBlZ1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXVkaW8+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFsaWduLXNlbGYtc3RhcnQgbWVzc2FnZS1ib3gtZHJvcCBkLWZsZXhcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi10b2dnbGVcIiBocmVmPVwiI1wiIHJvbGU9XCJidXR0b25cIiBkYXRhLWJzLXRvZ2dsZT1cImRyb3Bkb3duXCIgYXJpYS1oYXNwb3B1cD1cInRydWVcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicmktZW1vdGlvbi1oYXBweS1saW5lXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudSBlbW9qaS1kcm9wZG93bi1tZW51XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaHN0YWNrIGFsaWduLWl0ZW1zLWNlbnRlciBnYXAtMiBweC0yIGZzLTI1XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+SmzwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn6SjPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJw8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YmDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5iNPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXZhdGFyLXhzXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCIgY2xhc3M9XCJhdmF0YXItdGl0bGUgYmctc29mdC1wcmltYXJ5IHJvdW5kZWQtY2lyY2xlIGZzLTE5IHRleHQtcHJpbWFyeVwiPis8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPiA8aSBjbGFzcz1cInJpLW1vcmUtMi1maWxsXCI+PC9pPiA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51XCI+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiJyArXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3QWRpb0l0ZW1zICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgZG93bmxvYWQ+RG93bmxvYWQgPGkgY2xhc3M9XCJieCBieC1kb3dubG9hZCBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIiBkYXRhLWJzLXRvZ2dsZT1cImNvbGxhcHNlXCIgZGF0YS1icy10YXJnZXQ9XCIucmVwbHlDb2xsYXBzZVwiPlJlcGx5IDxpIGNsYXNzPVwiYnggYngtc2hhcmUgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJtb2RhbFwiIGRhdGEtYnMtdGFyZ2V0PVwiLmZvcndhcmRNb2RhbFwiPkZvcndhcmQgPGkgY2xhc3M9XCJieCBieC1zaGFyZS1hbHQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCI+Qm9va21hcmsgPGkgY2xhc3M9XCJieCBieC1ib29rbWFya3MgdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGRlbGV0ZS1pdGVtXCIgaWQ9XCJkZWxldGUtaXRlbS0nICtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWRzICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgaHJlZj1cIiNcIj5EZWxldGUgPGkgY2xhc3M9XCJieCBieC10cmFzaCB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udmVyc2F0aW9uLW5hbWVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz1cInRleHQtbXV0ZWQgdGltZVwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUaW1lKCkgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L3NtYWxsPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtc3VjY2VzcyBjaGVjay1tZXNzYWdlLWljb25cIj48aSBjbGFzcz1cImJ4IGJ4LWNoZWNrXCI+PC9pPjwvc3Bhbj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+J1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgbmV3Q2hhdExpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoYXQtbGlzdC1cIiArIG1lc3NhZ2VJZHMpO1xyXG4gICAgICAgIG5ld0NoYXRMaXN0XHJcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRlbGV0ZS1pdGVtXCIpXHJcbiAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChzdWJpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBzdWJpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbUxpc3QucmVtb3ZlQ2hpbGQobmV3Q2hhdExpc3QpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5kb3dubG9hZC1maWxlXCIpXHJcbiAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChzdWJpdGVtMikge1xyXG4gICAgICAgICAgICAgICAgc3ViaXRlbTIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhdWRpb2ZpbGVkYXRhaWQgPSBzdWJpdGVtMi5nZXRBdHRyaWJ1dGUoXCJkYXRhLWlkXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICF3aW5kb3cuRmlsZSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAhd2luZG93LkZpbGVSZWFkZXIgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIXdpbmRvdy5GaWxlTGlzdCB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAhd2luZG93LkJsb2JcclxuICAgICAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlRoZSBGaWxlIEFQSXMgYXJlIG5vdCBmdWxseSBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJsb2IgPSBuZXcgQmxvYihbZmlsaW5nW2F1ZGlvZmlsZWRhdGFpZF1dLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYXBwbGljYXRpb24vbXAzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5rLmhyZWYgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5rLmRvd25sb2FkID0gYWZpbGluZ1thdWRpb2ZpbGVkYXRhaWRdW1wibmFtZVwiXTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5rLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5maWxlX1VwbG9hZCBcIikuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vQXR0YWNoZWQgZmlsZSBBcHBlbmRcclxuICAgIHZhciBmaWxlbmFtZTI7XHJcbiAgICB2YXIgZmlsZXNpemUyO1xyXG5cclxuICAgIHZhciBmaWxlID0gXCJcIjtcclxuICAgIHZhciBmaWxpbmcgPSBbXTtcclxuICAgIHZhciBmaWxlTnVtYmVyID0gMTtcclxuXHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2F0dGFjaGVkZmlsZS1pbnB1dFwiKVxyXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHByZXZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZpbGVfVXBsb2FkXCIpO1xyXG4gICAgICAgICAgICBmaWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdHRhY2hlZGZpbGUtaW5wdXRcIikuZmlsZXNbMF07XHJcblxyXG4gICAgICAgICAgICBmciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcblxyXG4gICAgICAgICAgICBmci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHByZXZpZXcpIHtcclxuICAgICAgICAgICAgICAgIHByZXZpZXcuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGZyLmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgICAgICAgICBcImxvYWRcIixcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZmlsZW5hbWUgPSBmaWxlLm5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGVTaXplID0gTWF0aC5yb3VuZChmaWxlLnNpemUgLyAxMDAwMDAwKS50b0ZpeGVkKDIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3LmlubmVySFRNTCA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2FyZCBwLTIgYm9yZGVyIGF0dGNoZWRmaWxlX3ByZSBkLWlubGluZS1ibG9jayBwb3NpdGlvbi1yZWxhdGl2ZVwiPlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyXCI+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wIGF2YXRhci14cyBtcy0xIG1lLTNcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdmF0YXItdGl0bGUgYmctc29mdC1wcmltYXJ5IHRleHQtcHJpbWFyeSByb3VuZGVkLWNpcmNsZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicmktYXR0YWNobWVudC0yXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1ncm93LTEgb3ZlcmZsb3ctaGlkZGVuXCI+XFxcclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJcIiBpZD1cImFcIj48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJmcy0xNCB0ZXh0LXRydW5jYXRlIG1iLTFcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9oNT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImRvd25sb2FkZGF0YVwiIHZhbHVlPVwiJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnXCIvPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LW11dGVkIHRleHQtdHJ1bmNhdGUgZnMtMTMgbWItMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlU2l6ZSArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdtYjwvcD5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wIGFsaWduLXNlbGYtc3RhcnQgbXMtM1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBnYXAtMlwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJyaS1jbG9zZS1saW5lIHRleHQtbXV0ZWQgYXR0ZWNoZWRGaWxlLXJlbW92ZVwiICBpZD1cInJlbW92ZS1hdHRlY2hlZEZpbGVcIj48L2k+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgIDwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWUyID0gZmlsZW5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlsZXNpemUyID0gZmlsZVNpemU7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlsaW5nW2ZpbGVOdW1iZXJdID0gZmlsZTtcclxuICAgICAgICAgICAgICAgICAgICByZW1vdmVBdHRhY2hlZEZpbGUoKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmYWxzZVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBmaWxlTnVtYmVyKys7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgdmFyIGdldEF0dGFjaGVkRmlsZXMgPSBmdW5jdGlvbiAoXHJcbiAgICAgICAgY2hhdGlkMixcclxuICAgICAgICBuZXdBdHRjaGVkSXRlbXMsXHJcbiAgICAgICAgbmV3QXR0Y2hlZEl0ZW1TaXplXHJcbiAgICApIHtcclxuICAgICAgICB2YXIgbmV3QXR0Y2hlZEl0ZW1zID0gZmlsZW5hbWUyO1xyXG4gICAgICAgIHZhciBuZXdBdHRjaGVkSXRlbVNpemUgPSBmaWxlc2l6ZTI7XHJcbiAgICAgICAgbWVzc2FnZUlkcysrO1xyXG4gICAgICAgIHZhciBjaGF0Q29uTGlzdDIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjaGF0aWQyKTtcclxuICAgICAgICB2YXIgaXRlbUxpc3QyID0gY2hhdENvbkxpc3QyLnF1ZXJ5U2VsZWN0b3IoXCIuY2hhdC1jb252ZXJzYXRpb24tbGlzdFwiKTtcclxuXHJcbiAgICAgICAgaWYgKG5ld0F0dGNoZWRJdGVtcyAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIGl0ZW1MaXN0Mi5pbnNlcnRBZGphY2VudEhUTUwoXHJcbiAgICAgICAgICAgICAgICBcImJlZm9yZWVuZFwiLFxyXG4gICAgICAgICAgICAgICAgJzxsaSBjbGFzcz1cImNoYXQtbGlzdCByaWdodFwiIGlkPVwiY2hhdC1saXN0LScgK1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZHMgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiA+XFxcclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb252ZXJzYXRpb24tbGlzdFwiPlxcXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItY2hhdC1jb250ZW50XCI+XFxcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXBcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXAtY29udGVudFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtMyBib3JkZXIgcm91bmRlZC0zXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgYXR0YWNoZWQtZmlsZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1zaHJpbmstMCBhdmF0YXItc20gbWUtMyBtcy0wIGF0dGFjaGVkLWZpbGUtYXZhdGFyXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXZhdGFyLXRpdGxlIGJnLXNvZnQtbGlnaHQgcm91bmRlZC1jaXJjbGUgZnMtMjBcIj48aSBjbGFzcz1cInJpLWF0dGFjaG1lbnQtMlwiPjwvaT48L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LWdyb3ctMSBvdmVyZmxvdy1oaWRkZW5cIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXN0YXJ0XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPVwiZnMtMTQgdGV4dC13aGl0ZSBtYi0xXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3QXR0Y2hlZEl0ZW1zICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9oNT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtd2hpdGUtNTAgdGV4dC10cnVuY2F0ZSBmcy0xMyBtYi0wXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3QXR0Y2hlZEl0ZW1TaXplICtcclxuICAgICAgICAgICAgICAgICAgICAnbWI8L3A+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wIG1zLTRcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZ2FwLTIgZnMtMjAgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cInRleHQtd2hpdGUtNTAgZG93bmxvYWQtZmlsZVwiIGRhdGEtaWQ9XCInICtcclxuICAgICAgICAgICAgICAgICAgICBmaWxlTnVtYmVyICtcclxuICAgICAgICAgICAgICAgICAgICAnXCI+IDxpIGNsYXNzPVwiYnggYnhzLWRvd25sb2FkXCI+PC9pPiA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbGlnbi1zZWxmLXN0YXJ0IG1lc3NhZ2UtYm94LWRyb3AgZC1mbGV4XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpLWVtb3Rpb24taGFwcHktbGluZVwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZW1vamktZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhzdGFjayBhbGlnbi1pdGVtcy1jZW50ZXIgZ2FwLTIgcHgtMiBmcy0yNVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfkps8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+kozwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5icPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJg8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YjTwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImF2YXRhci14c1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiIGNsYXNzPVwiYXZhdGFyLXRpdGxlIGJnLXNvZnQtcHJpbWFyeSByb3VuZGVkLWNpcmNsZSBmcy0xOSB0ZXh0LXByaW1hcnlcIj4rPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPiA8aSBjbGFzcz1cInJpLW1vcmUtMi1maWxsXCI+PC9pPiA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld0F0dGNoZWRJdGVtcyArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1wiIGRvd25sb2FkPkRvd25sb2FkIDxpIGNsYXNzPVwiYnggYngtZG93bmxvYWQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJjb2xsYXBzZVwiIGRhdGEtYnMtdGFyZ2V0PVwiLnJlcGx5Q29sbGFwc2VcIj5SZXBseSA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiIGRhdGEtYnMtdG9nZ2xlPVwibW9kYWxcIiBkYXRhLWJzLXRhcmdldD1cIi5mb3J3YXJkTW9kYWxcIj5Gb3J3YXJkIDxpIGNsYXNzPVwiYnggYngtc2hhcmUtYWx0IG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiPkJvb2ttYXJrIDxpIGNsYXNzPVwiYnggYngtYm9va21hcmtzIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBkZWxldGUtaXRlbVwiIGlkPVwiZGVsZXRlLWl0ZW0tJyArXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkcyArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1wiIGhyZWY9XCIjXCI+RGVsZXRlIDxpIGNsYXNzPVwiYnggYngtdHJhc2ggdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udmVyc2F0aW9uLW5hbWVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz1cInRleHQtbXV0ZWQgdGltZVwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUaW1lKCkgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L3NtYWxsPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtc3VjY2VzcyBjaGVjay1tZXNzYWdlLWljb25cIj48aSBjbGFzcz1cImJ4IGJ4LWNoZWNrXCI+PC9pPjwvc3Bhbj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDwvbGk+J1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyByZW1vdmUgRmlsZVxyXG4gICAgICAgIHZhciBuZXdDaGF0TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhdC1saXN0LVwiICsgbWVzc2FnZUlkcyk7XHJcbiAgICAgICAgbmV3Q2hhdExpc3RcclxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGVsZXRlLWl0ZW1cIilcclxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKHN1Yml0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtTGlzdC5yZW1vdmVDaGlsZChuZXdDaGF0TGlzdCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vRG93bmxvYWQgYXR0YWNoZWQgZmlsZVxyXG4gICAgICAgIG5ld0NoYXRMaXN0XHJcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRvd25sb2FkLWZpbGVcIilcclxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKHN1Yml0ZW0xKSB7XHJcbiAgICAgICAgICAgICAgICBzdWJpdGVtMS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YWlkID0gc3ViaXRlbTEuZ2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICF3aW5kb3cuRmlsZSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAhd2luZG93LkZpbGVSZWFkZXIgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIXdpbmRvdy5GaWxlTGlzdCB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAhd2luZG93LkJsb2JcclxuICAgICAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlRoZSBGaWxlIEFQSXMgYXJlIG5vdCBmdWxseSBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJsb2IgPSBuZXcgQmxvYihbZmlsaW5nW2RhdGFpZF1dLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYXBwbGljYXRpb24vcGRmXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7IC8vIGNoYW5nZSByZXN1bHRCeXRlIHRvIGJ5dGVzXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5rLmhyZWYgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5rLmRvd25sb2FkID0gZmlsaW5nW2RhdGFpZF1bXCJuYW1lXCJdO1xyXG4gICAgICAgICAgICAgICAgICAgIGxpbmsuY2xpY2soKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZpbGVfVXBsb2FkIFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGltYWdldXJscyA9IFtdO1xyXG5cclxuICAgIHJlbW92ZWltZyA9IDE7XHJcblxyXG4gICAgdmFyIGluZGV4aW5nID0gMDtcclxuXHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2dhbGxlcnlmaWxlLWlucHV0XCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgcHJldmlld0ltYWdlcyk7XHJcblxyXG4gICAgZnVuY3Rpb24gcHJldmlld0ltYWdlcygpIHtcclxuICAgICAgICB2YXIgcHJldmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZmlsZV9VcGxvYWRcIik7XHJcblxyXG4gICAgICAgIHByZXZpZXcuaW5zZXJ0QWRqYWNlbnRIVE1MKFxyXG4gICAgICAgICAgICBcImJlZm9yZWVuZFwiLFxyXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cInByb2ZpbGUtbWVkaWEtaW1nIGltYWdlX3ByZVwiPjwvZGl2PidcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICB2YXIgaW1hZ2VzZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgIFwiLmZpbGVfVXBsb2FkIC5wcm9maWxlLW1lZGlhLWltZ1wiXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZmlsZXMpIHtcclxuICAgICAgICAgICAgW10uZm9yRWFjaC5jYWxsKHRoaXMuZmlsZXMsIHJlYWRBbmRQcmV2aWV3KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHJlYWRBbmRQcmV2aWV3KGZpbGUpIHtcclxuICAgICAgICAgICAgLy8gTWFrZSBzdXJlIGBmaWxlLm5hbWVgIG1hdGNoZXMgb3VyIGV4dGVuc2lvbnMgY3JpdGVyaWFcclxuICAgICAgICAgICAgaWYgKCEvXFwuKGpwZT9nfHBuZ3xnaWYpJC9pLnRlc3QoZmlsZS5uYW1lKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFsZXJ0KGZpbGUubmFtZSArIFwiIGlzIG5vdCBhbiBpbWFnZVwiKTtcclxuICAgICAgICAgICAgfSAvLyBlbHNlLi4uXHJcblxyXG4gICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjcmVhdGVJbWFnZSA9IFwiXCI7XHJcblxyXG4gICAgICAgICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmVtb3ZlaW1nKys7XHJcbiAgICAgICAgICAgICAgICBpZiAocHJldmlldykge1xyXG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXcuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaW1hZ2V1cmxzLnB1c2gocmVhZGVyLnJlc3VsdCk7XHJcblxyXG4gICAgICAgICAgICAgICAgY3JlYXRlSW1hZ2UgKz1cclxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cIm1lZGlhLWltZy1saXN0XCIgaWQ9XCJyZW1vdmUtaW1hZ2UtJyArXHJcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlaW1nICtcclxuICAgICAgICAgICAgICAgICAgICAnXCI+XFxcclxuICAgICAgICAgIDxhIGhyZWY9XCIjXCI+XFxcclxuICAgICAgICAgICAgICA8aW1nIHNyYz1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0ICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgYWx0PVwiJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZmlsZS5uYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgY2xhc3M9XCJpbWctZmx1aWRcIj5cXFxyXG4gICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgIDxpIGNsYXNzPVwicmktY2xvc2UtbGluZSBpbWFnZS1yZW1vdmVcIiBvbmNsaWNrPVwicmVtb3ZlSW1hZ2UoYHJlbW92ZS1pbWFnZS0nICtcclxuICAgICAgICAgICAgICAgICAgICByZW1vdmVpbWcgK1xyXG4gICAgICAgICAgICAgICAgICAgICdgKVwiPjwvaT5cXFxyXG4gICAgICAgICAgPC9kaXY+JztcclxuXHJcbiAgICAgICAgICAgICAgICBpbWFnZXNlbGVjdG9yLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyYmVnaW5cIiwgY3JlYXRlSW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgaW5kZXhpbmcrKztcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL2FwcGVuZCBpbWFnZXNcclxuICAgIHZhciBnZXRJbWFnZXMgPSBmdW5jdGlvbiAoY2hhdGlkMSwgbmV3SW1hZ2UpIHtcclxuICAgICAgICB2YXIgbmV3SW1hZ2VzID0gaW1hZ2V1cmxzO1xyXG5cclxuICAgICAgICB2YXIgY2hhdENvbkxpc3QxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY2hhdGlkMSk7XHJcblxyXG4gICAgICAgIHZhciBpdGVtTGlzdDEgPSBjaGF0Q29uTGlzdDEucXVlcnlTZWxlY3RvcihcIi5jaGF0LWNvbnZlcnNhdGlvbi1saXN0XCIpO1xyXG5cclxuICAgICAgICB2YXIgbXVsdGlpbWcgPSBcIlwiO1xyXG5cclxuICAgICAgICBuZXdJbWFnZXMuZm9yRWFjaChmdW5jdGlvbiAobmV3SW1hZ2UpIHtcclxuICAgICAgICAgICAgbWVzc2FnZUlkcysrO1xyXG4gICAgICAgICAgICBtdWx0aWltZyArPVxyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJtZXNzYWdlLWltZy1saXN0XCI+XFxcclxuICAgICAgICAgIDxkaXY+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJwb3B1cC1pbWcgZC1pbmxpbmUtYmxvY2tcIiBocmVmPVwiJyArXHJcbiAgICAgICAgICAgICAgICBuZXdJbWFnZSArXHJcbiAgICAgICAgICAgICAgICAnXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XFxcclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJyArXHJcbiAgICAgICAgICAgICAgICBuZXdJbWFnZSArXHJcbiAgICAgICAgICAgICAgICAnXCIgYWx0PVwiXCIgY2xhc3M9XCJyb3VuZGVkIGJvcmRlciBpbWctdGh1bWJuYWlsXCIgd2lkdGg9XCIyMDBcIiAvPlxcXHJcbiAgICAgICAgICAgIDwvYT5cXFxyXG4gICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWltZy1saW5rXCI+XFxcclxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1pbmxpbmUgbWItMFwiPlxcXHJcbiAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibGlzdC1pbmxpbmUtaXRlbSBkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJieCBieC1kb3RzLWhvcml6b250YWwtcm91bmRlZFwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIicgK1xyXG4gICAgICAgICAgICAgICAgbmV3SW1hZ2UgK1xyXG4gICAgICAgICAgICAgICAgJ1wiIGRvd25sb2FkPkRvd25sb2FkIDxpIGNsYXNzPVwiYnggYngtZG93bmxvYWQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJjb2xsYXBzZVwiIGRhdGEtYnMtdGFyZ2V0PVwiLnJlcGx5Q29sbGFwc2VcIj5SZXBseSA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiIGRhdGEtYnMtdG9nZ2xlPVwibW9kYWxcIiBkYXRhLWJzLXRhcmdldD1cIi5mb3J3YXJkTW9kYWxcIj5Gb3J3YXJkIDxpIGNsYXNzPVwiYnggYngtc2hhcmUtYWx0IG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiPkJvb2ttYXJrIDxpIGNsYXNzPVwiYnggYngtYm9va21hcmtzIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gZGVsZXRlLWltYWdlXCIgaWQ9XCJkZWxldGUtaXRlbS0nICtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VJZHMgK1xyXG4gICAgICAgICAgICAgICAgJ1wiIGhyZWY9XCIjXCI+RGVsZXRlIDxpIGNsYXNzPVwiYnggYngtdHJhc2ggdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICA8L2xpPlxcXHJcbiAgICAgIDwvdWw+XFxcclxuICAgIDwvZGl2PlxcXHJcbiAgICA8L2Rpdj4nO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBpZiAobmV3SW1hZ2VzICE9IG51bGwpIHtcclxuICAgICAgICAgICAgaXRlbUxpc3QxLmluc2VydEFkamFjZW50SFRNTChcclxuICAgICAgICAgICAgICAgIFwiYmVmb3JlZW5kXCIsXHJcbiAgICAgICAgICAgICAgICAnPGxpIGNsYXNzPVwiY2hhdC1saXN0IHJpZ2h0XCIgaWQ9XCJjaGF0LWxpc3QtJyArXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkcyArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1wiID5cXFxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb252ZXJzYXRpb24tbGlzdFwiPlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWNoYXQtY29udGVudFwiPlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3RleHQtd3JhcFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWltZyBtYi0wXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgbXVsdGlpbWcgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnZlcnNhdGlvbi1uYW1lXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9XCJ0ZXh0LW11dGVkIHRpbWVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VGltZSgpICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9zbWFsbD5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1zdWNjZXNzIGNoZWNrLW1lc3NhZ2UtaWNvblwiPjxpIGNsYXNzPVwiYnggYngtY2hlY2tcIj48L2k+PC9zcGFuPlxcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICA8L2xpPidcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgdXBkYXRlTGlnaHRib3goKTtcclxuICAgICAgICAgICAgaW5kZXhpbmcgPSAwO1xyXG5cclxuICAgICAgICAgICAgLy9EZWxldGUgYXBwZW5kZWQgaW1hZ2VzKHNpbmdsZSB1c2VyKVxyXG4gICAgICAgICAgICB2YXIgZGVsZXRlSW1hZ2VzID0gaXRlbUxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5jaGF0LWxpc3RcIik7XHJcbiAgICAgICAgICAgIGRlbGV0ZUltYWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGVsZXRlLWltYWdlXCIpLmZvckVhY2goZnVuY3Rpb24gKFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Yml0ZW1cclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViaXRlbS5jbG9zZXN0KFwiLm1lc3NhZ2UtaW1nXCIpLmNoaWxkRWxlbWVudENvdW50ID09IDFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc3ViaXRlbS5jbG9zZXN0KFwiLmNoYXQtbGlzdFwiKS5yZW1vdmUoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBzdWJpdGVtLmNsb3Nlc3QoXCIubWVzc2FnZS1pbWctbGlzdFwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vRGVsZXRlIGFwcGVuZGVkIGltYWdlcyhDaGFubmVsIGNoYXQpXHJcbiAgICAgICAgICAgIHZhciBkZWxldGVDaGFubmVsSW1hZ2VzID1cclxuICAgICAgICAgICAgICAgIGNoYW5uZWxJdGVtTGlzdC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNoYXQtbGlzdFwiKTtcclxuICAgICAgICAgICAgZGVsZXRlQ2hhbm5lbEltYWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGVsZXRlLWltYWdlXCIpLmZvckVhY2goZnVuY3Rpb24gKFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Yml0ZW1cclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViaXRlbS5jbG9zZXN0KFwiLm1lc3NhZ2UtaW1nXCIpLmNoaWxkRWxlbWVudENvdW50ID09IDFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc3ViaXRlbS5jbG9zZXN0KFwiLmNoYXQtbGlzdFwiKS5yZW1vdmUoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBzdWJpdGVtLmNsb3Nlc3QoXCIubWVzc2FnZS1pbWctbGlzdFwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZmlsZV9VcGxvYWRcIikuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XHJcbiAgICAgICAgaW1hZ2V1cmxzID0gW107XHJcbiAgICB9O1xyXG5cclxuICAgIC8vQXBwZW5kIE5ldyBNZXNzYWdlXHJcbiAgICB2YXIgZ2V0Q2hhdExpc3QgPSBmdW5jdGlvbiAoY2hhdGlkLCBjaGF0SXRlbXMpIHtcclxuICAgICAgICBtZXNzYWdlSWRzKys7XHJcblxyXG4gICAgICAgIHZhciBjaGF0Q29uTGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNoYXRpZCk7XHJcbiAgICAgICAgdmFyIGl0ZW1MaXN0ID0gY2hhdENvbkxpc3QucXVlcnlTZWxlY3RvcihcIi5jaGF0LWNvbnZlcnNhdGlvbi1saXN0XCIpO1xyXG4gICAgICAgIGlmIChjaGF0SXRlbXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBpdGVtTGlzdC5pbnNlcnRBZGphY2VudEhUTUwoXHJcbiAgICAgICAgICAgICAgICBcImJlZm9yZWVuZFwiLFxyXG4gICAgICAgICAgICAgICAgJzxsaSBjbGFzcz1cImNoYXQtbGlzdCByaWdodFwiIGlkPVwiY2hhdC1saXN0LScgK1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZHMgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiA+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb252ZXJzYXRpb24tbGlzdFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItY2hhdC1jb250ZW50XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXBcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXAtY29udGVudFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJtYi0wIGN0ZXh0LWNvbnRlbnRcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICBjaGF0SXRlbXMgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L3A+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWxpZ24tc2VsZi1zdGFydCBtZXNzYWdlLWJveC1kcm9wIGQtZmxleFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd25cIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJyaS1lbW90aW9uLWhhcHB5LWxpbmVcIj48L2k+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51IGVtb2ppLWRyb3Bkb3duLW1lbnVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoc3RhY2sgYWxpZ24taXRlbXMtY2VudGVyIGdhcC0yIHB4LTIgZnMtMjVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5KbPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfpKM8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YnDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5iYPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmI08L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdmF0YXIteHNcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIiBjbGFzcz1cImF2YXRhci10aXRsZSBiZy1zb2Z0LXByaW1hcnkgcm91bmRlZC1jaXJjbGUgZnMtMTkgdGV4dC1wcmltYXJ5XCI+KzwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpLW1vcmUtMi1maWxsXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiByZXBseS1tZXNzYWdlXCIgaHJlZj1cIiNcIiBkYXRhLWJzLXRvZ2dsZT1cImNvbGxhcHNlXCIgZGF0YS1icy10YXJnZXQ9XCIucmVwbHlDb2xsYXBzZVwiPlJlcGx5IDxpIGNsYXNzPVwiYnggYngtc2hhcmUgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIiBkYXRhLWJzLXRvZ2dsZT1cIm1vZGFsXCIgZGF0YS1icy10YXJnZXQ9XCIuZm9yd2FyZE1vZGFsXCI+Rm9yd2FyZCA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlLWFsdCBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gY29weS1tZXNzYWdlXCIgaHJlZj1cIiNcIiBpZD1cImNvcHktbWVzc2FnZS0nICtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWRzICtcclxuICAgICAgICAgICAgICAgICAgICAnXCI+Q29weSA8aSBjbGFzcz1cImJ4IGJ4LWNvcHkgdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIj5Cb29rbWFyayA8aSBjbGFzcz1cImJ4IGJ4LWJvb2ttYXJrcyB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiPk1hcmsgYXMgVW5yZWFkIDxpIGNsYXNzPVwiYnggYngtbWVzc2FnZS1lcnJvciB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gZGVsZXRlLWl0ZW1cIiBpZD1cImRlbGV0ZS1pdGVtLScgK1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZHMgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiBocmVmPVwiI1wiPkRlbGV0ZSA8aSBjbGFzcz1cImJ4IGJ4LXRyYXNoIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udmVyc2F0aW9uLW5hbWVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9XCJ0ZXh0LW11dGVkIHRpbWVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VGltZSgpICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9zbWFsbD5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtc3VjY2VzcyBjaGVjay1tZXNzYWdlLWljb25cIj48aSBjbGFzcz1cImJ4IGJ4LWNoZWNrXCI+PC9pPjwvc3Bhbj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgIDwvbGk+J1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gcmVtb3ZlIGNoYXQgbGlzdFxyXG4gICAgICAgIHZhciBuZXdDaGF0TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhdC1saXN0LVwiICsgbWVzc2FnZUlkcyk7XHJcbiAgICAgICAgbmV3Q2hhdExpc3RcclxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGVsZXRlLWl0ZW1cIilcclxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKHN1Yml0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtTGlzdC5yZW1vdmVDaGlsZChuZXdDaGF0TGlzdCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vQ29weSBDbGlwYm9hcmQgYWxlcnRcclxuICAgICAgICBuZXdDaGF0TGlzdFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5jb3B5LW1lc3NhZ2VcIilcclxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKHN1Yml0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvcHlDbGlwQm9hcmRcIikuc3R5bGUuZGlzcGxheSA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYmxvY2tcIjtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjb3B5Q2xpcEJvYXJkQ2hhbm5lbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoaGlkZWNsaXBib2FyZE5ldywgMTAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gaGlkZWNsaXBib2FyZE5ldygpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3B5Q2xpcEJvYXJkXCIpLnN0eWxlLmRpc3BsYXkgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJub25lXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb3B5Q2xpcEJvYXJkQ2hhbm5lbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy9yZXBseSBNZXNzYWdlIG1vZGVsXHJcbiAgICAgICAgbmV3Q2hhdExpc3RcclxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucmVwbHktbWVzc2FnZVwiKVxyXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoc3ViaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgc3ViaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXBseVRvZ2dsZU9wZW5OZXcgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlcGx5Q2FyZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVwbHlUb2dnbGVDbG9zZU5ldyA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2xvc2VfdG9nZ2xlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXBseU1lc3NhZ2VOZXcgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJpdGVtLmNsb3Nlc3QoXCIuY3RleHQtd3JhcFwiKS5jaGlsZHJlblswXS5jaGlsZHJlblswXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmlubmVyVGV4dDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVwbHlVc2VyTmV3ID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyLXByb2ZpbGUtc2hvd1wiKS5pbm5lckhUTUw7XHJcbiAgICAgICAgICAgICAgICAgICAgaXNyZXBseU1lc3NhZ2UgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcGx5VG9nZ2xlT3Blbk5ldy5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcclxuICAgICAgICAgICAgICAgICAgICByZXBseVRvZ2dsZUNsb3NlTmV3LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcGx5VG9nZ2xlT3Blbk5ldy5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCIucmVwbHlDYXJkIC5yZXBseW1lc3NhZ2UtYmxvY2sgLmZsZXgtZ3Jvdy0xIC5tYi0wXCJcclxuICAgICAgICAgICAgICAgICAgICApLmlubmVyVGV4dCA9IHJlcGx5TWVzc2FnZU5ldztcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi5yZXBseUNhcmQgLnJlcGx5bWVzc2FnZS1ibG9jayAuZmxleC1ncm93LTEgLmNvbnZlcnNhdGlvbi1uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICApLmlubmVyVGV4dCA9IHJlcGx5VXNlck5ldztcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy9Db3B5IE1lc3NhZ2VcclxuICAgICAgICBuZXdDaGF0TGlzdFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5jb3B5LW1lc3NhZ2VcIilcclxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKHN1Yml0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFZhbHVlID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2hhdExpc3QuY2hpbGROb2Rlc1sxXS5maXJzdEVsZW1lbnRDaGlsZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpcnN0RWxlbWVudENoaWxkLmZpcnN0RWxlbWVudENoaWxkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZmlyc3RFbGVtZW50Q2hpbGQuaW5uZXJUZXh0O1xyXG4gICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBtZXNzYWdlYm94Y29sbGFwc2UgPSAxO1xyXG5cclxuICAgIC8vbWVzc2FnZSB3aXRoIHJlcGx5XHJcbiAgICB2YXIgZ2V0UmVwbHlDaGF0TGlzdCA9IGZ1bmN0aW9uIChjaGF0UmVwbHlJZCwgY2hhdFJlcGx5SXRlbXMpIHtcclxuICAgICAgICB2YXIgY2hhdFJlcGx5VXNlciA9XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXNlci1wcm9maWxlLXNob3dcIikuaW5uZXJIVE1MO1xyXG4gICAgICAgIHZhciBjaGF0UmVwbHlNZXNzYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgXCIucmVwbHlDYXJkIC5yZXBseW1lc3NhZ2UtYmxvY2sgLmZsZXgtZ3Jvdy0xIC5tYi0wXCJcclxuICAgICAgICApLmlubmVyVGV4dDtcclxuICAgICAgICBtZXNzYWdlSWRzKys7XHJcbiAgICAgICAgdmFyIGNoYXRyZXBseUNvbkxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjaGF0UmVwbHlJZCk7XHJcbiAgICAgICAgdmFyIGl0ZW1SZXBseUxpc3QgPSBjaGF0cmVwbHlDb25MaXN0LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgIFwiLmNoYXQtY29udmVyc2F0aW9uLWxpc3RcIlxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGNoYXRSZXBseUl0ZW1zICE9IG51bGwpIHtcclxuICAgICAgICAgICAgaXRlbVJlcGx5TGlzdC5pbnNlcnRBZGphY2VudEhUTUwoXHJcbiAgICAgICAgICAgICAgICBcImJlZm9yZWVuZFwiLFxyXG4gICAgICAgICAgICAgICAgJzxsaSBjbGFzcz1cImNoYXQtbGlzdCByaWdodFwiIGlkPVwiY2hhdC1saXN0LScgK1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZHMgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiA+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb252ZXJzYXRpb24tbGlzdFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItY2hhdC1jb250ZW50XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXBcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXAtY29udGVudFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVwbHltZXNzYWdlLWJsb2NrIG1iLTAgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtZ3Jvdy0xXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz1cImNvbnZlcnNhdGlvbi1uYW1lXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdFJlcGx5VXNlciArXHJcbiAgICAgICAgICAgICAgICAgICAgJzwvaDU+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibWItMFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRSZXBseU1lc3NhZ2UgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L3A+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtc2hyaW5rLTBcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLXNtIGJ0bi1saW5rIG10LW4yIG1lLW4zIGZzLTE4XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cIm1iLTAgY3RleHQtY29udGVudCBtdC0xXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdFJlcGx5SXRlbXMgK1xyXG4gICAgICAgICAgICAgICAgICAgICdcXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbGlnbi1zZWxmLXN0YXJ0IG1lc3NhZ2UtYm94LWRyb3AgZC1mbGV4XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpLWVtb3Rpb24taGFwcHktbGluZVwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZW1vamktZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhzdGFjayBhbGlnbi1pdGVtcy1jZW50ZXIgZ2FwLTIgcHgtMiBmcy0yNVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfkps8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+kozwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5icPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJg8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YjTwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImF2YXRhci14c1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCIgY2xhc3M9XCJhdmF0YXItdGl0bGUgYmctc29mdC1wcmltYXJ5IHJvdW5kZWQtY2lyY2xlIGZzLTE5IHRleHQtcHJpbWFyeVwiPis8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJyaS1tb3JlLTItZmlsbFwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gcmVwbHktbWVzc2FnZVwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJjb2xsYXBzZVwiIGRhdGEtYnMtdGFyZ2V0PVwiLnJlcGx5Q29sbGFwc2VcIj5SZXBseSA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJtb2RhbFwiIGRhdGEtYnMtdGFyZ2V0PVwiLmZvcndhcmRNb2RhbFwiPkZvcndhcmQgPGkgY2xhc3M9XCJieCBieC1zaGFyZS1hbHQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGNvcHktbWVzc2FnZVwiIGhyZWY9XCIjXCIgaWQ9XCJjb3B5LW1lc3NhZ2UtJyArXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkcyArXHJcbiAgICAgICAgICAgICAgICAgICAgJ1wiPkNvcHkgPGkgY2xhc3M9XCJieCBieC1jb3B5IHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCI+Qm9va21hcmsgPGkgY2xhc3M9XCJieCBieC1ib29rbWFya3MgdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIj5NYXJrIGFzIFVucmVhZCA8aSBjbGFzcz1cImJ4IGJ4LW1lc3NhZ2UtZXJyb3IgdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGRlbGV0ZS1pdGVtXCIgaWQ9XCJkZWxldGUtaXRlbS0nICtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWRzICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgaHJlZj1cIiNcIj5EZWxldGUgPGkgY2xhc3M9XCJieCBieC10cmFzaCB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnZlcnNhdGlvbi1uYW1lXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPVwidGV4dC1tdXRlZCB0aW1lXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFRpbWUoKSArXHJcbiAgICAgICAgICAgICAgICAgICAgJzwvc21hbGw+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXN1Y2Nlc3MgY2hlY2stbWVzc2FnZS1pY29uXCI+PGkgY2xhc3M9XCJieCBieC1jaGVja1wiPjwvaT48L3NwYW4+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICA8L2xpPidcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgbWVzc2FnZWJveGNvbGxhcHNlKys7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyByZW1vdmUgY2hhdCBsaXN0XHJcbiAgICAgICAgdmFyIG5ld0NoYXRMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGF0LWxpc3QtXCIgKyBtZXNzYWdlSWRzKTtcclxuICAgICAgICBuZXdDaGF0TGlzdFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5kZWxldGUtaXRlbVwiKVxyXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoc3ViaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgc3ViaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1MaXN0LnJlbW92ZUNoaWxkKG5ld0NoYXRMaXN0KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy9Db3B5IENsaXBib2FyZCBhbGVydFxyXG4gICAgICAgIG5ld0NoYXRMaXN0XHJcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNvcHktbWVzc2FnZVwiKVxyXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoc3ViaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgc3ViaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29weUNsaXBCb2FyZFwiKS5zdHlsZS5kaXNwbGF5ID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJibG9ja1wiO1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNvcHlDbGlwQm9hcmRDaGFubmVsXCJcclxuICAgICAgICAgICAgICAgICAgICApLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChoaWRlY2xpcGJvYXJkTmV3LCAxMDAwKTtcclxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBoaWRlY2xpcGJvYXJkTmV3KCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvcHlDbGlwQm9hcmRcIikuc3R5bGUuZGlzcGxheSA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm5vbmVcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNvcHlDbGlwQm9hcmRDaGFubmVsXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICBuZXdDaGF0TGlzdFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5yZXBseS1tZXNzYWdlXCIpXHJcbiAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChzdWJpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBzdWJpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlcGx5TWVzc2FnZSA9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Yml0ZW0uY2xvc2VzdChcIi5jdGV4dC13cmFwXCIpLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuaW5uZXJUZXh0O1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXBseXVzZXIgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzZXItcHJvZmlsZS1zaG93XCIpLmlubmVySFRNTDtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi5yZXBseUNhcmQgLnJlcGx5bWVzc2FnZS1ibG9jayAuZmxleC1ncm93LTEgLm1iLTBcIlxyXG4gICAgICAgICAgICAgICAgICAgICkuaW5uZXJUZXh0ID0gcmVwbHlNZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtc2dXd25lck5hbWUgPSBzdWJpdGVtLmNsb3Nlc3QoXCIuY2hhdC1saXN0XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gc3ViaXRlbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY2xvc2VzdChcIi5jaGF0LWxpc3RcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImxlZnRcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gcmVwbHl1c2VyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiWW91XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgOiByZXBseXVzZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCIucmVwbHlDYXJkIC5yZXBseW1lc3NhZ2UtYmxvY2sgLmZsZXgtZ3Jvdy0xIC5jb252ZXJzYXRpb24tbmFtZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5pbm5lclRleHQgPSBtc2dXd25lck5hbWU7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vQ29weSBNZXNzYWdlXHJcbiAgICAgICAgbmV3Q2hhdExpc3RcclxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29weS1tZXNzYWdlXCIpXHJcbiAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChzdWJpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBzdWJpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3Q2hhdExpc3QuY2hpbGROb2Rlc1sxXS5jaGlsZHJlblsxXS5maXJzdEVsZW1lbnRDaGlsZC5maXJzdEVsZW1lbnRDaGlsZC5nZXRBdHRyaWJ1dGUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIlxyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXNUZXh0ID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2hhdExpc3QuY2hpbGROb2Rlc1sxXS5jaGlsZHJlblsxXS5maXJzdEVsZW1lbnRDaGlsZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpcnN0RWxlbWVudENoaWxkLmlubmVyVGV4dDtcclxuICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChpc1RleHQpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoY2hhdEZvcm0pIHtcclxuICAgICAgICAvL2FkZCBhbiBpdGVtIHRvIHRoZSBMaXN0LCBpbmNsdWRpbmcgdG8gbG9jYWwgc3RvcmFnZVxyXG4gICAgICAgIGNoYXRGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB2YXIgY2hhdElkID0gY3VycmVudENoYXRJZDtcclxuICAgICAgICAgICAgdmFyIGNoYXRJZDEgPSBjdXJyZW50Q2hhdElkO1xyXG4gICAgICAgICAgICB2YXIgY2hhdElkMiA9IGN1cnJlbnRDaGF0SWQ7XHJcbiAgICAgICAgICAgIHZhciBjaGF0SWQzID0gY3VycmVudENoYXRJZDtcclxuICAgICAgICAgICAgdmFyIGNoYXRSZXBseUlkID0gY3VycmVudENoYXRJZDtcclxuXHJcbiAgICAgICAgICAgIHZhciBjaGF0SW5wdXRWYWx1ZSA9IGNoYXRJbnB1dC52YWx1ZTtcclxuICAgICAgICAgICAgdmFyIGltYWdlcHJldmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2VfcHJlXCIpO1xyXG4gICAgICAgICAgICB2YXIgYXR0YWNoZWRGaWxlUHJldmlldyA9XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF0dGNoZWRmaWxlX3ByZVwiKTtcclxuICAgICAgICAgICAgdmFyIGF1ZGlvRmlsZVByZXZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF1ZGlvZmlsZV9wcmVcIik7XHJcbiAgICAgICAgICAgIHZhciBjaGF0SW5wdXRmZWVkYmFjayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICBcIi5jaGF0LWlucHV0LWZlZWRiYWNrXCJcclxuICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChjaGF0SW5wdXRWYWx1ZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIGNoYXRJbnB1dGZlZWRiYWNrLmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdElucHV0ZmVlZGJhY2suY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XHJcbiAgICAgICAgICAgICAgICB9LCAyMDAwKTtcclxuICAgICAgICAgICAgICAgIGlmIChpbWFnZXByZXZpZXcgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRJbnB1dGZlZWRiYWNrLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGdldEltYWdlcyhjaGF0SWQxLCBjaGF0SW5wdXRWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGF0dGFjaGVkRmlsZVByZXZpZXcgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRJbnB1dGZlZWRiYWNrLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGdldEF0dGFjaGVkRmlsZXMoY2hhdElkMiwgY2hhdElucHV0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhdWRpb0ZpbGVQcmV2aWV3ICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjaGF0SW5wdXRmZWVkYmFjay5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgICAgICAgICAgICAgICAgICBnZXRBdWRpb0ZpbGVzKGNoYXRJZDMsIGNoYXRJbnB1dFZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc3JlcGx5TWVzc2FnZSA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2V0UmVwbHlDaGF0TGlzdChjaGF0UmVwbHlJZCwgY2hhdElucHV0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlzcmVwbHlNZXNzYWdlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGdldENoYXRMaXN0KGNoYXRJZCwgY2hhdElucHV0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBzY3JvbGxUb0JvdHRvbShcclxuICAgICAgICAgICAgICAgIGNoYXRJZCB8fCBjaGF0SWQxIHx8IGNoYXRJZDIgfHwgY2hhdElkMyB8fCBjaGF0UmVwbHlJZFxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgY2hhdElucHV0LnZhbHVlID0gXCJcIjtcclxuXHJcbiAgICAgICAgICAgIC8vSW1hZ2VzIGlucHV0IHRleHQgYXJlYSBudWxsXHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2VfcHJlXCIpXHJcbiAgICAgICAgICAgICAgICA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2VfcHJlXCIpLnJlbW92ZSgpXHJcbiAgICAgICAgICAgICAgICA6IFwiXCI7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2FsbGVyeWZpbGUtaW5wdXRcIikudmFsdWUgPSBcIlwiO1xyXG5cclxuICAgICAgICAgICAgLy9hdHRhY2hlZCBpbnB1dCB0ZXh0IGFyZWEgbnVsbFxyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF0dGNoZWRmaWxlX3ByZVwiKVxyXG4gICAgICAgICAgICAgICAgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF0dGNoZWRmaWxlX3ByZVwiKS5yZW1vdmUoKVxyXG4gICAgICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF0dGFjaGVkZmlsZS1pbnB1dFwiKS52YWx1ZSA9IFwiXCI7XHJcblxyXG4gICAgICAgICAgICAvL2F1ZGlvIGlucHV0IHRleHQgYXJlYSBudWxsXHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXVkaW9maWxlX3ByZVwiKVxyXG4gICAgICAgICAgICAgICAgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF1ZGlvZmlsZV9wcmVcIikucmVtb3ZlKClcclxuICAgICAgICAgICAgICAgIDogXCJcIjtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhdWRpb2ZpbGUtaW5wdXRcIikudmFsdWUgPSBcIlwiO1xyXG5cclxuICAgICAgICAgICAgLy9yZXBseSBtc2cgcmVtb3ZlIHRleHRhcmVhXHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2xvc2VfdG9nZ2xlXCIpLmNsaWNrKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gcmVtb3ZlIGNoYXQgbGlzdFxyXG4gICAgZnVuY3Rpb24gZGVsZXRlTWVzc2FnZSgpIHtcclxuICAgICAgICB2YXIgZGVsZXRlSXRlbXMgPSBpdGVtTGlzdC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRlbGV0ZS1pdGVtXCIpO1xyXG4gICAgICAgIGRlbGV0ZUl0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaXRlbS5jbG9zZXN0KFwiLnVzZXItY2hhdC1jb250ZW50XCIpLmNoaWxkRWxlbWVudENvdW50ID09IDJcclxuICAgICAgICAgICAgICAgICAgICA/IGl0ZW0uY2xvc2VzdChcIi5jaGF0LWxpc3RcIikucmVtb3ZlKClcclxuICAgICAgICAgICAgICAgICAgICA6IGl0ZW0uY2xvc2VzdChcIi5jdGV4dC13cmFwXCIpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL3JlbW92ZSBjaGF0IGltYWdlc1xyXG4gICAgZnVuY3Rpb24gZGVsZXRlSW1hZ2UoKSB7XHJcbiAgICAgICAgdmFyIGRlbGV0ZUltYWdlID0gaXRlbUxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5jaGF0LWxpc3RcIik7XHJcbiAgICAgICAgZGVsZXRlSW1hZ2UuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGVsZXRlLWltYWdlXCIpLmZvckVhY2goZnVuY3Rpb24gKHN1Yml0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHN1Yml0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdWJpdGVtLmNsb3Nlc3QoXCIubWVzc2FnZS1pbWdcIikuY2hpbGRFbGVtZW50Q291bnQgPT0gMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHN1Yml0ZW0uY2xvc2VzdChcIi5jaGF0LWxpc3RcIikucmVtb3ZlKClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBzdWJpdGVtLmNsb3Nlc3QoXCIubWVzc2FnZS1pbWctbGlzdFwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL0RlbGV0ZSBDaGFubmVsIE1lc3NhZ2VcclxuICAgIHZhciBjaGFubmVsSXRlbUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NoYW5uZWwtY29udmVyc2F0aW9uXCIpO1xyXG4gICAgZnVuY3Rpb24gZGVsZXRlQ2hhbm5lbE1lc3NhZ2UoKSB7XHJcbiAgICAgICAgdmFyIGNoYW5uZWxDaGF0TGlzdCA9IGNoYW5uZWxJdGVtTGlzdC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRlbGV0ZS1pdGVtXCIpO1xyXG4gICAgICAgIGNoYW5uZWxDaGF0TGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0uY2xvc2VzdChcIi51c2VyLWNoYXQtY29udGVudFwiKS5jaGlsZEVsZW1lbnRDb3VudCA9PSAyXHJcbiAgICAgICAgICAgICAgICAgICAgPyBpdGVtLmNsb3Nlc3QoXCIuY2hhdC1saXN0XCIpLnJlbW92ZSgpXHJcbiAgICAgICAgICAgICAgICAgICAgOiBpdGVtLmNsb3Nlc3QoXCIuY3RleHQtd3JhcFwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9Db3B5IENsaXBCb2FyZCBBbGVydFxyXG4gICAgZnVuY3Rpb24gY29weUNsaXBib2FyZCgpIHtcclxuICAgICAgICB2YXIgY29weUNsaXBib2FyZEFsZXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jb3B5LW1lc3NhZ2VcIik7XHJcbiAgICAgICAgY29weUNsaXBib2FyZEFsZXJ0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3B5Q2xpcEJvYXJkXCIpLnN0eWxlLmRpc3BsYXkgPVxyXG4gICAgICAgICAgICAgICAgICAgIFwiYmxvY2tcIjtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29weUNsaXBCb2FyZENoYW5uZWxcIikuc3R5bGUuZGlzcGxheSA9XHJcbiAgICAgICAgICAgICAgICAgICAgXCJibG9ja1wiO1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChoaWRlY2xpcGJvYXJkLCAxMDAwKTtcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGhpZGVjbGlwYm9hcmQoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3B5Q2xpcEJvYXJkXCIpLnN0eWxlLmRpc3BsYXkgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5vbmVcIjtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjb3B5Q2xpcEJvYXJkQ2hhbm5lbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vQ29weSBNZXNzYWdlc1xyXG4gICAgZnVuY3Rpb24gY29weU1lc3NhZ2UoKSB7XHJcbiAgICAgICAgdmFyIGNvcHlNZXNzYWdlID0gaXRlbUxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5jb3B5LW1lc3NhZ2VcIik7XHJcbiAgICAgICAgY29weU1lc3NhZ2UuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXNUZXh0ID0gaXRlbS5jbG9zZXN0KFwiLmN0ZXh0LXdyYXBcIikuY2hpbGRyZW5bMF1cclxuICAgICAgICAgICAgICAgICAgICA/IGl0ZW0uY2xvc2VzdChcIi5jdGV4dC13cmFwXCIpLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLmlubmVyVGV4dFxyXG4gICAgICAgICAgICAgICAgICAgIDogXCJcIjtcclxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGlzVGV4dCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNvcHlDaGFubmVsTWVzc2FnZSgpIHtcclxuICAgICAgICB2YXIgY29weUNoYW5uZWxNZXNzYWdlID1cclxuICAgICAgICAgICAgY2hhbm5lbEl0ZW1MaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29weS1tZXNzYWdlXCIpO1xyXG4gICAgICAgIGNvcHlDaGFubmVsTWVzc2FnZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpc1RleHQgPSBpdGVtLmNsb3Nlc3QoXCIuY3RleHQtd3JhcFwiKS5jaGlsZHJlblswXVxyXG4gICAgICAgICAgICAgICAgICAgID8gaXRlbS5jbG9zZXN0KFwiLmN0ZXh0LXdyYXBcIikuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAuaW5uZXJUZXh0XHJcbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoaXNUZXh0KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9yZXBseSBtZXNzYWdlXHJcbiAgICBmdW5jdGlvbiByZXBseU1lc3NhZ2UoKSB7XHJcbiAgICAgICAgdmFyIHJlcGx5TWVzc2FnZSA9IGl0ZW1MaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucmVwbHktbWVzc2FnZVwiKTtcclxuICAgICAgICB2YXIgcmVwbHlUb2dnbGVPcGVuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXBseUNhcmRcIik7XHJcbiAgICAgICAgdmFyIHJlcGx5VG9nZ2xlQ2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Nsb3NlX3RvZ2dsZVwiKTtcclxuXHJcbiAgICAgICAgcmVwbHlNZXNzYWdlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaXNyZXBseU1lc3NhZ2UgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgcmVwbHlUb2dnbGVPcGVuLmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgcmVwbHlUb2dnbGVDbG9zZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcGx5VG9nZ2xlT3Blbi5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciByZXBseU1zZyA9XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5jbG9zZXN0KFwiLmN0ZXh0LXdyYXBcIikuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmlubmVyVGV4dDtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgXCIucmVwbHlDYXJkIC5yZXBseW1lc3NhZ2UtYmxvY2sgLmZsZXgtZ3Jvdy0xIC5tYi0wXCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJUZXh0ID0gcmVwbHlNc2c7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVwbHl1c2VyID1cclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzZXItcHJvZmlsZS1zaG93XCIpLmlubmVySFRNTDtcclxuICAgICAgICAgICAgICAgIHZhciBtc2dXd25lck5hbWUgPSBpdGVtLmNsb3Nlc3QoXCIuY2hhdC1saXN0XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgPyBpdGVtLmNsb3Nlc3QoXCIuY2hhdC1saXN0XCIpLmNsYXNzTGlzdC5jb250YWlucyhcImxlZnRcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyByZXBseXVzZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcIllvdVwiXHJcbiAgICAgICAgICAgICAgICAgICAgOiByZXBseXVzZXI7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLnJlcGx5Q2FyZCAucmVwbHltZXNzYWdlLWJsb2NrIC5mbGV4LWdyb3ctMSAuY29udmVyc2F0aW9uLW5hbWVcIlxyXG4gICAgICAgICAgICAgICAgKS5pbm5lclRleHQgPSBtc2dXd25lck5hbWU7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vcmVwbHkgQ2hhbm5lbG1lc3NhZ2VcclxuICAgIGZ1bmN0aW9uIHJlcGx5Q2hhbm5lbE1lc3NhZ2UoKSB7XHJcbiAgICAgICAgdmFyIHJlcGx5Q2hhbm5lbE1lc3NhZ2UgPVxyXG4gICAgICAgICAgICBjaGFubmVsSXRlbUxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5yZXBseS1tZXNzYWdlXCIpO1xyXG4gICAgICAgIHZhciByZXBseUNoYW5uZWxUb2dnbGVPcGVuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXBseUNhcmRcIik7XHJcbiAgICAgICAgdmFyIHJlcGx5Q2hhbm5lbFRvZ2dsZUNsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjbG9zZV90b2dnbGVcIik7XHJcblxyXG4gICAgICAgIHJlcGx5Q2hhbm5lbE1lc3NhZ2UuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpc3JlcGx5TWVzc2FnZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICByZXBseUNoYW5uZWxUb2dnbGVPcGVuLmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgcmVwbHlDaGFubmVsVG9nZ2xlQ2xvc2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXBseUNoYW5uZWxUb2dnbGVPcGVuLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIHJlcGx5Q2hhbm5lbE1zZyA9XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5jbG9zZXN0KFwiLmN0ZXh0LXdyYXBcIikuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmlubmVyVGV4dDtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgICAgICAgICAgXCIucmVwbHlDYXJkIC5yZXBseW1lc3NhZ2UtYmxvY2sgLmZsZXgtZ3Jvdy0xIC5tYi0wXCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJUZXh0ID0gcmVwbHlDaGFubmVsTXNnO1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlcGx5Q2hhbm5lbHVzZXIgPVxyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXNlci1wcm9maWxlLXNob3dcIikuaW5uZXJIVE1MO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICAgICBcIi5yZXBseUNhcmQgLnJlcGx5bWVzc2FnZS1ibG9jayAuZmxleC1ncm93LTEgLmNvbnZlcnNhdGlvbi1uYW1lXCJcclxuICAgICAgICAgICAgICAgICkuaW5uZXJUZXh0ID0gcmVwbHlDaGFubmVsdXNlcjtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9Db3B5IENoYW5uZWwgTWVzc2FnZXNcclxuICAgIGZ1bmN0aW9uIGNvcHlDaGFubmVsTWVzc2FnZSgpIHtcclxuICAgICAgICB2YXIgY29weUNoYW5uZWxNZXNzYWdlID1cclxuICAgICAgICAgICAgY2hhbm5lbEl0ZW1MaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29weS1tZXNzYWdlXCIpO1xyXG4gICAgICAgIGNvcHlDaGFubmVsTWVzc2FnZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpc1RleHQgPSBpdGVtLmNsb3Nlc3QoXCIuY3RleHQtd3JhcFwiKS5jaGlsZHJlblswXVxyXG4gICAgICAgICAgICAgICAgICAgID8gaXRlbS5jbG9zZXN0KFwiLmN0ZXh0LXdyYXBcIikuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAuaW5uZXJUZXh0XHJcbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoaXNUZXh0KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHJvZmlsZSBGb3JlZ3JvdW5kIEltZ1xyXG5cclxuICAgIGRvY3VtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1mb3JlZ3JvdW5kLWltZy1maWxlLWlucHV0XCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcHJldmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZS1mb3JlZ3JvdW5kLWltZ1wiKTtcclxuICAgICAgICAgICAgdmFyIGZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgXCIucHJvZmlsZS1mb3JlZ3JvdW5kLWltZy1maWxlLWlucHV0XCJcclxuICAgICAgICAgICAgKS5maWxlc1swXTtcclxuICAgICAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcblxyXG4gICAgICAgICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICAgICAgICAgIFwibG9hZFwiLFxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXcuc3JjID0gcmVhZGVyLnJlc3VsdDtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmYWxzZVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBpZiAoZmlsZSkge1xyXG4gICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAvLyB1c2VyIHByb2ZpbGUgaW1nXHJcbiAgICBkb2N1bWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtaW1nLWZpbGUtaW5wdXRcIilcclxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBwcmV2aWV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyLXByb2ZpbGUtaW1hZ2VcIik7XHJcbiAgICAgICAgICAgIHZhciBmaWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlLWltZy1maWxlLWlucHV0XCIpXHJcbiAgICAgICAgICAgICAgICAuZmlsZXNbMF07XHJcbiAgICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG5cclxuICAgICAgICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgICAgICAgICBcImxvYWRcIixcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3LnNyYyA9IHJlYWRlci5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmFsc2VcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgaWYgKGZpbGUpIHtcclxuICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgLy8gcHJvZmlsZSB1c2VyIGVkaXRcclxuICAgIGRvY3VtZW50XHJcbiAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwidXNlci1wcm9maWxlLWVkaXQtYnRuXCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZWRpdC1pbnB1dCAuZm9ybS1jb250cm9sXCIpXHJcbiAgICAgICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBlZGl0SWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWRpdC1pY29uXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIGRpc2FibGVkLCBkbyB0aGlzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRJY29uLmNsYXNzTGlzdC5yZXBsYWNlKFwiYnhzLXBlbmNpbFwiLCBcImJ4cy1zYXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRW50ZXIgY29kZSBoZXJlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRJY29uLmNsYXNzTGlzdC5yZXBsYWNlKFwiYnhzLXNhdmVcIiwgXCJieHMtcGVuY2lsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAvLyBmYXZvdXJpdGUgYnRuXHJcbiAgICB2YXIgZmF2b3VyaXRlQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImZhdm91cml0ZS1idG5cIik7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZhdm91cml0ZUJ0bi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHZhciBmYXZvdXJpdGVCdG5zID0gZmF2b3VyaXRlQnRuW2ldO1xyXG4gICAgICAgIGZhdm91cml0ZUJ0bnMub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZmF2b3VyaXRlQnRucy5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgLy8gY2hhdCBlbW9qaVBpY2tlciBpbnB1dFxyXG4gICAgdmFyIGVtb2ppUGlja2VyID0gbmV3IEZnRW1vamlQaWNrZXIoe1xyXG4gICAgICAgIHRyaWdnZXI6IFtcIi5lbW9qaS1idG5cIl0sXHJcbiAgICAgICAgcmVtb3ZlT25TZWxlY3Rpb246IGZhbHNlLFxyXG4gICAgICAgIGNsb3NlQnV0dG9uOiB0cnVlLFxyXG4gICAgICAgIHBvc2l0aW9uOiBbXCJ0b3BcIiwgXCJyaWdodFwiXSxcclxuICAgICAgICBwcmVGZXRjaDogdHJ1ZSxcclxuICAgICAgICBkaXI6IFwianMvZGlyL2pzb25cIixcclxuICAgICAgICBpbnNlcnRJbnRvOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtaW5wdXRcIiksXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBlbW9qaVBpY2tlciBwb3NpdGlvblxyXG4gICAgdmFyIGVtb2ppQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbW9qaS1idG5cIik7XHJcbiAgICBlbW9qaUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZmdFbW9qaVBpY2tlciA9XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiZmctZW1vamktcGlja2VyXCIpWzBdO1xyXG4gICAgICAgICAgICBpZiAoZmdFbW9qaVBpY2tlcikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGxlZnRFbW9qaSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGZnRW1vamlQaWNrZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgPyB3aW5kb3dcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAuZ2V0Q29tcHV0ZWRTdHlsZShmZ0Vtb2ppUGlja2VyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRQcm9wZXJ0eVZhbHVlKFwibGVmdFwiKVxyXG4gICAgICAgICAgICAgICAgICAgIDogXCJcIjtcclxuICAgICAgICAgICAgICAgIGlmIChsZWZ0RW1vamkpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0RW1vamkgPSBsZWZ0RW1vamkucmVwbGFjZShcInB4XCIsIFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnRFbW9qaSA9IGxlZnRFbW9qaSAtIDQwICsgXCJweFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGZnRW1vamlQaWNrZXIuc3R5bGUubGVmdCA9IGxlZnRFbW9qaTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0SlNPTkZpbGUoanNvbnVybCwgY2FsbGJhY2spIHtcclxuICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgeGhyLm9wZW4oXCJHRVRcIiwganNvbnVybCwgdHJ1ZSk7XHJcbiAgICAgICAgeGhyLnJlc3BvbnNlVHlwZSA9IFwianNvblwiO1xyXG4gICAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBzdGF0dXMgPSB4aHIuc3RhdHVzO1xyXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHhoci5yZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhzdGF0dXMsIHhoci5yZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHhoci5zZW5kKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0TmV4dE1zZ0NvdW50c1xyXG4gICAgZnVuY3Rpb24gZ2V0TmV4dE1zZ0NvdW50cyhjaGF0c0RhdGEsIGksIGZyb21faWQpIHtcclxuICAgICAgICB2YXIgY291bnRzID0gMDtcclxuICAgICAgICB3aGlsZSAoY2hhdHNEYXRhW2ldKSB7XHJcbiAgICAgICAgICAgIGlmIChjaGF0c0RhdGFbaSArIDFdICYmIGNoYXRzRGF0YVtpICsgMV1bXCJmcm9tX2lkXCJdID09IGZyb21faWQpIHtcclxuICAgICAgICAgICAgICAgIGNvdW50cysrO1xyXG4gICAgICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNvdW50cztcclxuICAgIH1cclxuXHJcbiAgICAvL2dldE5leHRNc2dzXHJcbiAgICBmdW5jdGlvbiBnZXROZXh0TXNncyhjaGF0c0RhdGEsIGksIGZyb21faWQsIGlzQ29udGludWUpIHtcclxuICAgICAgICB2YXIgbXNncyA9IDA7XHJcbiAgICAgICAgd2hpbGUgKGNoYXRzRGF0YVtpXSkge1xyXG4gICAgICAgICAgICBpZiAoY2hhdHNEYXRhW2kgKyAxXSAmJiBjaGF0c0RhdGFbaSArIDFdW1wiZnJvbV9pZFwiXSA9PSBmcm9tX2lkKSB7XHJcbiAgICAgICAgICAgICAgICBtc2dzID0gZ2V0TXNnKFxyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRzRGF0YVtpICsgMV0uaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdHNEYXRhW2kgKyAxXS5tc2csXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdHNEYXRhW2kgKyAxXS5oYXNfaW1hZ2VzLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRzRGF0YVtpICsgMV0uaGFzX2ZpbGVzLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRzRGF0YVtpICsgMV0uaGFzX2F1ZGlvcyxcclxuICAgICAgICAgICAgICAgICAgICBjaGF0c0RhdGFbaSArIDFdLmhhc192aWRlb3MsXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdHNEYXRhW2kgKyAxXS5oYXNfZHJvcERvd25cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICBpKys7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbXNncztcclxuICAgIH1cclxuXHJcbiAgICAvLyBnZXRNc2dcclxuICAgIGZ1bmN0aW9uIGdldE1zZyhcclxuICAgICAgICBpZCxcclxuICAgICAgICBtc2csXHJcbiAgICAgICAgaGFzX2ltYWdlcyxcclxuICAgICAgICBoYXNfZmlsZXMsXHJcbiAgICAgICAgaGFzX2F1ZGlvcyxcclxuICAgICAgICBoYXNfdmlkZW9zLFxyXG4gICAgICAgIGhhc19kcm9wRG93blxyXG4gICAgKSB7XHJcbiAgICAgICAgdmFyIG1zZ0hUTUwgPSAnPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXBcIj4nO1xyXG4gICAgICAgIGlmIChtc2cgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBtc2dIVE1MICs9XHJcbiAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImN0ZXh0LXdyYXAtY29udGVudFwiIGlkPScgK1xyXG4gICAgICAgICAgICAgICAgaWQgK1xyXG4gICAgICAgICAgICAgICAgJz5cXFxyXG4gICAgICAgIDxwIGNsYXNzPVwibWItMCBjdGV4dC1jb250ZW50XCI+JyArXHJcbiAgICAgICAgICAgICAgICBtc2cgK1xyXG4gICAgICAgICAgICAgICAgXCI8L3A+PC9kaXY+XCI7XHJcbiAgICAgICAgfSBlbHNlIGlmIChoYXNfaW1hZ2VzICYmIGhhc19pbWFnZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBtc2dIVE1MICs9ICc8ZGl2IGNsYXNzPVwibWVzc2FnZS1pbWcgbWItMFwiPic7XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBoYXNfaW1hZ2VzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBtc2dIVE1MICs9XHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJtZXNzYWdlLWltZy1saXN0XCI+XFxcclxuICAgICAgICAgICAgPGRpdj5cXFxyXG4gICAgICAgICAgICAgIDxhIGNsYXNzPVwicG9wdXAtaW1nIGQtaW5saW5lLWJsb2NrXCIgaHJlZj1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGhhc19pbWFnZXNbaV0gK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIj5cXFxyXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCInICtcclxuICAgICAgICAgICAgICAgICAgICBoYXNfaW1hZ2VzW2ldICtcclxuICAgICAgICAgICAgICAgICAgICAnXCIgYWx0PVwiXCIgY2xhc3M9XCJyb3VuZGVkIGJvcmRlciBpbWctdGh1bWJuYWlsXCI+XFxcclxuICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaW1nLWxpbmtcIj5cXFxyXG4gICAgICAgICAgICAgIDx1bCBjbGFzcz1cImxpc3QtaW5saW5lIG1iLTBcIj5cXFxyXG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibGlzdC1pbmxpbmUtaXRlbSBkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYnggYngtZG90cy1ob3Jpem9udGFsLXJvdW5kZWRcIj48L2k+XFxcclxuICAgICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGhhc19pbWFnZXNbaV0gK1xyXG4gICAgICAgICAgICAgICAgICAgICdcIiBkb3dubG9hZD5Eb3dubG9hZCA8aSBjbGFzcz1cImJ4IGJ4LWRvd25sb2FkIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiAgaHJlZj1cIiNcIiBkYXRhLWJzLXRvZ2dsZT1cImNvbGxhcHNlXCIgZGF0YS1icy10YXJnZXQ9XCIucmVwbHlDb2xsYXBzZVwiPlJlcGx5IDxpIGNsYXNzPVwiYnggYngtc2hhcmUgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJtb2RhbFwiIGRhdGEtYnMtdGFyZ2V0PVwiLmZvcndhcmRNb2RhbFwiPkZvcndhcmQgPGkgY2xhc3M9XCJieCBieC1zaGFyZS1hbHQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCI+Qm9va21hcmsgPGkgY2xhc3M9XCJieCBieC1ib29rbWFya3MgdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBkZWxldGUtaW1hZ2VcIiBocmVmPVwiI1wiPkRlbGV0ZSA8aSBjbGFzcz1cImJ4IGJ4LXRyYXNoIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgPC9saT5cXFxyXG4gICAgICAgICAgPC91bD5cXFxyXG4gICAgICAgIDwvZGl2PlxcXHJcbiAgICAgIDwvZGl2Pic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbXNnSFRNTCArPSBcIjwvZGl2PlwiO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaGFzX2ZpbGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbXNnSFRNTCArPVxyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJjdGV4dC13cmFwLWNvbnRlbnRcIj5cXFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC0zIGJvcmRlciByb3VuZGVkLTNcIj5cXFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBhdHRhY2hlZC1maWxlXCI+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wIGF2YXRhci1zbSBtZS0zIG1zLTAgYXR0YWNoZWQtZmlsZS1hdmF0YXJcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdmF0YXItdGl0bGUgYmctc29mdC1saWdodCByb3VuZGVkLWNpcmNsZSBmcy0yMFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicmktYXR0YWNobWVudC0yXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1ncm93LTEgb3ZlcmZsb3ctaGlkZGVuXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1zdGFydFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz1cImZzLTE0IHRleHQtd2hpdGUgbWItMVwiPmRlc2lnbi1waGFzZS0xLWFwcHJvdmVkLnBkZjwvaDU+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXdoaXRlLTUwIHRleHQtdHJ1bmNhdGUgZnMtMTMgbWItMFwiPjEyLjUgTUI8L3A+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wIG1zLTRcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZ2FwLTIgZnMtMjAgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cInRleHQtd2hpdGUtNTBcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYnggYnhzLWRvd25sb2FkXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbW9qaS1pY29uXCI+XFxcclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIj7wn5GNPC9hPlxcXHJcbiAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbGlnbi1zZWxmLXN0YXJ0IG1lc3NhZ2UtYm94LWRyb3AgZC1mbGV4XCI+XFxcclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd25cIj5cXFxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi10b2dnbGVcIiBocmVmPVwiI1wiIHJvbGU9XCJidXR0b25cIiBkYXRhLWJzLXRvZ2dsZT1cImRyb3Bkb3duXCIgYXJpYS1oYXNwb3B1cD1cInRydWVcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIj5cXFxyXG4gICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpLWVtb3Rpb24taGFwcHktbGluZVwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudSBlbW9qaS1kcm9wZG93bi1tZW51XCI+XFxcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhzdGFjayBhbGlnbi1pdGVtcy1jZW50ZXIgZ2FwLTIgcHgtMiBmcy0yNVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5KbPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn6SjPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5icPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5iYPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIj7wn5iNPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImF2YXRhci14c1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIiBjbGFzcz1cImF2YXRhci10aXRsZSBiZy1zb2Z0LXByaW1hcnkgcm91bmRlZC1jaXJjbGUgZnMtMTkgdGV4dC1wcmltYXJ5XCI+KzwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duXCI+XFxcclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpLW1vcmUtMi1maWxsXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51XCI+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiAgaHJlZj1cIicgK1xyXG4gICAgICAgICAgICAgICAgaGFzX2ZpbGVzICtcclxuICAgICAgICAgICAgICAgICdcIiBkb3dubG9hZD5Eb3dubG9hZCA8aSBjbGFzcz1cImJ4IGJ4LWRvd25sb2FkIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiIGRhdGEtYnMtdG9nZ2xlPVwiY29sbGFwc2VcIiBkYXRhLWJzLXRhcmdldD1cIi5yZXBseUNvbGxhcHNlXCI+UmVwbHkgPGkgY2xhc3M9XCJieCBieC1zaGFyZSBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIiBkYXRhLWJzLXRvZ2dsZT1cIm1vZGFsXCIgZGF0YS1icy10YXJnZXQ9XCIuZm9yd2FyZE1vZGFsXCI+Rm9yd2FyZCA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlLWFsdCBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIj5Cb29rbWFyayA8aSBjbGFzcz1cImJ4IGJ4LWJvb2ttYXJrcyB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGRlbGV0ZS1pdGVtXCIgaHJlZj1cIiNcIj5EZWxldGUgPGkgY2xhc3M9XCJieCBieC10cmFzaCB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICA8L2Rpdj4nO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaGFzX2F1ZGlvcyAmJiBoYXNfYXVkaW9zLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbXNnSFRNTCArPVxyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJhdWRpby1maWxlLWVsZW1cIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXVkaW8gY29udHJvbHM+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPVwiJyArXHJcbiAgICAgICAgICAgICAgICBoYXNfYXVkaW9zICtcclxuICAgICAgICAgICAgICAgICdcIiB0eXBlPVwiYXVkaW8vbXBlZ1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXVkaW8+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWxpZ24tc2VsZi1zdGFydCBtZXNzYWdlLWJveC1kcm9wIGQtZmxleFwiPlxcXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duXCI+XFxcclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24tdG9nZ2xlXCIgaHJlZj1cIiNcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS1icy10b2dnbGU9XCJkcm9wZG93blwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XFxcclxuICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJyaS1lbW90aW9uLWhhcHB5LWxpbmVcIj48L2k+XFxcclxuICAgICAgICAgICAgICAgIDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZW1vamktZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoc3RhY2sgYWxpZ24taXRlbXMtY2VudGVyIGdhcC0yIHB4LTIgZnMtMjVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+SmzwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+kozwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YnDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YmDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+8J+YjTwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhdmF0YXIteHNcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCIgY2xhc3M9XCJhdmF0YXItdGl0bGUgYmctc29mdC1wcmltYXJ5IHJvdW5kZWQtY2lyY2xlIGZzLTE5IHRleHQtcHJpbWFyeVwiPis8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJyaS1tb3JlLTItZmlsbFwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgIGhyZWY9XCInICtcclxuICAgICAgICAgICAgICAgIGhhc19hdWRpb3MgK1xyXG4gICAgICAgICAgICAgICAgJ1wiIGRvd25sb2FkPkRvd25sb2FkIDxpIGNsYXNzPVwiYnggYngtZG93bmxvYWQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJjb2xsYXBzZVwiIGRhdGEtYnMtdGFyZ2V0PVwiLnJlcGx5Q29sbGFwc2VcIj5SZXBseSA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiIGRhdGEtYnMtdG9nZ2xlPVwibW9kYWxcIiBkYXRhLWJzLXRhcmdldD1cIi5mb3J3YXJkTW9kYWxcIj5Gb3J3YXJkIDxpIGNsYXNzPVwiYnggYngtc2hhcmUtYWx0IG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiPkJvb2ttYXJrIDxpIGNsYXNzPVwiYnggYngtYm9va21hcmtzIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gZGVsZXRlLWl0ZW1cIiBocmVmPVwiI1wiPkRlbGV0ZSA8aSBjbGFzcz1cImJ4IGJ4LXRyYXNoIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgIDwvZGl2Pic7XHJcbiAgICAgICAgfSBlbHNlIGlmIChoYXNfdmlkZW9zICYmIGhhc192aWRlb3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBtc2dIVE1MICs9XHJcbiAgICAgICAgICAgICAgICAnPGRpdj5cXFxyXG4gICAgICAgIDxpZnJhbWUgc3JjPVwiJyArXHJcbiAgICAgICAgICAgICAgICBoYXNfdmlkZW9zICtcclxuICAgICAgICAgICAgICAgICdcIiB0aXRsZT1cIllvdVR1YmUgdmlkZW9cIiBjbGFzcz1cInctMTAwIHJvdW5kZWRcIiBhdXRvcGxheSBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+XFxcclxuICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFsaWduLXNlbGYtc3RhcnQgbWVzc2FnZS1ib3gtZHJvcCBkLWZsZXhcIj5cXFxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicmktZW1vdGlvbi1oYXBweS1saW5lXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51IGVtb2ppLWRyb3Bkb3duLW1lbnVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaHN0YWNrIGFsaWduLWl0ZW1zLWNlbnRlciBnYXAtMiBweC0yIGZzLTI1XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfkps8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfpKM8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJw8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJg8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmI08L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXZhdGFyLXhzXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiIGNsYXNzPVwiYXZhdGFyLXRpdGxlIGJnLXNvZnQtcHJpbWFyeSByb3VuZGVkLWNpcmNsZSBmcy0xOSB0ZXh0LXByaW1hcnlcIj4rPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd25cIj5cXFxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi10b2dnbGVcIiBocmVmPVwiI1wiIHJvbGU9XCJidXR0b25cIiBkYXRhLWJzLXRvZ2dsZT1cImRyb3Bkb3duXCIgYXJpYS1oYXNwb3B1cD1cInRydWVcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicmktbW9yZS0yLWZpbGxcIj48L2k+XFxcclxuICAgICAgICAgICAgICAgIDwvYT5cXFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiICBocmVmPVwiJyArXHJcbiAgICAgICAgICAgICAgICBoYXNfdmlkZW9zICtcclxuICAgICAgICAgICAgICAgICdcIiBkb3dubG9hZD5Eb3dubG9hZCA8aSBjbGFzcz1cImJ4IGJ4LWRvd25sb2FkIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiIGRhdGEtYnMtdG9nZ2xlPVwiY29sbGFwc2VcIiBkYXRhLWJzLXRhcmdldD1cIi5yZXBseUNvbGxhcHNlXCI+UmVwbHkgPGkgY2xhc3M9XCJieCBieC1zaGFyZSBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIiBkYXRhLWJzLXRvZ2dsZT1cIm1vZGFsXCIgZGF0YS1icy10YXJnZXQ9XCIuZm9yd2FyZE1vZGFsXCI+Rm9yd2FyZCA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlLWFsdCBtcy0yIHRleHQtbXV0ZWRcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCIgaHJlZj1cIiNcIj5Cb29rbWFyayA8aSBjbGFzcz1cImJ4IGJ4LWJvb2ttYXJrcyB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGRlbGV0ZS1pdGVtXCIgaHJlZj1cIiNcIj5EZWxldGUgPGkgY2xhc3M9XCJieCBieC10cmFzaCB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICA8L2Rpdj4nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaGFzX2Ryb3BEb3duID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIG1zZ0hUTUwgKz1cclxuICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiYWxpZ24tc2VsZi1zdGFydCBtZXNzYWdlLWJveC1kcm9wIGQtZmxleFwiPlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicmktZW1vdGlvbi1oYXBweS1saW5lXCI+PC9pPlxcXHJcbiAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51IGVtb2ppLWRyb3Bkb3duLW1lbnVcIj5cXFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaHN0YWNrIGFsaWduLWl0ZW1zLWNlbnRlciBnYXAtMiBweC0yIGZzLTI1XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfkps8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfpKM8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJw8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmJg8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiPvCfmI08L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXZhdGFyLXhzXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiIGNsYXNzPVwiYXZhdGFyLXRpdGxlIGJnLXNvZnQtcHJpbWFyeSByb3VuZGVkLWNpcmNsZSBmcy0xOSB0ZXh0LXByaW1hcnlcIj4rPC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZVwiIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGRhdGEtYnMtdG9nZ2xlPVwiZHJvcGRvd25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJyaS1tb3JlLTItZmlsbFwiPjwvaT5cXFxyXG4gICAgICAgICAgICAgICAgPC9hPlxcXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gcmVwbHktbWVzc2FnZVwiIGhyZWY9XCIjXCIgaWQ9XCJyZXBseS1tZXNzYWdlLScgK1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZUlkcyArXHJcbiAgICAgICAgICAgICAgICAnXCIgZGF0YS1icy10b2dnbGU9XCJjb2xsYXBzZVwiIGRhdGEtYnMtdGFyZ2V0PVwiLnJlcGx5Q29sbGFwc2VcIj5SZXBseSA8aSBjbGFzcz1cImJ4IGJ4LXNoYXJlIG1zLTIgdGV4dC1tdXRlZFwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCIgZGF0YS1icy10b2dnbGU9XCJtb2RhbFwiIGRhdGEtYnMtdGFyZ2V0PVwiLmZvcndhcmRNb2RhbFwiPkZvcndhcmQgPGkgY2xhc3M9XCJieCBieC1zaGFyZS1hbHQgbXMtMiB0ZXh0LW11dGVkXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGNvcHktbWVzc2FnZVwiIGhyZWY9XCIjXCIgaWQ9XCJjb3B5LW1lc3NhZ2UtJyArXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlSWRzICtcclxuICAgICAgICAgICAgICAgICdcIj5Db3B5IDxpIGNsYXNzPVwiYnggYngtY29weSB0ZXh0LW11dGVkIG1zLTJcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW5cIiBocmVmPVwiI1wiPkJvb2ttYXJrIDxpIGNsYXNzPVwiYnggYngtYm9va21hcmtzIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiIGhyZWY9XCIjXCI+TWFyayBhcyBVbnJlYWQgPGkgY2xhc3M9XCJieCBieC1tZXNzYWdlLWVycm9yIHRleHQtbXV0ZWQgbXMtMlwiPjwvaT48L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBkZWxldGUtaXRlbVwiIGhyZWY9XCIjXCI+RGVsZXRlIDxpIGNsYXNzPVwiYnggYngtdHJhc2ggdGV4dC1tdXRlZCBtcy0yXCI+PC9pPjwvYT5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICA8L2Rpdj4nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBtc2dIVE1MICs9IFwiPC9kaXY+XCI7XHJcbiAgICAgICAgcmV0dXJuIG1zZ0hUTUw7XHJcbiAgICB9XHJcblxyXG4gICAgLy9DaGF0IE1lc3NhZ2VcclxuICAgIGZ1bmN0aW9uIGdldENoYXRNZXNzYWdlcyhqc29uRmlsZVVybCkge1xyXG4gICAgICAgIGdldEpTT05GaWxlKGpzb25GaWxlVXJsLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChlcnIgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmc6IFwiICsgZXJyKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHZhciBjaGF0c0RhdGEgPVxyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3RlZENoYXQgPT0gXCJ1c2Vyc1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gZGF0YVswXS5jaGF0c1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGRhdGFbMF0uY2hhbm5lbF9jaGF0O1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFNlbGVjdGVkQ2hhdCArIFwiLWNvbnZlcnNhdGlvblwiXHJcbiAgICAgICAgICAgICAgICApLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXNDb250aW51ZSA9IDA7XHJcbiAgICAgICAgICAgICAgICBjaGF0c0RhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXNDaGF0LCBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0NvbnRpbnVlID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NvbnRpbnVlID0gaXNDb250aW51ZSAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzQWxpZ2huID1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaGF0LmZyb21faWQgPT0gdXNlckNoYXRJZCA/IFwiIHJpZ2h0XCIgOiBcIiBsZWZ0XCI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciB1c2VyID0gdXNlcnNMaXN0LmZpbmQoZnVuY3Rpb24gKGxpc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxpc3QuaWQgPT0gaXNDaGF0LmZyb21faWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1zZ0hUTUwgPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGxpIGNsYXNzPVwiY2hhdC1saXN0JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQWxpZ2huICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ1wiIGlkPScgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NoYXQuaWQgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb252ZXJzYXRpb24tbGlzdFwiPic7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJDaGF0SWQgIT0gaXNDaGF0LmZyb21faWQgJiYgdXNlcilcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXNnSFRNTCArPVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJjaGF0LWF2YXRhclwiPjxpbWcgc3JjPVwiJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnByb2ZpbGUgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiIGFsdD1cIlwiPjwvZGl2Pic7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIG1zZ0hUTUwgKz0gJzxkaXYgY2xhc3M9XCJ1c2VyLWNoYXQtY29udGVudFwiPic7XHJcbiAgICAgICAgICAgICAgICAgICAgbXNnSFRNTCArPSBnZXRNc2coXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQ2hhdC5pZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaGF0Lm1zZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaGF0Lmhhc19pbWFnZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQ2hhdC5oYXNfZmlsZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQ2hhdC5oYXNfYXVkaW9zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NoYXQuaGFzX3ZpZGVvcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaGF0Lmhhc19kcm9wRG93blxyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGF0c0RhdGFbaW5kZXggKyAxXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NoYXQuZnJvbV9pZCA9PSBjaGF0c0RhdGFbaW5kZXggKyAxXVtcImZyb21faWRcIl1cclxuICAgICAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDb250aW51ZSA9IGdldE5leHRNc2dDb3VudHMoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGF0c0RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQ2hhdC5mcm9tX2lkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1zZ0hUTUwgKz0gZ2V0TmV4dE1zZ3MoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGF0c0RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQ2hhdC5mcm9tX2lkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNDb250aW51ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBtc2dIVE1MICs9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29udmVyc2F0aW9uLW5hbWVcIj48c21hbGwgY2xhc3M9XCJ0ZXh0LW11dGVkIHRpbWVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaGF0LmRhdGV0aW1lICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJzwvc21hbGw+IDxzcGFuIGNsYXNzPVwidGV4dC1zdWNjZXNzIGNoZWNrLW1lc3NhZ2UtaWNvblwiPjxpIGNsYXNzPVwiYnggYngtY2hlY2stZG91YmxlXCI+PC9pPjwvc3Bhbj48L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgICAgIG1zZ0hUTUwgKz1cclxuICAgICAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgPC9saT5cIjtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3RlZENoYXQgKyBcIi1jb252ZXJzYXRpb25cIlxyXG4gICAgICAgICAgICAgICAgICAgICkuaW5uZXJIVE1MICs9IG1zZ0hUTUw7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkZWxldGVNZXNzYWdlKCk7XHJcbiAgICAgICAgICAgIGRlbGV0ZUNoYW5uZWxNZXNzYWdlKCk7XHJcbiAgICAgICAgICAgIGRlbGV0ZUltYWdlKCk7XHJcbiAgICAgICAgICAgIGNvcHlNZXNzYWdlKCk7XHJcbiAgICAgICAgICAgIGNvcHlDaGFubmVsTWVzc2FnZSgpO1xyXG4gICAgICAgICAgICBzY3JvbGxUb0JvdHRvbShcInVzZXJzLWNoYXRcIik7XHJcbiAgICAgICAgICAgIHVwZGF0ZUxpZ2h0Ym94KCk7XHJcbiAgICAgICAgICAgIGNvcHlDbGlwYm9hcmQoKTtcclxuICAgICAgICAgICAgcmVwbHlNZXNzYWdlKCk7XHJcbiAgICAgICAgICAgIHJlcGx5Q2hhbm5lbE1lc3NhZ2UoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8vIEdMaWdodGJveCBQb3B1cFxyXG4gICAgZnVuY3Rpb24gdXBkYXRlTGlnaHRib3goKSB7XHJcbiAgICAgICAgdmFyIGxpZ2h0Ym94ID0gR0xpZ2h0Ym94KHtcclxuICAgICAgICAgICAgc2VsZWN0b3I6IFwiLnBvcHVwLWltZ1wiLFxyXG4gICAgICAgICAgICB0aXRsZTogZmFsc2UsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pKCk7XHJcblxyXG52YXIgaW5wdXQsIGZpbHRlciwgdWwsIGxpLCBhLCBpLCBqLCBkaXY7XHJcbi8vIFNlYXJjaCBVc2VyXHJcbmZ1bmN0aW9uIHNlYXJjaFVzZXIoKSB7XHJcbiAgICBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoQ2hhdFVzZXJcIik7XHJcbiAgICBmaWx0ZXIgPSBpbnB1dC52YWx1ZS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgdWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtcm9vbS1saXN0XCIpO1xyXG4gICAgbGkgPSB1bC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxpXCIpO1xyXG4gICAgZm9yIChpID0gMDsgaSA8IGxpLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIGl0ZW0gPSBsaVtpXTtcclxuICAgICAgICB2YXIgdHh0VmFsdWUgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoXCJwXCIpLmlubmVyVGV4dDtcclxuICAgICAgICBpZiAodHh0VmFsdWUudG9VcHBlckNhc2UoKS5pbmRleE9mKGZpbHRlcikgPiAtMSkge1xyXG4gICAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vL1NlYXJjaCBDb250YWN0c1xyXG5cclxuZnVuY3Rpb24gc2VhcmNoQ29udGFjdHMoKSB7XHJcbiAgICBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoQ29udGFjdFwiKTtcclxuICAgIGZpbHRlciA9IGlucHV0LnZhbHVlLnRvVXBwZXJDYXNlKCk7XHJcbiAgICBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zb3J0LWNvbnRhY3RcIik7XHJcbiAgICBsaSA9IGxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5tdC0zIGxpXCIpO1xyXG4gICAgZGl2ID0gbGlzdC5xdWVyeVNlbGVjdG9yQWxsKFwiLm10LTMgLmNvbnRhY3QtbGlzdC10aXRsZVwiKTtcclxuICAgIGxldCB1c2VyVVVJRCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT1cInV1aWRcIl0nKS5jb250ZW50O1xyXG4gICAgLy8gRmV0Y2hpbmcgdXNlcnMgZnJvbSByZW1vdGVcclxuXHJcbiAgICBheGlvcy5nZXQoXCIvYXBpL3VzZXIvY29udGFjdHNcIiwgeyBwYXJhbXM6IHt9IH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7fSk7XHJcblxyXG4gICAgZm9yIChqID0gMDsgaiA8IGRpdi5sZW5ndGg7IGorKykge1xyXG4gICAgICAgIHZhciBjb250YWN0VGl0bGUgPSBkaXZbal07XHJcbiAgICAgICAgdHh0VmFsdWUgPSBjb250YWN0VGl0bGUuaW5uZXJUZXh0O1xyXG4gICAgICAgIGlmICh0eHRWYWx1ZS50b1VwcGVyQ2FzZSgpLmluZGV4T2YoZmlsdGVyKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIGRpdltqXS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkaXZbal0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb250YWN0TmFtZSA9IGxpW2ldO1xyXG4gICAgICAgIHR4dFZhbHVlID0gY29udGFjdE5hbWUucXVlcnlTZWxlY3RvcihcImg1XCIpLmlubmVyVGV4dDtcclxuICAgICAgICBpZiAodHh0VmFsdWUudG9VcHBlckNhc2UoKS5pbmRleE9mKGZpbHRlcikgPiAtMSkge1xyXG4gICAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmRvY3VtZW50XHJcbiAgICAuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hDb250YWN0XCIpXHJcbiAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHNlYXJjaENvbnRhY3RzKTtcclxuXHJcbi8vU2VhcmNoIGNvbnRhY3Qgb24gY29udGFjdE1vZGFsTGlzdFxyXG5mdW5jdGlvbiBzZWFyY2hDb250YWN0T25Nb2RhbCgpIHtcclxuICAgIGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hDb250YWN0TW9kYWxcIik7XHJcbiAgICBmaWx0ZXIgPSBpbnB1dC52YWx1ZS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgbGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGFjdC1tb2RhbC1saXN0XCIpO1xyXG4gICAgbGkgPSBsaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubXQtMiBsaVwiKTtcclxuICAgIGRpdiA9IGxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5tdC0yIC5jb250YWN0LWxpc3QtdGl0bGVcIik7XHJcblxyXG4gICAgZm9yIChqID0gMDsgaiA8IGRpdi5sZW5ndGg7IGorKykge1xyXG4gICAgICAgIHZhciBjb250YWN0VGl0bGUgPSBkaXZbal07XHJcbiAgICAgICAgdHh0VmFsdWUgPSBjb250YWN0VGl0bGUuaW5uZXJUZXh0O1xyXG4gICAgICAgIGlmICh0eHRWYWx1ZS50b1VwcGVyQ2FzZSgpLmluZGV4T2YoZmlsdGVyKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIGRpdltqXS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkaXZbal0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb250YWN0TmFtZSA9IGxpW2ldO1xyXG4gICAgICAgIHR4dFZhbHVlID0gY29udGFjdE5hbWUucXVlcnlTZWxlY3RvcihcImg1XCIpLmlubmVyVGV4dDtcclxuICAgICAgICBpZiAodHh0VmFsdWUudG9VcHBlckNhc2UoKS5pbmRleE9mKGZpbHRlcikgPiAtMSkge1xyXG4gICAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBib29rbWFyayBzZXJhY2hcclxuZnVuY3Rpb24gc2VhcmNoQm9va21hcmsoKSB7XHJcbiAgICB2YXIgaW5wdXQsIGZpbHRlciwgdWwsIGxpLCBhLCBpLCB0eHRWYWx1ZTtcclxuICAgIGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hib29rbWFya1wiKTtcclxuICAgIGZpbHRlciA9IGlucHV0LnZhbHVlLnRvVXBwZXJDYXNlKCk7XHJcbiAgICB1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhdC1ib29rbWFyay1saXN0XCIpO1xyXG4gICAgbGkgPSB1bC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxpXCIpO1xyXG4gICAgZm9yIChpID0gMDsgaSA8IGxpLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgYSA9IGxpW2ldLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYVwiKVswXTtcclxuICAgICAgICB0eHRWYWx1ZSA9IGEudGV4dENvbnRlbnQgfHwgYS5pbm5lclRleHQ7XHJcbiAgICAgICAgaWYgKHR4dFZhbHVlLnRvVXBwZXJDYXNlKCkuaW5kZXhPZihmaWx0ZXIpID4gLTEpIHtcclxuICAgICAgICAgICAgbGlbaV0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbGlbaV0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy9Mb2NhdGlvbiBQZXJtaXNzaW9uXHJcbmZ1bmN0aW9uIGdldExvY2F0aW9uKCkge1xyXG4gICAgaWYgKG5hdmlnYXRvci5nZW9sb2NhdGlvbikge1xyXG4gICAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oc2hvd1Bvc2l0aW9uKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgeC5pbm5lckhUTUwgPSBcIkdlb2xvY2F0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBicm93c2VyLlwiO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzaG93UG9zaXRpb24ocG9zaXRpb24pIHtcclxuICAgIHguaW5uZXJIVE1MID1cclxuICAgICAgICBcIkxhdGl0dWRlOiBcIiArXHJcbiAgICAgICAgcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlICtcclxuICAgICAgICBcIjxicj5Mb25naXR1ZGU6IFwiICtcclxuICAgICAgICBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlO1xyXG59XHJcblxyXG4vL0NhbWVyYSBQZXJtaXNzaW9uXHJcbmZ1bmN0aW9uIGNhbWVyYVBlcm1pc3Npb24oKSB7XHJcbiAgICBpZiAobmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHtcclxuICAgICAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzXHJcbiAgICAgICAgICAgIC5nZXRVc2VyTWVkaWEoeyB2aWRlbzogdHJ1ZSB9KVxyXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocykge1xyXG4gICAgICAgICAgICAgICAgdmlkZW8uc3JjT2JqZWN0ID0gcztcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIk5vXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL0F1ZGlvKE1pYykgUGVybWlzc2lvblxyXG5mdW5jdGlvbiBhdWRpb1Blcm1pc3Npb24oKSB7XHJcbiAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzXHJcbiAgICAgICAgLmdldFVzZXJNZWRpYSh7IGF1ZGlvOiB0cnVlIH0pXHJcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHN0cmVhbSkge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdHJlYW0gPSBzdHJlYW07XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhbEF1ZGlvLnNyY09iamVjdCA9IHN0cmVhbTtcclxuICAgICAgICAgICAgd2luZG93LmxvY2FsQXVkaW8uYXV0b3BsYXkgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG59XHJcblxyXG4vL2dldCBjb2xvclxyXG5cclxuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KFxyXG4gICAgXCItLWJzLXByaW1hcnktcmdiXCIsXHJcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjb2xvclByaW1hcnlcIilcclxuKTtcclxuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KFxyXG4gICAgXCItLWJzLXNlY29uZGFyeS1yZ2JcIixcclxuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNvbG9yU2Vjb25kYXJ5XCIpXHJcbik7XHJcblxyXG5mdW5jdGlvbiB0aGVtZUNvbG9yKHByaW1hcnlDb2xvcikge1xyXG4gICAgdmFyIGFjdGl2ZUN1c3RvbWNvbG9yID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhY3RpdmVDdXN0b21jb2xvclwiKTtcclxuICAgIGlmIChhY3RpdmVDdXN0b21jb2xvcikge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGFjdGl2ZUN1c3RvbWNvbG9yKS5jaGVja2VkID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudGhlbWUtY29sb3JcIikuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgIHZhciBjb2xvclJhZGlvRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICBcImlucHV0W25hbWU9Ymdjb2xvci1yYWRpb106Y2hlY2tlZFwiXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgaWYgKGNvbG9yUmFkaW9FbGVtZW50cykge1xyXG4gICAgICAgICAgICBjb2xvclJhZGlvRWxlbWVudHMgPSBjb2xvclJhZGlvRWxlbWVudHMuaWQ7XHJcblxyXG4gICAgICAgICAgICB2YXIgZWxlbWVudHNDb2xvciA9XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGNvbG9yUmFkaW9FbGVtZW50cyk7XHJcblxyXG4gICAgICAgICAgICB2YXIgY29sb3IgPSB3aW5kb3dcclxuICAgICAgICAgICAgICAgIC5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnRzQ29sb3JbMF0sIG51bGwpXHJcbiAgICAgICAgICAgICAgICAuZ2V0UHJvcGVydHlWYWx1ZShcImJhY2tncm91bmQtaW1hZ2VcIik7XHJcblxyXG4gICAgICAgICAgICByZ2JDb2xvclNlY29uZGFyeSA9IGNvbG9yLnN1YnN0cmluZyhcclxuICAgICAgICAgICAgICAgIGNvbG9yLmluZGV4T2YoXCJiXCIpICsgMixcclxuICAgICAgICAgICAgICAgIGNvbG9yLmluZGV4T2YoXCIpXCIpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJnYkNvbG9yUHJpbWFyeSA9IGNvbG9yLnN1YnN0cmluZyhcclxuICAgICAgICAgICAgICAgIGNvbG9yLmxhc3RJbmRleE9mKFwiKFwiKSArIDEsXHJcbiAgICAgICAgICAgICAgICBjb2xvci5sYXN0SW5kZXhPZihcIilcIikgLSAxXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgaWYgKGl0ZW0uaWQpIHtcclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiYWN0aXZlQ3VzdG9tY29sb3JcIiwgaXRlbS5pZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gY2hvb3NlIHRoZW1lIGNvbG9yXHJcbiAgICAgICAgICAgIHZhciBjb2xvclJhZGlvRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICAgICAgXCJpbnB1dFtuYW1lPWJnY29sb3ItcmFkaW9dOmNoZWNrZWRcIlxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgaWYgKGNvbG9yUmFkaW9FbGVtZW50cykge1xyXG4gICAgICAgICAgICAgICAgY29sb3JSYWRpb0VsZW1lbnRzID0gY29sb3JSYWRpb0VsZW1lbnRzLmlkO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBlbGVtZW50c0NvbG9yID1cclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGNvbG9yUmFkaW9FbGVtZW50cyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudHNDb2xvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjb2xvciA9IHdpbmRvd1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50c0NvbG9yWzBdLCBudWxsKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuZ2V0UHJvcGVydHlWYWx1ZShcImJhY2tncm91bmQtaW1hZ2VcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHJnYkNvbG9yU2Vjb25kYXJ5ID0gY29sb3Iuc3Vic3RyaW5nKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvci5pbmRleE9mKFwiYlwiKSArIDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yLmluZGV4T2YoXCIpXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICByZ2JDb2xvclByaW1hcnkgPSBjb2xvci5zdWJzdHJpbmcoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yLmxhc3RJbmRleE9mKFwiKFwiKSArIDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yLmxhc3RJbmRleE9mKFwiKVwiKSAtIDFcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiY29sb3JQcmltYXJ5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJnYkNvbG9yUHJpbWFyeVxyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNvbG9yU2Vjb25kYXJ5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJnYkNvbG9yU2Vjb25kYXJ5XHJcbiAgICAgICAgICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi0tYnMtcHJpbWFyeS1yZ2JcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY29sb3JQcmltYXJ5XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiLS1icy1zZWNvbmRhcnktcmdiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNvbG9yU2Vjb25kYXJ5XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gcHJpbWFyeSBjb2xvciBwaWNrZXJcclxuICAgIHZhciBjbGFzc2ljUGlja3JQcmltYXJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jb2xvcnBpY2tlci1wcmltYXJ5XCIpO1xyXG4gICAgY2xhc3NpY1BpY2tyUHJpbWFyeS5mb3JFYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcHJpbWFyeWNvbG9yID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjb2xvclByaW1hcnlcIilcclxuICAgICAgICAgICAgPyBcInJnYmEoXCIgKyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNvbG9yUHJpbWFyeVwiKSArIFwiLDEpXCJcclxuICAgICAgICAgICAgOiBcIiM2MTUzQ0NcIjtcclxuXHJcbiAgICAgICAgdmFyIHByaW1hcnlQaWNrZXIgPSBQaWNrci5jcmVhdGUoe1xyXG4gICAgICAgICAgICBlbDogXCIuY29sb3JwaWNrZXItcHJpbWFyeVwiLFxyXG4gICAgICAgICAgICB0aGVtZTogXCJuYW5vXCIsIC8vIG9yICdtb25vbGl0aCcsIG9yICduYW5vJ1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBwcmltYXJ5Y29sb3IsXHJcbiAgICAgICAgICAgIHN3YXRjaGVzOiBudWxsLFxyXG4gICAgICAgICAgICBkZWZhdWx0UmVwcmVzZW50YXRpb246IFwiUkdCQVwiLFxyXG4gICAgICAgICAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgICAgICAgICAvLyBNYWluIGNvbXBvbmVudHNcclxuICAgICAgICAgICAgICAgIHByZXZpZXc6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgaHVlOiB0cnVlLFxyXG5cclxuICAgICAgICAgICAgICAgIC8vIElucHV0IC8gb3V0cHV0IE9wdGlvbnNcclxuICAgICAgICAgICAgICAgIGludGVyYWN0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaGV4OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICByZ2JhOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBoc3ZhOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBjbGVhcjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBzYXZlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gcHJpbWFyeSBjb2xvcnBpY2tlclxyXG4gICAgICAgIHByaW1hcnlQaWNrZXJcclxuICAgICAgICAgICAgLm9uKFwiY2xlYXJcIiwgZnVuY3Rpb24gKGluc3RhbmNlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnRXZlbnQ6IFwiY2xlYXJcIicsIGluc3RhbmNlKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLm9uKFwiY2FuY2VsXCIsIGZ1bmN0aW9uIChpbnN0YW5jZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2NhbmNlbCcsIHByaW1hcnlQaWNrZXIuZ2V0Q29sb3IoKS50b1JHQkEoKS50b1N0cmluZygwKSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoY29sb3IsIHNvdXJjZSwgaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdFdmVudDogXCJjaGFuZ2VcIicsIGluc3RhbmNlLCBwcmltYXJ5UGlja2VyLmdldENvbG9yKCkudG9SR0JBKCkudG9TdHJpbmcoMCkpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHByaW1hcnlDb2xvclZhbHVlID0gcHJpbWFyeVBpY2tlclxyXG4gICAgICAgICAgICAgICAgICAgIC5nZXRDb2xvcigpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRvUkdCQSgpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRvU3RyaW5nKDApO1xyXG5cclxuICAgICAgICAgICAgICAgIHJnYkNvbG9yc1ByaW1hcnkgPSBwcmltYXJ5Q29sb3JWYWx1ZS5zdWJzdHJpbmcoXHJcbiAgICAgICAgICAgICAgICAgICAgcHJpbWFyeUNvbG9yVmFsdWUuaW5kZXhPZihcIihcIikgKyAxLFxyXG4gICAgICAgICAgICAgICAgICAgIHByaW1hcnlDb2xvclZhbHVlLmxhc3RJbmRleE9mKFwiLFwiKVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY29sb3JQcmltYXJ5XCIsIHJnYkNvbG9yc1ByaW1hcnkpO1xyXG5cclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShcclxuICAgICAgICAgICAgICAgICAgICBcIi0tYnMtcHJpbWFyeS1yZ2JcIixcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjb2xvclByaW1hcnlcIilcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gc2Vjb25kYXJ5IGNvbG9yIHBpY2tlclxyXG4gICAgdmFyIGNsYXNzaWNQaWNrclNlY29uZGFyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXHJcbiAgICAgICAgXCIuY29sb3JwaWNrZXItc2Vjb25kYXJ5XCJcclxuICAgICk7XHJcbiAgICBjbGFzc2ljUGlja3JTZWNvbmRhcnkuZm9yRWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHNlY29uZGFyeWNvbG9yID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjb2xvclNlY29uZGFyeVwiKVxyXG4gICAgICAgICAgICA/IFwicmdiYShcIiArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY29sb3JTZWNvbmRhcnlcIikgKyBcIiwxKVwiXHJcbiAgICAgICAgICAgIDogXCIjYjk2NmMxXCI7XHJcbiAgICAgICAgdmFyIHNlY29uZGFyeVBpY2tlciA9IFBpY2tyLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIGVsOiBcIi5jb2xvcnBpY2tlci1zZWNvbmRhcnlcIixcclxuICAgICAgICAgICAgdGhlbWU6IFwibmFub1wiLCAvLyBvciAnbW9ub2xpdGgnLCBvciAnbmFubydcclxuICAgICAgICAgICAgZGVmYXVsdDogc2Vjb25kYXJ5Y29sb3IsXHJcbiAgICAgICAgICAgIHN3YXRjaGVzOiBudWxsLFxyXG4gICAgICAgICAgICBkZWZhdWx0UmVwcmVzZW50YXRpb246IFwiUkdCQVwiLFxyXG4gICAgICAgICAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgICAgICAgICAvLyBNYWluIGNvbXBvbmVudHNcclxuICAgICAgICAgICAgICAgIHByZXZpZXc6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgaHVlOiB0cnVlLFxyXG5cclxuICAgICAgICAgICAgICAgIC8vIElucHV0IC8gb3V0cHV0IE9wdGlvbnNcclxuICAgICAgICAgICAgICAgIGludGVyYWN0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaGV4OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICByZ2JhOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBoc3ZhOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBjbGVhcjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBzYXZlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBwcmltYXJ5IGNvbG9ycGlja2VyXHJcbiAgICAgICAgc2Vjb25kYXJ5UGlja2VyXHJcbiAgICAgICAgICAgIC5vbihcImNsZWFyXCIsIGZ1bmN0aW9uIChpbnN0YW5jZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ0V2ZW50OiBcImNsZWFyXCInLCBpbnN0YW5jZSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5vbihcImNhbmNlbFwiLCBmdW5jdGlvbiAoaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdjYW5jZWwnLCBzZWNvbmRhcnlQaWNrZXIuZ2V0Q29sb3IoKS50b1JHQkEoKS50b1N0cmluZygwKSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoY29sb3IsIHNvdXJjZSwgaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdFdmVudDogXCJjaGFuZ2VcIicsIGluc3RhbmNlLCBzZWNvbmRhcnlQaWNrZXIuZ2V0Q29sb3IoKS50b1JHQkEoKS50b1N0cmluZygwKSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2Vjb25kYXJ5Q29sb3JWYWx1ZSA9IHNlY29uZGFyeVBpY2tlclxyXG4gICAgICAgICAgICAgICAgICAgIC5nZXRDb2xvcigpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRvUkdCQSgpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRvU3RyaW5nKDApO1xyXG5cclxuICAgICAgICAgICAgICAgIHJnYkNvbG9yU2Vjb25kYXJ5ID0gc2Vjb25kYXJ5Q29sb3JWYWx1ZS5zdWJzdHJpbmcoXHJcbiAgICAgICAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3JWYWx1ZS5sYXN0SW5kZXhPZihcIihcIikgKyAxLFxyXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yVmFsdWUubGFzdEluZGV4T2YoXCIsXCIpXHJcbiAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY29sb3JTZWNvbmRhcnlcIiwgcmdiQ29sb3JTZWNvbmRhcnkpO1xyXG5cclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShcclxuICAgICAgICAgICAgICAgICAgICBcIi0tYnMtc2Vjb25kYXJ5LXJnYlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNvbG9yU2Vjb25kYXJ5XCIpXHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcbnZhciBwcmltYXJ5Q29sb3IgPSB3aW5kb3dcclxuICAgIC5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHksIG51bGwpXHJcbiAgICAuZ2V0UHJvcGVydHlWYWx1ZShcIi0tYnMtcHJpbWFyeS1yZ2JcIik7XHJcbnRoZW1lQ29sb3IocHJpbWFyeUNvbG9yKTtcclxuXHJcbi8vUmVtb3ZlIGltYWdlXHJcbmZ1bmN0aW9uIHJlbW92ZUltYWdlKGlkKSB7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiICsgaWQpLnJlbW92ZSgpO1xyXG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaW1hZ2UtcmVtb3ZlXCIpLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5maWxlX1VwbG9hZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgIH1cclxufVxyXG5cclxuLy9SZW1vdmUgQXR0YWNoZWQgRmlsZXNcclxuZnVuY3Rpb24gcmVtb3ZlQXR0YWNoZWRGaWxlKCkge1xyXG4gICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVtb3ZlLWF0dGVjaGVkRmlsZVwiKSkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhdHRlY2hlZEZpbGUtcmVtb3ZlXCIpWzBdO1xyXG4gICAgICAgIC8vIERlbGV0ZSBVcGxvYWQgUHJldmlldyBBdHRhY2hlZCBGaWxlc1xyXG4gICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcInJlbW92ZS1hdHRlY2hlZEZpbGVcIilcclxuICAgICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgZS50YXJnZXQuY2xvc2VzdChcIi5hdHRjaGVkZmlsZV9wcmVcIikucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgdmFyIHJlbW92ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcmVtb3ZlLWF0dGVjaGVkRmlsZVwiKTtcclxuICAgIHJlbW92ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZmlsZV9VcGxvYWQgXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vUmVtb3ZlIEF1ZGlvIEZpbGVzXHJcbmZ1bmN0aW9uIHJlbW92ZUF1ZGlvRmlsZSgpIHtcclxuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlbW92ZS1hdWRpb0ZpbGVcIikpIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYXVkaW9GaWxlLXJlbW92ZVwiKVswXTtcclxuICAgICAgICAvLyBEZWxldGUgVXBsb2FkIFByZXZpZXcgQXR0YWNoZWQgRmlsZXNcclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJyZW1vdmUtYXVkaW9GaWxlXCIpXHJcbiAgICAgICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIuYXVkaW9maWxlX3ByZVwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICB2YXIgcmVtb3ZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyZW1vdmUtYXVkaW9GaWxlXCIpO1xyXG4gICAgcmVtb3ZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5maWxlX1VwbG9hZCBcIikuY2xhc3NMaXN0LnJlbW92ZShcInNob3dcIik7XHJcbiAgICB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsQ0FBQyxZQUFZO0VBQ1QsSUFBSUEsY0FBYyxHQUFHLEtBQXJCO0VBQ0EsSUFBSUMsYUFBYSxHQUFHLFlBQXBCO0VBQ0EsSUFBSUMsVUFBVSxHQUFHLGlDQUFqQjtFQUVBLElBQUlDLG1CQUFtQixHQUFHLE9BQTFCO0VBQ0EsSUFBSUMsR0FBRyxHQUFHQyxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLE1BQWhCLEdB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\n//# sourceURL=webpack-internal:///./resources/js/pages/index.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/index.init.js"]();
/******/ 	
/******/ })()
;